var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","approx_n_unique","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","approx_n_unique","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","limit","","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","can_have_dtype","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","approx_n_unique","arg_sort","array","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","struct_","sub","","","","sum_reduce","tail","take","take_chunked_unchecked","take_materialized_series","","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_struct","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","ApproxNUnique","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Intersect","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Partitioned","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueCounts","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_csv_read_internal","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","approx_n_unique","","","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","bitand_assign","bitor","bitor_assign","bits","","bitxor","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","compile","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_ones","count_rows","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_cross","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse","try_parse_dates","try_parse_interval","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_counts","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parallel","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","approx_n_unique","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","_struct_arithmetic","add","add_to","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","drop","execute","fmt","from","init","into","mul","multiply","","rem","remainder","","sub","subtract","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[863,"polars::chunked_array::arithmetic"],[891,"polars::chunked_array::builder"],[1152,"polars::chunked_array::builder::list"],[1169,"polars::chunked_array::cast"],[1198,"polars::chunked_array::collect"],[1212,"polars::chunked_array::float"],[1214,"polars::chunked_array::from_iterator_par"],[1218,"polars::chunked_array::iterator"],[1273,"polars::chunked_array::iterator::par"],[1275,"polars::chunked_array::metadata"],[1559,"polars::chunked_array::object"],[1636,"polars::chunked_array::object::builder"],[1660,"polars::chunked_array::object::registry"],[1689,"polars::chunked_array::ops"],[1903,"polars::chunked_array::ops::arity"],[1939,"polars::chunked_array::ops::float_sorted_arg_max"],[1941,"polars::chunked_array::ops::gather"],[1944,"polars::chunked_array::ops::row_encode"],[1953,"polars::chunked_array::ops::search_sorted"],[1983,"polars::chunked_array::ops::sort"],[1990,"polars::chunked_array::ops::sort::arg_bottom_k"],[1991,"polars::chunked_array::ops::sort::options"],[2006,"polars::chunked_array::temporal"],[2014,"polars::chunked_array::temporal::conversion"],[2017,"polars::datatypes"],[3549,"polars::datatypes::categorical"],[3566,"polars::datatypes::categorical::revmap"],[3572,"polars::datatypes::categorical::string_cache"],[3591,"polars::datatypes::enum_"],[3609,"polars::docs"],[3611,"polars::error"],[3703,"polars::error::PolarsError"],[3707,"polars::error::constants"],[3710,"polars::frame"],[3994,"polars::frame::column"],[4272,"polars::frame::explode"],[4301,"polars::frame::group_by"],[4539,"polars::frame::group_by::GroupByMethod"],[4540,"polars::frame::group_by::GroupsProxy"],[4542,"polars::frame::group_by::aggregations"],[4555,"polars::frame::group_by::expr"],[4558,"polars::frame::row"],[4668,"polars::functions"],[4670,"polars::prelude"],[10087,"polars::prelude::AggExpr"],[10094,"polars::prelude::BooleanFunction"],[10097,"polars::prelude::DslPlan"],[10148,"polars::prelude::Expr"],[10183,"polars::prelude::FunctionExpr"],[10205,"polars::prelude::GroupByMethod"],[10206,"polars::prelude::GroupsProxy"],[10208,"polars::prelude::LiteralValue"],[10211,"polars::prelude::PolarsError"],[10215,"polars::prelude::StringFunction"],[10229,"polars::prelude::TemporalFunction"],[10231,"polars::prelude::_csv_read_internal"],[10274,"polars::prelude::_internal"],[10296,"polars::prelude::aggregations"],[10309,"polars::prelude::arity"],[10345,"polars::prelude::array"],[10364,"polars::prelude::binary"],[10381,"polars::prelude::buffer"],[10456,"polars::prelude::buffer::Buffer"],[10459,"polars::prelude::cat"],[10460,"polars::prelude::chunkedarray"],[10526,"polars::prelude::chunkedarray::string"],[10566,"polars::prelude::chunkedarray::string::infer"],[10597,"polars::prelude::cloud"],[10647,"polars::prelude::cloud::options"],[10656,"polars::prelude::compression"],[10674,"polars::prelude::datatypes"],[10955,"polars::prelude::datatypes::categorical"],[10972,"polars::prelude::datatypes::categorical::revmap"],[10978,"polars::prelude::datatypes::categorical::string_cache"],[10982,"polars::prelude::datatypes::enum_"],[10983,"polars::prelude::datetime"],[10986,"polars::prelude::default_arrays"],[10992,"polars::prelude::dt"],[11044,"polars::prelude::expr"],[11047,"polars::prelude::fixed_size_list"],[11067,"polars::prelude::float_sorted_arg_max"],[11069,"polars::prelude::function_expr"],[11246,"polars::prelude::function_expr::BooleanFunction"],[11249,"polars::prelude::function_expr::FunctionExpr"],[11271,"polars::prelude::function_expr::StringFunction"],[11285,"polars::prelude::function_expr::TemporalFunction"],[11287,"polars::prelude::function_expr::cat"],[11289,"polars::prelude::function_expr::pow"],[11293,"polars::prelude::function_expr::rolling"],[11324,"polars::prelude::function_expr::rolling_by"],[11355,"polars::prelude::gather"],[11358,"polars::prelude::interpolate"],[11362,"polars::prelude::interpolate_by"],[11363,"polars::prelude::mode"],[11364,"polars::prelude::nan_propagating_aggregate"],[11369,"polars::prelude::null"],[11400,"polars::prelude::row_encode"],[11409,"polars::prelude::schema_inference"],[11436,"polars::prelude::search_sorted"],[11442,"polars::prelude::series"],[11464,"polars::prelude::sort"],[11471,"polars::prelude::sort::arg_bottom_k"],[11472,"polars::prelude::sort::options"],[11487,"polars::prelude::strings"],[11544,"polars::prelude::udf"],[11550,"polars::prelude::utf8"],[11554,"polars::series"],[12033,"polars::series::amortized_iter"],[12057,"polars::series::arithmetic"],[12104,"polars::series::arithmetic::checked"],[12110,"polars::series::ops"],[12137,"dyn_clone::sealed"],[12138,"polars_core::datatypes"],[12139,"polars_core::chunked_array"],[12140,"polars_error"],[12141,"core::result"],[12142,"polars_core::series"],[12143,"core::ops::function"],[12144,"num_traits"],[12145,"num_traits::cast"],[12146,"polars_core::series::arithmetic::borrowed"],[12147,"polars_core::frame::group_by::proxy"],[12148,"polars_core::chunked_array::object"],[12149,"core::option"],[12150,"polars_arrow::array"],[12151,"alloc::boxed"],[12152,"core::iter::traits::iterator"],[12153,"polars_core::chunked_array::list::iterator"],[12154,"polars_utils::pl_str"],[12155,"alloc::borrow"],[12156,"core::marker"],[12157,"polars_core::series::amortized_iter"],[12158,"alloc::string"],[12159,"polars_core::datatypes::dtype"],[12160,"polars_arrow::array::binview::view"],[12161,"polars_core::chunked_array::ops::sort::options"],[12162,"polars_core::frame::column"],[12163,"polars_core::chunked_array::metadata::md_trait"],[12164,"polars_core::chunked_array::cast"],[12165,"polars_core::series::arithmetic::borrowed::checked"],[12166,"core::slice::iter"],[12167,"core::iter::adapters::map"],[12168,"alloc::vec"],[12169,"compact_str"],[12170,"polars_core::chunked_array::metadata"],[12171,"core::iter::traits::double_ended"],[12172,"polars_arrow::offset"],[12173,"core::fmt"],[12174,"core::iter::traits::collect"],[12175,"core::convert"],[12176,"polars_core::chunked_array::from_iterator"],[12177,"polars_arrow::bitmap::immutable"],[12178,"core::borrow"],[12179,"rayon::iter"],[12180,"polars_arrow::pushable"],[12181,"core::iter::traits::exact_size"],[12182,"core::clone"],[12183,"polars_arrow::trusted_len"],[12184,"polars_core::datatypes::any_value"],[12185,"polars_arrow::array::binary"],[12186,"std::sync::rwlock"],[12187,"polars_core::chunked_array::logical"],[12188,"polars_core::datatypes::time_unit"],[12189,"polars_core::series::series_trait"],[12190,"polars_core::chunked_array::iterator"],[12191,"polars_core::scalar"],[12192,"polars_core::chunked_array::metadata::guard"],[12193,"polars_core::chunked_array::metadata::interior_mutable"],[12194,"alloc::sync"],[12195,"core::ops::range"],[12196,"polars_core::datatypes::field"],[12197,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12198,"polars_core::chunked_array::ops::rolling_window"],[12199,"polars_ops::chunked_array::scatter"],[12200,"polars_utils::index"],[12201,"ahash::random_state"],[12202,"polars_utils::hashing"],[12203,"ndarray::data_repr"],[12204,"ndarray::dimension::dim"],[12205,"ndarray"],[12206,"either"],[12207,"core::any"],[12208,"polars_core::frame"],[12209,"polars_core::chunked_array::arithmetic::numeric"],[12210,"polars_core::chunked_array::builder::list::anonymous"],[12211,"polars_core::chunked_array::builder::list::boolean"],[12212,"polars_core::chunked_array::builder::list::primitive"],[12213,"polars_core::chunked_array::builder::list"],[12214,"polars_core::chunked_array::builder"],[12215,"polars_core::chunked_array::builder::list::binary"],[12216,"polars_core::chunked_array::builder::list::null"],[12217,"polars_core::chunked_array::builder::string"],[12218,"polars_arrow::array::binview"],[12219,"polars_core::chunked_array::builder::boolean"],[12220,"polars_core::chunked_array::builder::null"],[12221,"polars_core::chunked_array::builder::primitive"],[12222,"polars_core::series::implementations::null"],[12223,"core::hash"],[12224,"polars_core::chunked_array::collect"],[12225,"polars_core::chunked_array::float"],[12226,"polars_core::chunked_array::from_iterator_par"],[12227,"polars_arrow::array::boolean"],[12228,"polars_arrow::array::fixed_size_list"],[12229,"polars_core::chunked_array::metadata::env"],[12230,"polars_core::chunked_array::metadata::collect"],[12231,"bitflags::iter"],[12232,"std::fs"],[12233,"std::sync::mutex"],[12234,"polars_arrow::datatypes"],[12235,"polars_arrow::bitmap::utils::iterator"],[12236,"polars_arrow::bitmap::utils::zip_validity"],[12237,"polars_core::chunked_array::object::builder"],[12238,"polars_core::chunked_array::object::registry"],[12239,"polars_core::chunked_array::ops"],[12240,"polars_arrow::legacy::array::slice"],[12241,"polars_core::chunked_array::ops::arity"],[12242,"polars_arrow::array::static_array"],[12243,"core::error"],[12244,"polars_arrow::array::primitive"],[12245,"polars_row::row"],[12246,"polars_core::chunked_array::ops::search_sorted"],[12247,"polars_core::utils"],[12248,"chrono::naive::datetime"],[12249,"chrono_tz::timezones"],[12250,"chrono::naive::time"],[12251,"polars_core::chunked_array::logical::categorical"],[12252,"polars_core::chunked_array::logical::categorical::builder"],[12253,"polars_arrow::array::static_array_collect"],[12254,"std::path"],[12255,"std::ffi::os_str"],[12256,"bytemuck::zeroable"],[12257,"polars_core::chunked_array::logical::categorical::revmap"],[12258,"polars_core::chunked_array::logical::categorical::merge"],[12259,"polars_arrow::datatypes::reshape"],[12260,"core::cmp"],[12261,"polars_arrow::types"],[12262,"polars_arrow::datatypes::physical_type"],[12263,"chrono::time_delta"],[12264,"chrono::naive::date"],[12265,"polars_core::datatypes::into_scalar"],[12266,"polars_plan::dsl::expr"],[12267,"polars_core::chunked_array::logical::categorical::string_cache"],[12268,"polars_core::chunked_array::logical::enum_"],[12269,"polars_error::warning"],[12270,"planus::errors"],[12271,"std::io::error"],[12272,"alloc::collections"],[12273,"simdutf8::basic"],[12274,"regex::error"],[12275,"polars_parquet::parquet::error"],[12276,"polars_schema::schema"],[12277,"hashbrown::set"],[12278,"polars_core::frame::row"],[12279,"polars_core::frame::group_by"],[12280,"polars_time::group_by::dynamic"],[12281,"polars_lazy::frame"],[12282,"polars_arrow::record_batch"],[12283,"polars_core::series::from"],[12284,"polars_core::chunked_array::ndarray"],[12285,"polars_arrow::array::struct_"],[12286,"polars_time::windows::duration"],[12287,"polars_core::frame::column::scalar"],[12288,"polars_core::frame::column::partitioned"],[12289,"polars_core::frame::explode"],[12290,"polars_utils::idx_vec"],[12291,"rayon::iter::plumbing"],[12292,"polars_plan::plans::aexpr"],[12293,"polars_core::frame::group_by::into_groups"],[12294,"core::iter::adapters::copied"],[12295,"core::iter::adapters::zip"],[12296,"polars_arrow::legacy::kernels::rolling"],[12297,"polars_utils::float"],[12298,"polars_arrow::types::native"],[12299,"polars_core::frame::group_by::aggregations::agg_list"],[12300,"polars_core::frame::group_by::aggregations"],[12301,"polars_core::frame::group_by::expr"],[12302,"polars_core::frame::row::av_buffer"],[12303,"polars_utils::arena"],[12304,"polars_plan::plans::ir"],[12305,"polars_ops::frame::join::hash_join"],[12306,"polars_ops::frame::join::args"],[12307,"polars_plan::dsl::struct_"],[12308,"polars_ops::chunked_array::gather::chunked"],[12309,"polars_ops::frame"],[12310,"polars_io::csv::read::reader"],[12311,"polars_io::predicates"],[12312,"polars_io::mmap"],[12313,"polars_plan::dsl::selector"],[12314,"polars_plan::frame::opt_state"],[12315,"core::alloc"],[12316,"polars_plan::plans::anonymous_scan"],[12317,"polars_lazy::scan::anonymous_scan"],[12318,"polars_plan::dsl::expr_dyn_fn"],[12319,"polars_plan::plans::visitor"],[12320,"polars_plan::dsl::function_expr"],[12321,"polars_ops::series::ops::arg_min_max"],[12322,"polars_plan::dsl::array"],[12323,"polars_plan::dsl::list"],[12324,"polars_plan::dsl::function_expr::schema"],[12325,"polars_io::ipc::ipc_stream"],[12326,"std::io"],[12327,"polars_ops::chunked_array::binary"],[12328,"polars_time::chunkedarray::string"],[12329,"std::os::fd::owned"],[12330,"polars_ops::chunked_array::list"],[12331,"std::os::fd::raw"],[12332,"polars_ops::series::ops"],[12333,"polars_ops::chunked_array::strings"],[12334,"core::mem::maybe_uninit"],[12335,"polars_ops::chunked_array::strings::namespace"],[12336,"polars_io::csv::read::read_impl::batched"],[12337,"polars_io::csv::write::writer"],[12338,"polars_io::ipc::write"],[12339,"polars_io::parquet::read::reader"],[12340,"polars_io::parquet::read::read_impl"],[12341,"polars_io::parquet::write::writer"],[12342,"polars_io::parquet::write::batched_writer"],[12343,"polars_plan::dsl::binary"],[12344,"polars_plan::dsl::udf"],[12345,"polars_lazy::frame::exitable"],[12346,"hashbrown::map"],[12347,"polars_plan::dsl::cat"],[12348,"polars_ops::series::ops::round"],[12349,"polars_time::series"],[12350,"polars_lazy::scan::csv"],[12351,"polars_lazy::scan::ipc"],[12352,"polars_lazy::scan::ndjson"],[12353,"polars_lazy::scan::parquet"],[12354,"polars_time::chunkedarray::rolling_window"],[12355,"polars_time::windows::bounds"],[12356,"polars_time::windows::group_by"],[12357,"polars_time::windows::window"],[12358,"polars_io::csv::read::options"],[12359,"polars_io::csv::write::options"],[12360,"polars_io::ipc::ipc_file"],[12361,"polars_io::json"],[12362,"polars_io::parquet::read::options"],[12363,"polars_ops::frame::join::asof"],[12364,"polars_io::parquet::write::options"],[12365,"polars_ops::frame::join::iejoin"],[12366,"polars_ops::series::ops::interpolation::interpolate"],[12367,"polars_ops::series::ops::is_between"],[12368,"polars_ops::series::ops::rank"],[12369,"polars_plan::plans"],[12370,"polars_plan::dsl::arity"],[12371,"polars_plan::dsl::function_expr::boolean"],[12372,"polars_plan::dsl::function_expr::cat"],[12373,"polars_plan::dsl::function_expr::datetime"],[12374,"polars_parquet::arrow::write"],[12375,"polars_plan::dsl::function_expr::pow"],[12376,"polars_plan::dsl::function_expr::strings"],[12377,"polars_plan::dsl::function_expr::struct_"],[12378,"polars_plan::dsl::functions::temporal"],[12379,"polars_plan::dsl::options"],[12380,"polars_parquet::parquet::metadata::file_metadata"],[12381,"polars_plan::plans::lit"],[12382,"polars_plan::plans::options"],[12383,"polars_arrow::legacy::kernels::time"],[12384,"polars_lazy::scan::file_list_reader"],[12385,"polars_io::cloud::options"],[12386,"polars_parquet::parquet::metadata::column_order"],[12387,"polars_ops::chunked_array::binary::namespace"],[12388,"polars_io::ndjson::core"],[12389,"polars_parquet::parquet::metadata::row_metadata"],[12390,"polars_ops::frame::join::cross_join"],[12391,"polars_lazy::dsl::eval"],[12392,"polars_time::chunkedarray::date"],[12393,"polars_time::chunkedarray::datetime"],[12394,"polars_time::chunkedarray::duration"],[12395,"core::ffi::c_str"],[12396,"core::default"],[12397,"polars_parquet::parquet::metadata::column_chunk_metadata"],[12398,"polars_core::series::ops"],[12399,"polars_plan::dsl::dt"],[12400,"polars_ops::series::ops::various"],[12401,"polars_arrow::scalar"],[12402,"polars_lazy::dsl::list"],[12403,"crossterm::command"],[12404,"polars_io::shared"],[12405,"polars_plan::plans::apply"],[12406,"polars_plan::dsl::function_expr::array"],[12407,"polars_plan::dsl::function_expr::list"],[12408,"polars_plan::dsl::function_expr::binary"],[12409,"polars_plan::dsl::function_expr::range"],[12410,"polars_parquet::arrow::read::statistics"],[12411,"alloc::ffi::c_str"],[12412,"polars_arrow::array::growable::structure"],[12413,"polars_core::schema"],[12414,"polars_arrow::legacy::array::default_arrays"],[12415,"polars_arrow::buffer::immutable"],[12416,"polars_arrow::array::list"],[12417,"polars_core::named_from"],[12418,"polars_ops::frame::join"],[12419,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[12420,"polars_time::chunkedarray::time"],[12421,"core::num::nonzero"],[12422,"polars_arrow::array::struct_::iterator"],[12423,"polars_ops::frame::join::asof::groups"],[12424,"polars_ops::chunked_array::list::namespace"],[12425,"polars_plan::dsl::name"],[12426,"polars_parquet_format::parquet_format"],[12427,"polars_core::utils::supertype"],[12428,"polars_io::options"],[12429,"polars_core::chunked_array::ops::aggregate"],[12430,"polars_core::chunked_array::ops::aggregate::quantile"],[12431,"polars_arrow::legacy::index"],[12432,"polars_plan::plans::ir::scan_sources"],[12433,"polars_ops::chunked_array::strings::split"],[12434,"core::pin"],[12435,"core::io::borrowed_buf"],[12436,"polars_parquet_format::thrift::varint::decode"],[12437,"polars_time::chunkedarray::rolling_window::dispatch"],[12438,"polars_time::round"],[12439,"polars_parquet::parquet::metadata::schema_descriptor"],[12440,"polars_core::chunked_array::ops::aggregate::var"],[12441,"polars_plan::dsl::string"],[12442,"polars_ops::series::ops::to_dummies"],[12443,"polars_time::truncate"],[12444,"polars_io::csv::read::schema_inference"],[12445,"polars_time::upsample"],[12446,"polars_core::hashing::vector_hasher"],[12447,"alloc::collections::btree::map"],[12448,"polars_io::csv::read::parser"],[12449,"polars_utils::mmap::private"],[12450,"polars_parquet::arrow::read::deserialize::utils::filter"],[12451,"polars_ops::chunked_array::array::namespace"],[12452,"polars_ops::chunked_array::array"],[12453,"polars_io::csv::read::buffer"],[12454,"polars_time::chunkedarray::string::patterns"],[12455,"polars_time::chunkedarray::string::infer"],[12456,"polars_io::utils::compression"],[12457,"polars_arrow::legacy::array::fixed_size_list"],[12458,"polars_plan::dsl::function_expr::rolling"],[12459,"polars_plan::dsl::function_expr::rolling_by"],[12460,"polars_arrow::legacy::array::null"],[12461,"polars_arrow::bitmap::mutable"],[12462,"polars_arrow::array::utf8"],[12463,"polars_core::series::iterator"],[12464,"alloc::rc"],[12465,"polars_core::series::arithmetic::list_borrowed"],[12466,"polars_core"],[12467,"polars_core::chunked_array::struct_"],[12468,"polars_core::chunked_array::iterator::par"],[12469,"polars_core::chunked_array::object::extension"],[12470,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12471,"polars_core::chunked_array::ops::gather"],[12472,"polars_core::chunked_array::ops::row_encode"],[12473,"polars_core::chunked_array::ops::sort"],[12474,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12475,"polars_core::chunked_array::temporal"],[12476,"polars_core::chunked_array::temporal::conversion"],[12477,"polars_core::chunked_array::temporal::time"],[12478,"polars_core::chunked_array::logical::date"],[12479,"polars_core::chunked_array::logical::datetime"],[12480,"polars_core::chunked_array::logical::decimal"],[12481,"polars_core::chunked_array::logical::duration"],[12482,"polars_core::datatypes::aliases"],[12483,"polars_utils::aliases"],[12484,"polars_core::chunked_array::logical::time"],[12485,"polars_error::constants"],[12486,"polars_core::functions"],[12487,"polars_core::frame::horizontal"],[12488,"polars_arrow::datatypes::schema"],[12489,"polars_io::utils::other"],[12490,"polars_io::parquet::metadata"],[12491,"polars_arrow::legacy::prelude"],[12492,"polars_arrow::legacy::array"],[12493,"polars_io::path_utils"],[12494,"polars_ops::series::ops::rolling"],[12495,"polars_parquet::parquet::write"],[12496,"polars_io::utils"],[12497,"polars_ops::frame::join::general"],[12498,"polars_io::csv::read"],[12499,"polars_io::parquet::read"],[12500,"polars_ops::series::ops::abs"],[12501,"polars_plan::dsl::functions::selectors"],[12502,"polars_plan::dsl::functions::horizontal"],[12503,"polars_plan::dsl::functions::arity"],[12504,"polars_plan::dsl"],[12505,"polars_plan::dsl::functions::range"],[12506,"polars_plan::dsl::functions::index"],[12507,"polars_ops::chunked_array"],[12508,"polars_plan::dsl::functions::coerce"],[12509,"polars_plan::dsl::functions::syntactic_sugar"],[12510,"polars_time::base_utc_offset"],[12511,"polars_time"],[12512,"polars_ops::series::ops::clip"],[12513,"polars_io"],[12514,"polars_ops::series::ops::horizontal"],[12515,"polars_lazy::dsl::functions"],[12516,"polars_plan::dsl::functions::concat"],[12517,"polars_ops::series::ops::index"],[12518,"polars_ops::series::ops::bitwise"],[12519,"polars_ops::series::ops::cum_agg"],[12520,"polars_ops::series::ops::diff"],[12521,"polars_time::dst_offset"],[12522,"polars_ops::chunked_array::strings::escape_regex"],[12523,"polars_ops::series::ops::floor_divide"],[12524,"polars_ops::chunked_array::strings::concat"],[12525,"polars_ops::series::ops::duration"],[12526,"polars_ops::chunked_array::datetime::replace_time_zone"],[12527,"polars_time::date_range"],[12528,"polars_ops::series::ops::interpolation"],[12529,"polars_ops::series::ops::interpolation::interpolate_by"],[12530,"polars_ops::series::ops::is_first_distinct"],[12531,"polars_ops::series::ops::is_in"],[12532,"polars_ops::series::ops::is_last_distinct"],[12533,"polars_io::parquet::read::utils"],[12534,"polars_ops::series::ops::negate"],[12535,"polars_ops::series::ops::not"],[12536,"polars_ops::series::ops::int_range"],[12537,"polars_plan::dsl::functions::repeat"],[12538,"polars_ops::chunked_array::repeat_by"],[12539,"polars_ops::series::ops::replace"],[12540,"polars_ops::chunked_array::strings::strip"],[12541,"polars_ops::series::ops::unique"],[12542,"polars_io::partition"],[12543,"polars_io::csv::read::read_impl"],[12544,"polars_io::parquet::read::predicates"],[12545,"polars_io::parquet::read::mmap"],[12546,"polars_time::chunkedarray"],[12547,"polars_io::cloud"],[12548,"polars_ops::chunked_array::mode"],[12549,"polars_ops::chunked_array::nan_propagating_aggregate"],[12550,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`00000000000010000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Gb000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhHb0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541G`777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cf2222222222`AGn0000000000000000000000````AH`00AHb00000001```00`0`10000AId`````````````````````````````0AHh``AIfAJd33333DM`4``0``4FdFl6AHd6AHj077AHlAHn0AI``65;65;AIb0076<76<76<7676<76<7676<76<::777666AIh0`AIjAIl`:9?::99?`AInAJ``AJb0??=<AId>=0>=00AJfAJhFdFlAJd021AHd0AJj1143?43AJlAIf065?2AJn0AK`AKb`AKd0`0AKfAKhAKj0`AHn0AKl<AKnAL`ALbFdFlAId210210210AI`7321323232232232`ALd`ALnALjALf``````````````````````````````````````````````AMd00`0`000000000000000000`00000`````>>````8787878787>>```````````B@b`JlEnDn```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOh`3DMbDMd````B@j``9``875``875``875``875``5`666555AOn986``4``6B@lLd1010Al<;9`<;`<``:3:```````````BAh``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALh0<0:L`6:AMnB@`JlB@bEnB@dOj;NjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lAMnJl01L`1AhCbLhNjNlFfO`NdObKlLbEhEjAnBbBhAN`AMn110ANb0ANd0EnJlL`0Dd0003OjANjALh3433:BBj5DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDdAN`BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lEnAOh`JlAOl13L`0100000AMn`LhNjNlFfO`NdObKlLbEhEjDd=AOnAOh>B@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDdL`AOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDdL`AOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDd4OjBA`00026En500`L`4BAbAOnAOhJlB@b6;99AN`BBj77DMfDjAhjCbLhCd=<;AMnB@`<;EnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDdAN`BBjL`0DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lL`AhCbLhNjNlFfO`NdObKlLbEhEjAN`Dd1BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lAOlL`0000AMnJlOj0Dd0`0AOn3B@bEn0B@d5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOhAOjAN`BAb9983B@`<<8776;55B@hB@j0AGdB@l>>>>>6BBjL`00DMfDjAhjCbLhCd>AOnAOhAMnB@`Jl00000B@bEn000B@dOj00Ld0NjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGd00B@lEnAMn0L`01Dd00000001111110002ALh00030AOh9833333AOl544444051DnAhjCbLhCdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fAOhB@j0AMnEnJlBBfALh444444Dd3B@b5OjLd9AGdB@l8L`09:6AN`BBj2DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lEn2DdAN`BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lL`AMnBBjBBh333332JlDdEn00200055020AOh311101319313131911131111319ALh702173777777``2B@b38`BAb::9:::AhCbLhNjNlFfO`NdObKlLbEhEjAMn0Oj0L`0DMbDMdAN`33333333BAb5B@hB@j06B@dBBj:::::::188DdJlLd6;=;8AhCbLhNjNlFfO`NdObKlLbEhEjL`0AOh111Oj2222BBjAMn0Jl55505AhCbLhNjNlFfO`NdObKlLbEhEjL`00?EnOjLd20AMnAGd110Dd6AOnAOh4B@`JlB@b:B@d:9NjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lEn2L`Dd111Jl3Ld7133ANb0ANd0BA`00045AN`BBj8DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@h0B@jAGdB@lDdAN`BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lJlEnDd21Ld61AN`BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@l1AMn0ALh10En1DdAN`BBjL`DMfDjAhjCbLhCdBAbAOnAOhAMnB@`JlB@bEnB@dOjLdNjNlFfO`NdObKlLbEhEjKnLnAnBbFhBhLjLfLlB@fB@hB@jAGdB@lDMbDMdALhDd00Jl`````AOh`AOn10``AOj`````2121``BCf0000`00`0000000`0`BCh0000000000000000``BCln000DMh`112101```11111112BCj302302`223002302302`300223002222222`302302`0``````02302302023023022DMjDMl10```BEb`0BE`11``0``01AAn00000000000000000BFfBFh34210342222342342342`2224210342103421034222222222242224442`22222223422103422222222222222222`222242222222222222103422103421022222222222222222222222102222222222222222`22222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Fj0`0BGl11111111111111111111111110111101111111111111010101010111010101111101011111101010111111111111111010111101111111110111111110101BDn1222112222222211222222222222222121212222222222222222122212221222222222212222222222122222122122222222222222212222221222222222221222222212221222222`BHb000000000000000000000000000`BHh0``0``````BI`C``2`22222222210`222BHd1BEh40`1023BIjBHlBHj453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BId4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DMnDN`0``````````BJbBJd0`BJf0BJhBJj``1011110101010101010`10011010101010BEf211210210210210210`02102102100000022110`2102102121021```210210210210210``BMnBLhBBl`BOj1CHnCDl01`CEb`CAl5```CEn4AMdB@bBEb7`;``;;`CJlJlEnDn``?``````````7```?```CFdCGl`CFhAIdBMnCIhCIb``CK`:9AGd``BBl5`;``<``152<;1`````CClCGj``CFn`DNbCHjBGfBLn000CH`8;`=JlEn``````1`CIfBMn?`````````````````````````````````````0``0CEl`=`nCFd?`CIb``24CIh0031BOjBHh2CEn```````888884`````<CCnCD``DDb7CK`?>AGd0``1`9JlEn``;`1`;31022``CGlDNbCHj`5BMn`CH`CAl22`CHlBBln`CIb=;:<`````BLnDBbCIh>=>77DNdA@`DMh38`BLh9CJh```=>AGd66688````;CIj0`````BMn``0CH`>9BOjBHhBEb66`CK`B@b81JlEn:``310:``8CAlBGfCFhAId<CD````CEnAHhBBl``0BMnCIf`CI``AOh``CH``BHh``````CJhCFl?0?CFn`44DnDMbDMdCIh0DNdA@`CIb`CEn``n=DDbBI`C``````BOjBHh`BBl```B@j``8`CK`B@b``1JlEnAGd``4210``4210``4210``BMn0`BLh2```````>````````CHn0`000`0CIb1Dn222001AIfAJdCH`CJh`````CEl``DIdCIj``1```2BBlCEh`>`>``>BOjBHhBEbDBb``````DNfCClCCnCEnCGjAMd`;CIh0AOn`CGhDNdA@`JlEnAGd````BMn````````BBl`AOh`CAl0`CDh984<CFl202CFn0CFb08CH`CGlBOjAIdBHh1<210<20CIbB@lLdDNdA@`443287656BMn?50?CD`6CDjCIjCAlBLn`=;CHlCDl``==<;:AlCFhCGh<;CEb;`0`n``1CClDM`CFdCGjBEbCHn>>BBl`CK`DBbJlEnAGdCKjBMn``````43`4`DMhAIdCFb0```CAlCGlCIb<ABjnBLfCJf``Dn`BLn0```````FjAOn3```````:```````````BAh`?`CFdCIj`BOjBHhBIl```>`8DBbCKjCGlBMn0CK`1```BBl`922CIh33CIb4``14DNfCClCCnCEnCGjAMdCJf`;;```````BLh8<<``CFdBLn0n01CD``FjABjCH``````44```?B@l1`BBl=````CK`5``````BMn8000CDj553CIhBI`C```CFnDM`:88```B@j555`CIf`6``BOjBHhB@b<<JlEn`n``>```2`<<<<<<`21AGd``?1``3`BLhBBlCIj98BMnCD`BLnCIh`3``5`2CIbCK`<;99``1```922`2511111111ABjBAhCAl`473?><``3?><``3?><``3?><````CFnCH`>`::`En?```;8`CDhAGd0=ALh0BOjBHhBIl``CD`>>`BBl`01``CIjCIb=0CEhAIdDn:?`CBdBFjBLlBMfCC`CCbCCdCCfCChBEjBG`CCjBGjCClCCnCD`CDbAB`A@hCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKj`BFjBKd`00``BKh1:AHdBKjBKl000BKn6BL``BBlBLf1BLhBGj0BLj1BLl5`5`5BLn`N`CCfBMbCJdBMd00CIl<BKjBFj0>`>ACdACf1010AHh<BBl`0AHj011`22AHl27`BGhBN`BNbBNd62106AHn7<`0AI`8=`BNfCJd`:ANb880ANd099`BNhBMdBKjBNl=1=MjBNnBO`000N`BOf11BOj2ANjBOl9ALhBOn`766`BBlC@b0`CDnBL`C@fC@lCA`CAd4`7`BLhBLn00000100CBhBNbAMfBMbCAhC@d<CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`0CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCBhBNbAMfBMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjBFj8BKj`ACb2CCbCCfCJbCAnCB``BNlCBb2CBd`9:AIbBBlAOl=2201`1N`2CBj3A@bCBlBGhCBnBKj10CDd`11`9`9`9;BFjBLlBMfCC`CCbCCdCCfCChBEjBG`CCjBGjCClCCnCD`CDbAB`A@hCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKjBKjCBdBFjBLlBMfCC`CCbCCdCCfCChBEjBG`CCjBGjCClCCnCD`CDbAB`A@hCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCBdBFjBLlBMfCC`CCbCCdCCfCChBEjBG`CCjBGjCClCCnCD`CDbAB`A@hCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCChBEjBG``CKlCC`CCdCCbCCfBGjN``BMbCElBKf``BFj`BA`000ADnAE`100033`CJj0CDdBKnCDf<;CDlBLn`CEfCFjCH``C@b`CKlCC`````BNbCLf4BNd9155``BFjCLhBBl88`````BKd`CJj4CLl0`3``3`3`3``3CLn>`CE````0`````CM`CMbCBlCIlCMdBGjCIn1CJ`CKfCDfN`0BFjBMfCCbCCfCMfBEjBG`CD`CDd:CDhCDnCE`CEbCEfCEhBKfCEjCElCFbCFdCFfCFhCFjCFlCFnCG`CGjCGnCH`BBlBMj00CIdCIlCInCJbCJdCJfCJhCJnBLnN`000CKbCKdA@bBGfBAlA@```CBhBNbAMf0BMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMj0CHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`0CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCBhBNbAMf0BMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCGnFdFlCH`BFj0001N``BEh`CKd`BNdBBlBLn7CMnCIdBLf4BLj5999CBhBNbAMfBMbCAhC@dBL`CBd0BFj0BLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`0CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjBBlBFj01BKj``2AOl1;:9Oj:``CDd`CIdBLnN`0CDfCLf0```CNh2CChBEjBG`BGjCClCCnCD`AB`>:CDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnBOjBBl0CHjCHlCAlBMj0CHnCI`CIbCMnCIdCIfCIhCIjBMnCJ`CJbCJdCJfCJhCJlCJnBLhN`00CK`CKbCKdA@bBGfBGh0MjBAlA@`BIlCKfCKhCKjBBlAIf0BEj00BG`00BGj00CCl00CCn00CD`00AB`00CDd00CDf00CDh00CDj00CDl00CDn00CE`00CEb00CEf00CEh00BKf00CEj00CEl00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CFn00CG`00CGb00CGd00CGf00CGh00CGj00BBl00CHl00CAl00CHn00CI`00CIb00CId00CIf00CIh00CIj00CJ`00CJb00CJd00CJf00CJh00CJl00CJn00BLh00N`00CKb00CKd00BGf00BAl00A@`00CKj00``CNnBEj?BBl09```BFjBNb1AIh30`BLn4C@bA@h111ACdCBd701BKjBKh00BGhCDd;<`;<<AIjAIl5=>999COdCOfACfAOjBMbBL`CKlCC`CCdC@fCOhBNhCOjC@lCOlCOnCLhCA`CAdACd=<;9CAb`BFjBNdBBlBKj`1CE`0`BMjCBj44`N`BNlCBbCAnCChBEjBG`CCjBGj0CClCCnCD`AB`A@hBMdCDdCDfCDhCDjCDlCDnD@`CE`CEbCEdCEfCEhBKfCEjCElCEn0CF`CFb0CFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnBBl0CHjCHlCAl0BMjCHn0CI`0CIb0CMnCIdCIf0CIh0CIj0BMn0CIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLn0000N`00CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKj`;CCh:`BMbCJdCJb`BBlCBhBNbAMf6CAhC@dBL`CBdBFj00BLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`0A@hCAdDFfCDdCDfCDhCDj0CDlCDnCE`CEbCEdCEfCEhBKf0CEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBl0000000000000CHjCHlCAl0BMj0000000000CHnCI`CIbCMn0CIdCIfCIhCIjBMn0000CIlCInCJ`CJbCJdCJf0CJhCJjCJlCJnBLh0000CB`BLnN`00000000000000000CK`0CKbCKdDBbA@bBGfBGh0Mj00000000000BAlA@`BIlCKfCKhCKjDAfBLn000DAhDAlDAnAMf04N`DNh00ADj13310732CKdCLh4422DBb66BMjDBdALh0`AIn1CIdBFjDBfAJ`5BGhCB``BBl`00N`BKjBNbBNd<4AJbAOl10CBh<CK`DnCDb00CMhBMhDAf?BNf`CA`=>>==5CDd`D@`BBfALhBKjCKlCC`CCfBFjDCb11``BIdAJdBBlN`21=9BEjBG`BGjCClCCnCD`CDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnBOjBBlCHlCAlCHnCI`CIbCIdCIfCIhCIjBMnCJ`CJbCJdCJfCJhCJlCJnBLhN`CK`CKbCKdBGfBAlA@`CKjDCf00BLlBNdBBlC@b0CCbCCf`DChCMbCBlCIlCMdCInBMbBKfAB`CDd```=`C@fCDnBEj>=21N`0CJnBHb`3BG```COnCLhBMf:CBhBNbAMfBMbCAhC@dBL`CBdBFjBLl:CC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjAB`ACdBFjDBfA@hCB`BLn````BBl``011CBhBNbAMfBMbCAhC@dBL`CBd=BLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjBDn?78AMfN`DFdDBnBBlBLn>DClBNd66CDdBBhBFn9MjBGd:7CAlCEn`:`1BGj1CId;BKjCAb>`AJf?345`??`AJhBBlCM`CMbCBl3=3`73`7A@h4>AB`BAl`N`CK`BFnCNh35CFb4BGj;:9ALhBLnBGhDAf2DDbBNbBFjBNdDBfDDd3DDf0BMbBKf1BKhDDhCJj0BEj`:9ALhBBlBKjDDl>N```CFfBFj?<ABj00`5BNd7BGh37FdFlCE`;`DDnBGjDE`CK`MjBBl0<BLlCCdCLhCCfCDdCF`6DDf00000000000000000000AJd8N`19CDnCEfCEjCFjFdFl``6BFjDDhBBl`0BNf0BMj020302`22`1?1111CHjCK```DAf`BNb8BNdAHd8DEhBKjCJjCMnCId`?65=3`7?6AJj>4DEj5COh`BAlCGnCKhCIlCMdCInCBl21`BNbBFjBNdAHdBBl1CChCJ`A@bDEhBKjCMnCIdDChCMb>CIlCMdCInCDf`=CM`5CBl5BGj0BLf1BBlBLjFdFlBKjCKlCC`CCdBMfCCbCCfDFfCDdC@f1BNbBNdAI`BBl==09CB`OjBAl33`DChCMbCBlCMdBGjCInN`CFb3;``3DEl<<BNfDMbCOdCOfDMdDEnAMfBMbBL`CC`CCdC@f;COhBNhCOjCMfC@lBGjCOlCOnCDbCLhCAbCA`CAdBKfBMjCIlCInBLhCB`N`BGhMjBAl332AJlBKjCDj6`05CC`CCd28888108888DFdDBnBMdCAhC@dCAbBBl0`0BLnAIf0``AB`A@hCE`?BFj6CMnCIdCDfFdFlCA`CJjBEjBG`CDbAIhBMbCJnBHbCG`0?CB`BBlBKjCM`CMbCBl0CHdCHhDFf77`CCfCF`CKdBGj9DCh9CDd22N`1BEjBG`BBl33````0:DDh0`CKhDEh3BFj8BGh88`1AJj6DEjBKjCM`CMbCBl>CDfCE`0CDdDFl?N`0CA`1111CKl:CC`CCdCCbCCf8CKd?`AJn0BLfBBlBLjBLn`BKjBFjBKh``5`C@b60BNf11``7`7`CB`AK`6BNb6BNd;CFfBMbDCb:>AKb?<?DGdBBl1010100010101010101010101010DGfCBj2CDb0130`CFjCJjCKlCC`CCdBMfCCbCCfCDdCJd0DDfBMj??BMdBFj00000DGhAKd0COhBNhCAbCA`7CJj?=DFf=CF`2`BLn?:`DChCMbCBlCIlCMdCInN`BFj00CDfCE`CDn`AKd<4CA`0CAdCOhBNhCOn4COdBBlBGhAKfBKjBNb?BNd5AKhBFj7BKf8ACf692222CLfBMfCDdCKb1:68=<<5AKj=0=====`AHn;8:??80<N`CKlCC`CCdC@bBKjBGh022`2`2BBlBEj>>CFjBNbBFjBNdAKl68DGn9A@h8;;`;;;;;CFfCBlCJb;``>`>`>`>`>N`<BLf=BLhBLn0BLjBMbDDhBKf01`BNbBFjBNdAHdBBlDEhBKjBMjCAl=N`8BLl86AKn5DHb066AL`7BGh`CHbCHfCE``CIlCIn1CBlBFjCH`1CK`BNdDAf;ALb5DHfBKnBBlC@bBNb1DDhAB`CBd=BLlBMfCC`CCbCCdCCfCChBEjBG`CCjBGjCClCCnCD`CDbAB`A@hCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdA@bBGfBGhMjBAlA@`BIlCKfCKhCKjBBlBNfCBlBGjCEnCFb5CAlCHnCI`CIbCIfCIhCIjBMnN`DAfCKdC@b0DDhCEfCFjBLnCFf0BFjBGh000``ABj00DHhBGj0CDb10CDf21ANb660ANd077BA`000ADnAE`1000CBhBNbAMfBMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`0CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCJjDAfCBhBNbAMfBMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCDdBNf0BBl11DElCGbCGdCGfN`?00000BGjCDf122BNlCAnBMh`4CEnCFb<CAlCHnCI`CIbCIfCIhCIjBMn??CBhBNbAMfBMbCAhC@dBL`CBdBFjBLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKjCf`BLnAI`BNbBFjBNdBBlBKj`13432133N`0?CDd3DI`0CA`CCfCF``BMbBKfBGh0ALhMjCNh=CJnBHb4545BNbBFjBNdAKlBBlBKjDGn187DIb0CJjN`CBh:AMfBMbCAhC@dBL`CBd?BLlBMfCC`CCbCCdCCfDFdC@fBNfDBnCOhBNhCOjCMfCChBEjC@lBG`CCjBGjDIdCOlCClCOnCCnCD`CDbBNdCLhDDhBKhCAbCA`AB`A@hCAdDFfCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhBKfCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnDE`CH`CHbCHdCHfCHhBOjBBlCHjCHlCAlBMjCHnCI`CIbCMnCIdCIfCIhCIjBMnCIlCInCJ`CJbCJdCJfCJhCJjCJlCJnBLhCB`BLnN`CK`CKbCKdDBbA@bBGfBGhMjBAlA@`BIlCKfCKhCKj>CM`CMbCBl10CD`BGjCIn1?`CHdCHhCChCJ`A@bBMbCIlCA`CCdC@fCOnCC`DMbDMdCLhCDd47BFjBKf111COhBNh<4DFf49CDfCOjC@l1CMf1CAd90C@f0CIlCInCC`8BNf1?19196BKh55322CDd>CA`65654CCdCOnCLh4COh483835COl3<96BAl<;;<;:CDf=CKl<<774BNh6:6:>C@f>3BFjC@l=9=49<183:9<=1CC`3630>50<:>2CAd6311==:5;>?BNf2>=<CDd3?>=0CIlCIn58;75252CA`8;6CCd6BKf;448>8>:BGh0ALh156<ABj00000000000000000N`CEfCFj`22BBlBKjCM`CMbCBl?`ALdDNjDNlDNn2102DO`DObDOdDOf0DOhDOjDOlDOnE@`E@bE@dE@f55E@hE@jE@l14;3E@n:EA`49EAbEAd0>EAfDOf240;4:029513622><??>;EAhEAjEAl0EAnEB`4EBbEBdEBfEBh3EBj528EBl1EBn11098432323570;5EC`ECbECd0ECfEChECjEClECn01ED`1EDbEDdEDfEDhEDjEDl697DMnDN`0EDn00DMjDMl10EE`EEbEEd21EEfEEhEEjEEl03421EEn0CLd00``0DIl101`11100101010`10101010``1010101`01DIn00`00`000`0000`0`0000``````````BJbBJd0`ALnALjALf``````````````````````````````````DJd000000000000000DJf`CAj000000000000000DJh`0`00`0000000000000`00EF`EFbEFd32103210321032103321032103`21033210321032103`2103EFf00````````BO`0000CChCM`CMbCMd3DCh213232114021320213230232DGd0000000000000132`433543`DJl0000``007777DJj8111111111111111`11111111`DKd``DJn000000000`0000DK`11111211111DKf0``0000CKn010100000101010100000110001010`001010101011``11110DKh`00000000000`0000B@b`JlEnDn```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOh`2DMbDMd````B@j``8``764``764``764``764``4`555444AOn875``4``5B@lLd1010Al;:8`;:`;``939```````````BAh``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALh0;0ANb0ANd0ANj3`AOl0`BA`000`1Oj`AOj7777733DnBBf9BBh::```4DMbDMd;;::7777<<<10<`````AOh`AOn10``7`````1010````````````DAhDAlDAn`CNf00000000000000000000000000000000000000000000000000`BJf0`DKj000000000000000000``BMnCHn000111111CIhCIb33`03`CIf4144142221244444111114441224222CIj055355`51CI`443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`3344463333333336664633133````DO`DObDOdEC`ECbECd0ECfEChECjEClECn01ED`1EDbEDdEDfEDhEDjEDl697EE`EEbEEd21EEfEEhEEjEEl03421EEn0`CI`CIf0`0DKl000`00000000000000000000000000DKn000`00000000000000000000000000````CGh0`````````DL`00000000000000000000000000000``````````DHn000000000`0000``000000000AMd00`````DLdCBl000000000000000000`````AKj0````FdFl1010101022```BOnC@b0000000``000000000`0000000`0`000`00000`0`0`0`0`00000`CB`0000``EFhEFjMb``0``AIfBH`2````02AbBKj111111`0101100`110010011101111111111111111DLj3520352112222122121122521525222222035220352222203521125242224222225552222221211522203522222222222222222222222222222222222222222222222222222222222222122111122222215222222`2035203522220BFn32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`2332223332333262333322331233223223333333332332332223333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000DLn00`0```BLf111`0BLjBn33`3333321033333321021021033333``CBnGd10CNb0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{An}}}}{f{B`}}}}{{{l{Bb}}{l{Bb}}}}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bh}}}}{f{C`}}}Ab}{{{f{{l{Cb}}}}{f{C`}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{C`}}}AbCf}{{{f{{l{Bb}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{Bh}}}}}d}{{{f{{l{Bh}}}}}{{Ch{d}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{{Ch{{f{B`}}}}}{{Ad{{Ch{{E`{B`}}}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{Ch}{{Ad{Ch}}}}Ed}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Eb{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Ed}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{E`{{Bl{Bj}}}}}}}}}}Ed}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Cb}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{Cb}}}}c}{{l{Cb}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{c}}}}e}{{l{An}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{An}}}}{f{Eb}}}{{l{An}}}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}Al}{{{f{{l{Bh}}}}{f{Eb}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{Eb}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{Eb}}}{{l{e}}}AlDn}{{{f{{l{An}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bb}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bh}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Af{{f{{Bl{Bj}}}}}{{Ad{{f{{Bl{Bj}}}}}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{B`}}}{{Ad{{f{B`}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{Ah}}}}{f{Eb}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cb}}}}{f{Eb}}}{{A`{{l{Cb}}n}}}}{{{f{{l{Bb}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{{Bl{Bj}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bh}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bl{e}}}}}bCf{}{{Eb{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{c}}}}g{f{Df{Bl{e}}}}}bAl{}{{Eb{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{{f{B`}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bl{c}}}}}b{}{{Eb{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{Ab}{{Ad{Ab}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Eb{{f{{Bl{Bj}}}}}{{Ad{{E`{{Bl{Bj}}}}}}}}Ed}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Eb{{f{c}}}{{Ad{c}}}}Ed}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{{f{B`}}}{{Ad{{E`{B`}}}}}}Ed}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Eb{d}{{Ad{d}}}}Ed}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{F`{f{B`}}}{{Ad{F`}}}}Ed}}{{{f{{l{c}}}}}FbDn}{{{f{{l{An}}}}Fd}{{l{Ff}}}}{{{f{{l{Fh}}}}Fd}{{l{Ff}}}}{{{f{{l{j}}}}Fd}{{l{Ff}}}}{{{f{{l{Bh}}}}Fd}{{l{Ff}}}}{{{f{{l{Bb}}}}Fd}{{l{Ff}}}}{{{f{{l{c}}}}Fd}{{l{Ff}}}Al}{{{f{{l{An}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bb}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Fh}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}Al}{{{f{{l{Bh}}}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{An}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Ff}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{Ff}}n}}}Al}`{{{f{{l{Cb}}}}}{{f{{l{Cb}}}}}}{{{f{{l{Bb}}}}}{{f{{l{Bb}}}}}}{{{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{An}}}}}{{f{{l{An}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fn}201012{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{G`}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Eb{}{{Ad{}}}}Ed}Al}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{Fh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{j}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}Gb}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gd}{{{f{{l{c}}}}e}{{A`{Abn}}}GdBf}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gn{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gn{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fH`}{{{f{{l{c}}}}}{{A`{{f{Bl}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Hb}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}Hb}bDnDn}{{{f{{l{c}}}}}{{`{Hd}}}Al}{{}{{l{c}}}Dn}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BdBf}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDn}{Ghb}0{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bh}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bh}}}}{{{f{{l{c}}}}e}{{l{Bh}}}AlBf}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{B`}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bh}}}Al}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bh}}}}6384175092{{{f{{l{Cb}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{B`}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gn{Ab}}}}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bh}}}}d}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{c}}}}{f{{l{Bh}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hl{Dj}}{Dl{Dj}}}}}}{{{f{{l{An}}}}{f{{l{Bh}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bb}}}}{f{{l{Bh}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{Bh}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}`{{{f{{l{Ah}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Cb}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{{Cd{c}}}}}}{f{DfHn}}}{{A`{bI`}}}Cf}{{{f{{l{Bb}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{An}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Bh}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{c}}}}{f{DfHn}}}{{A`{bI`}}}Al}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Cb}}}}c}b{{Af{{Ch{Ef}}}}}}{cc{}}{c{{l{e}}}Cl{{Dn{}{{Ib{c}}}}}}1{{Ddc}{{l{e}}}Id{{Dn{}{{Ib{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{Ib{}}}}Dn}Id}{{Dd{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gn{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGh{f{{Bl{Fj}}}}}{{A`{{l{j}}n}}}}{e{{l{An}}}{{If{B`}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Fj}}}}}}}}{e{{l{Bb}}}{{Ih{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Bb}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Id{}{{Cj{{Hj{Gn{Ch{Ij}}}}}}}}}Al}{c{{l{Bh}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bh}}}{{Id{}{{Cj{d}}}}}}{e{{l{An}}}{{Ih{B`}}}{{Id{}{{Cj{c}}}}}}{e{{l{Ah}}}{{Il{Ab}}}{{Id{}{{Cj{c}}}}}}{c{{l{e}}}{{Id{}{{Cj{Ch}}}}}Al}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{{Cd{c}}}}}Cf{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bb}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{An}}}{{If{B`}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bh}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{e{{l{Fh}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}<7:{e{{l{Fh}}}{{Ih{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Bb}}}{{If{{Bl{Bj}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}8{e{{l{Bb}}}{{Ih{{Bl{Bj}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{An}}}{{If{B`}}}{{Id{}{{Cj{{Ch{c}}}}}}}}?{c{{l{Bh}}}{{Id{}{{Cj{{Ch{d}}}}}}}}>{{Dde}{{l{An}}}{{If{B`}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Ddc}{{l{Bh}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{Bb}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}`{c{{l{Bh}}}{{In{}{{Cj{d}}}}}}{e{{l{An}}}{{Ih{B`}}J`JbJd}{{In{}{{Cj{c}}}}}}{c{{l{Bh}}}{{In{}{{Cj{{Ch{d}}}}}}}}{e{{l{Bb}}}{{Ih{{Bl{Bj}}}}J`JbJd}{{In{}{{Cj{c}}}}}}{c{{l{e}}}{{In{}{{Cj{Ch}}}}}Al}{c{{l{Ah}}}{{In{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bb}}}{{If{{Bl{Bj}}}}J`Jb}{{In{}{{Cj{{Ch{c}}}}}}}}{e{{l{An}}}{{If{B`}}J`Jb}{{In{}{{Cj{{Ch{c}}}}}}}}{{cDdEn}{{l{Ah}}}{{In{}{{Cj{{Ch{Ab}}}}}}}}{{DdGhc}{{A`{{l{j}}n}}}{{Jf{}{{Cj{{f{Ab}}}}}}Jh}}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{d}}}}}{{l{Bh}}}}{{Dd{f{{Bl{c}}}}}{{l{An}}}{{If{B`}}}}{{Dd{f{{Bl{c}}}}}{{l{Bb}}}{{If{{Bl{Bj}}}}}}{{Dd{f{{Bl{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bl{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bl{{Ch{d}}}}}}}{{l{Bh}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{An}}}{{If{B`}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bb}}}{{If{{Bl{Bj}}}}}}{c{{l{Bh}}}{{Jj{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jj{}{{Cj{Ch}}}}}Al}{{DdGn}{{l{c}}}Al}{{DdGn{Ch{Ij}}}{{l{c}}}Al}{{Dd{f{Ab}}Gh}{{l{Cb}}}}{{DddGh}{{l{Bh}}}}{{DdcGh}{{l{{Cd{c}}}}}Cf}{{DdGh}{{l{c}}}Al}{{Dd{f{Ab}}Gh}{{l{Ah}}}}{{Dd{f{{Bl{Bj}}}}Gh}{{l{Fh}}}}{{Dd{f{{Bl{Bj}}}}Gh}{{l{Bb}}}}{{Dd{f{B`}}Gh}{{l{An}}}}{{DdGh}{{l{Fh}}}}{{DdGh}{{l{Bh}}}}{{DdGh}{{l{An}}}}{{DdGh}{{l{Bb}}}}8{{DdGh}{{l{Ah}}}}{{DdGh}{{l{Cb}}}}{{DdGh}{{l{j}}}}{{DdGh}{{l{{Cd{c}}}}}Cf}{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{DdGh{f{En}}}{{l{Ah}}}}{{DdGh{f{En}}Gh}{{l{Cb}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{Bh}}}}Gh}{{A`{Jln}}}}{{{f{{l{{Cd{c}}}}}}Gh}{{A`{Jln}}}Cf}{{{f{{l{Bb}}}}Gh}{{A`{Jln}}}}{{{f{{l{Cb}}}}Gh}{{A`{Jln}}}}{{{f{{l{j}}}}Gh}{{A`{Jln}}}}{{{f{{l{Ah}}}}Gh}{{A`{Jln}}}}{{{f{{l{An}}}}Gh}{{A`{Jln}}}}{{{f{{l{Fh}}}}Gh}{{A`{Jln}}}}{{{f{{l{c}}}}Gh}{{A`{Jln}}}Al}{{{f{{l{Fh}}}}Gh}Jl}{{{f{{l{{Cd{c}}}}}}Gh}JlCf}{{{f{{l{Bb}}}}Gh}Jl}{{{f{{l{Bh}}}}Gh}Jl}{{{f{{l{An}}}}Gh}Jl}{{{f{{l{c}}}}Gh}JlAl}{{{f{{l{Ah}}}}Gh}Jl}{{{f{{l{j}}}}Gh}Jl}{{{f{{l{Cb}}}}Gh}Jl}{{{f{{l{Cb}}}}Gh}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gh}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Fb}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cb}}}}}Ab}0{{{f{{l{c}}}}}ChDn}0{{{f{{l{{Cd{c}}}}}}Gh}{{Ch{{f{K`}}}}}Cf}0{{{f{{l{j}}}}Fd}{{A`{{l{Fh}}n}}}}{{{f{{l{j}}}}Fd}{{A`{{Kb{Hf}}n}}}}{{{f{{l{c}}}}Gh}ChDn}{{{f{{l{Ah}}}}}Gh}{{{f{{l{Fh}}}}}Gh}{{{f{{l{An}}}}}Gh}{{{f{{l{Cb}}}}}Gh}{{{f{{l{Bh}}}}dd}{{A`{C`n}}}}{{{f{{l{Fh}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Cb}}}}dd}{{A`{C`n}}}}{{{f{{l{Bb}}}}dd}{{A`{C`n}}}}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cd{c}}}}}}dd}{{A`{C`n}}}Cf}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{c}}}}GhdGh}C`Fn}{{{f{{l{c}}}}e}{{l{Bh}}}AlBf}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{B`}}}{{l{Bh}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bh}}}Al}0561234{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{}Gh}0{{GhKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{Cb}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fj}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gh}}Gh}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{c}}}}}{}Al}{{{f{{l{Bh}}}}}}{{{f{{l{An}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{Fh}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Cb}}}}}}{{{f{{l{c}}}}}{{`{J`JbJfHdJj}}}Al}{{{l{Lh}}}Ab}{{{l{c}}}AbDn}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{Bh}}}M`}000{{{f{{l{c}}}}}{{l{Bh}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ij}}}}}}}}}}}Dn}`{{fc}H`{{If{B`}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gh}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}01{{{f{{l{c}}}}}GhDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{BdMh}}00{{{f{{l{c}}}}Gh}{{l{c}}}Dn}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bh}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bh}}}Al}{{{f{{l{An}}}}{f{B`}}}{{l{Bh}}}}{{{f{{l{c}}}}e}{{l{Bh}}}AlBf}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}{{l{Bh}}}}0125346{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}{{Ch{d}}}}{{{f{{l{Bb}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bh}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bb}}}}}Mj}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Bh}}}}}{{Ch{Aj}}}}{{{f{{l{Ej}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fn}{{{f{{l{Ej}}}}}Mj}{{{f{{l{c}}}}}MjFn}{{{f{{l{Eh}}}}}Mj}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{G`}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}{{Ch{d}}}}{{{f{{l{Bb}}}}}{{Ch{{f{{Bl{Bj}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hj}}}Al}{{{f{{l{Bb}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}GhGh}{{l{Bh}}}}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GhDn}{{{f{{l{Bb}}}}}{{A`{Ghn}}}}{{{f{{l{c}}}}}{{A`{Ghn}}}Al}{{{f{{l{An}}}}}{{A`{Ghn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Ddc}{{l{Nd}}}{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{{Ch{Nh}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{Gn{Bj}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{d}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bl{Bj}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{Nn}}}}}}{{Ddc}{{l{Ff}}}{{If{{Bl{Fb}}}}}}{{Ddc}{{l{O`}}}{{If{{Bl{Kf}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{If{{Bl{{Ch{c}}}}}}}}{{Dd{f{{Bl{c}}}}}{{l{{Cd{c}}}}}Cf}{{Ddc}{{l{Bb}}}{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bl{Nf}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{Od}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{Of}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{Hf}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{Nh}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{Kd}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{Aj}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{Ch{{Gn{Bj}}}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}{{l{Ff}}}{{If{{Bl{{Ch{Fb}}}}}}}}{{Ddc}{{l{O`}}}{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{{E`{B`}}}}}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{{Ch{Hf}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{E`{B`}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{{f{B`}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{f{B`}}}}}}}}{{Dd{Oh{Fb}}}{{l{Ff}}}}{{Dd{Oh{Kf}}}{{l{O`}}}}{{Dd{Oh{Of}}}{{l{Kl}}}}{{Dd{Oh{Hf}}}{{l{Lb}}}}{{Ddc}{{l{Ej}}}{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{El}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{c}}}}GhGh}{{l{c}}}Al}{{{f{{l{Bb}}}}GhGh}{{l{Bb}}}}{{{f{{l{{Cd{c}}}}}}GhGh}{{l{{Cd{c}}}}}Cf}{{{f{{l{Fh}}}}GhGh}{{l{Fh}}}}{{{f{{l{An}}}}GhGh}{{l{An}}}}{{{f{{l{Bh}}}}GhGh}{{l{Bh}}}}{{{f{{l{j}}}}GhGh}{{l{j}}}}{{{f{{l{Ah}}}}GhGh}{{l{Ah}}}}{{{f{{l{Cb}}}}GhGh}{{l{Cb}}}}{{Dd{Gn{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gn{c}}Ij}{{l{{Cd{c}}}}}Cf}{{DdGn}{{l{c}}}Al}{{{N`{Oj}}{Gn{{Cn{Cl}}}}FbFb}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bh}}}}}}{{{l{Bh}}}}{{{f{{l{c}}}}e}{{l{Bh}}}AlBf}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bh}}}Al}{{{f{{l{An}}}}{f{B`}}}{{l{Bh}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bh}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bh}}}}9648710{{{f{{l{Cb}}}}{f{{l{Cb}}}}}}64{{{f{{l{c}}}}}GhDn}{{{f{{l{Bh}}}}}Gh}0`{{{f{{l{Ah}}}}}{{A`{{Hh{Hf}}n}}}}{{{f{{l{Cb}}}}}{{A`{{Hh{Hf}}n}}}}`{{{f{{l{An}}}}}{{`{{Ol{}{{Cj{{Ch{{f{B`}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{An}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fn}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fn}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{DdGhAj}{{A`{{l{Bh}}n}}}}{{DdGhAjAj}{{A`{{l{c}}n}}}Al}{{DdGh}{{l{c}}}Al}{{DdGhAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Ij}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{Ej}}}}}Ab}{{{f{{l{O`}}}}}Ab}{{{f{{l{Ob}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Ff}}}}}Ab}{{{f{{l{Nl}}}}}Ab}36470:85192{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{Cb}}}}}{{l{Cb}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Fh}}}}}{{l{Fh}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{Eb}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Ghe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Ghdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{An}}}}{f{{Bl{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{{f{B`}}}}}}}}}}{{{f{{l{Bh}}}}{f{{Bl{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bl{Fb}}}}e}{{A`{Abn}}}A@d{{Id{}{{Cj{Ch}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}}{{{f{{l{An}}}}c{Ch{{f{B`}}}}}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bh}}}}c{Ch{d}}}{{A`{{l{Bh}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bb}}}}c{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bb}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{{f{B`}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}{{Eb{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Id{}{{Cj{Fb}}}}}{{Eb{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Gn{Bj}}}}}}}}}}{{{f{{l{c}}}}{f{{l{Bh}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bb}}}}{f{{l{Bh}}}}{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{An}}}}{f{{l{Bh}}}}{Ch{{f{B`}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}{Ch{d}}}{{A`{{l{Bh}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Fb}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{Bb}}}}Hf}{{l{Bb}}}}{{{f{{l{An}}}}Hf}{{l{An}}}}{{{f{{l{Cb}}}}Hf}{{l{Cb}}}}{{{f{{l{{Cd{c}}}}}}Hf}{{l{{Cd{c}}}}}Cf}{{{f{{l{j}}}}Hf}{{l{j}}}}{{{f{{l{c}}}}Hf}{{l{c}}}Al}{{{f{{l{Bh}}}}Hf}{{l{Bh}}}}{{{f{{l{Fh}}}}Hf}{{l{Fh}}}}{{{f{{l{Ah}}}}Hf}{{l{Ah}}}}{{{f{{l{Cb}}}}Hf{Ch{{f{Ab}}}}}{{l{Cb}}}}{{{f{{l{Ah}}}}Hf{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Fh}}}}Hf{Ch{{f{{Bl{Bj}}}}}}}{{l{Fh}}}}{{{f{{l{Bb}}}}Hf{Ch{{f{{Bl{Bj}}}}}}}{{l{Bb}}}}{{{f{{l{An}}}}Hf{Ch{{f{B`}}}}}{{l{An}}}}{{{f{{l{Bh}}}}Hf{Ch{d}}}{{l{Bh}}}}{{{f{{l{c}}}}HfCh}{{l{c}}}Al}{{{f{{l{{Cd{c}}}}}}Hf{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HfGh}{{l{c}}}Dn}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Fh}}}}d}{{l{Fh}}}}{{{f{{l{Bh}}}}Fd}{{l{Bh}}}}{{{f{{l{c}}}}Fd}{{l{c}}}Al}{{{f{{l{An}}}}Fd}{{l{An}}}}{{{f{{l{Bb}}}}Fd}{{l{Bb}}}}{{{f{{l{j}}}}Fd}{{l{j}}}}{{{f{{l{Fh}}}}Fd}{{l{Fh}}}}{{{f{{l{c}}}}Hf}{{Hj{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFn}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{j}}}}}{{f{{Bl{Oj}}}}}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bh}}}}}{{Ch{Fb}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}{Ch{Gh}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{If{{Bl{Fb}}}}A@f}}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{{Bl{A@h}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bl{A@h}}}}}{{l{c}}}Dn}{{{f{{l{j}}}}{f{{l{Ff}}}}}{{l{j}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{Cb}}}}{f{{l{Ff}}}}}{{l{Cb}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@j{Dj}}{Dh{Dj}}}}Dn}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{Cb}}}}{f{c}}}{{l{Cb}}}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{An}}}}{f{{l{Ff}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ff}}}}}{{l{Ah}}}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@j{Dj}}{Dh{Dj}}}}Dn}}{{{f{{l{Bb}}}}{f{c}}}{{l{Bb}}}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{If{{Bl{Fb}}}}A@f}}{{{f{{l{Bb}}}}{f{{l{Ff}}}}}{{l{Bb}}}}`{{{f{{l{c}}}}dA@l}{{Gn{{Gn{A@n}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{An}}}}Gh}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{Cb}}}}En}b}{{{f{{l{Ah}}}}}{{A`{{AAf{AA`{AAd{{AAb{Gh}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAf{{AAh{f}}{AAd{{AAb{Gh}}}}}}n}}}Al}{fc{}}{{{f{{l{Bb}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{Gn{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gn{Gn{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Cb}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Cb}}}}c}{{A`{{l{Cb}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{An}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Id{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{Ib{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gh}{}Dn}{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Ej}}}}Bj}Mj}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFn}{{{f{{l{An}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Bh}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Eh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cb}}}}}Gh}{{Ddc}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{c}}}}{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bl{AB`}}}}e}c{}{{ABb{{f{{l{Ff}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ij}}}{{l{j}}}}{{{l{j}}{l{Bh}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}32102332013223102323103223103223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cb}}}}{f{{l{c}}}}e}{{l{Cb}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bh}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@j{Dj}}}}}}{{{f{{l{j}}}}{f{{l{Bh}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jj}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jj}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jj}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bl}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{If{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bl}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{B`}}}}}}}}Jj}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bl{Bj}}}}}}}}}}Jj}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{If{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{B`}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bl{Bj}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JhAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gh{{f{c}}}{}}0000000000{Gh{{f{Dfc}}}{}}0000000000{Ghb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dn}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{{Bl{Bj}}}}}{{l{Bb}}}}{{{ACn{B`}}}{{l{An}}}}{ADb{{l{Bh}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{En}}GhGhDd}{{Cn{ACd}}}}{{}Gh}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGh{Ch{En}}}ABl}{{DdGh{Ch{En}}}ABn}{{DdGhGh}ACh}{{DdGhGh}ACj}{{DdGhGh}AC`}{{DdGh}ACl}{{DdGhGhEn}{{ACb{c}}}Al}{{DdGh}{{ACn{c}}}{AD`A@f}}{{DdGh}ADb}{{DdGh}ADd}{{DdGh}{{ADf{c}}}Al}{{DdGhGhEnEn}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{En}}GhGhDd}{{Cn{ACd}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Gb}}}Gb}{{f{f{Dfc}}}b{}}{fb}{{}Gb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{Gb}}{f{Gb}}}d}{{f{f{c}}}d{}}00{{{f{Gb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Gb}}{f{Dfc}}}bADl}{{}Gh}{{}c{}}{{{f{Gb}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dn}{{AE`{f{{l{c}}}}}{{l{c}}}Dn}10{{AE`DdEn}{{l{c}}}Dn}0{{ADnDd}{{A`{{l{c}}e}}}Dn{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AE`DdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEbAEb}``{{AEdDdEn}e{}{{AEf{c}}}}{{eDdEn}AEf{}{{In{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{cc{}}00{{}Gh}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}En}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChHd}`{{{f{AEj}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AEn}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{{AF`{c}}}}}{{Hj{Gh{Ch{Gh}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Hb}{{}Jn}{{HbHb}Hb}{{JnJn}Jn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}3210{{{f{Hb}}}Fb}0{{{f{Jn}}}Bj}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{G`}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFb}}}AFb}{{{f{Hb}}}Hb}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{HbHb}{JnJn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}Hb}{{}Jn}{{{f{{Ml{c}}}}}fDn}{Gh{{f{c}}}{}}000000{Gh{{f{Dfc}}}{}}000000{{HbHb}Hb}{{JnJn}Jn}{{}d}{{{f{G`}}}{{Ch{Fb}}}}{{{Kh{c}}Fb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{Kh{c}}{Ch{Fb}}}{{Kh{c}}}Dn}{Ghb}000000<;5{{{f{Hb}}{f{Hb}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfHb}}c}b{{Id{}{{Cj{Hb}}}}}}{{{f{DfJn}}c}b{{Id{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHn}}}{{A`{bI`}}}Dn}{{{f{AFb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Hb}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{Jn}}{f{DfHn}}}{{A`{bI`}}}}0000{cc{}}000000{Fb{{Ch{Hb}}}}{Bj{{Ch{Jn}}}}{FbHb}0{BjJn}010{cHb{{Id{}{{Cj{Hb}}}}}}{cJn{{Id{}{{Cj{Jn}}}}}}{{{f{B`}}}{{Ch{Hb}}}}{{{f{B`}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{G`}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gh}000000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{HbHb}Hb}{{JnJn}Jn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Hb}{Jn}{{{f{Hb}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{Hb}}}{{AFf{Hb}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{Hb}}}{{AFh{Hb}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{G`}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dn}4321{{{Kh{c}}}{{Mn{c}}}Dn}{HbHb}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{{f{DfHb}}Hbd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Fb}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{HbHb}Hb}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{G`}}}}}Dn}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGb{c}}}}Gh}{{Hj{{AGb{c}}{AGb{c}}}}}Cf}{e{{AGb{c}}}Cf{{Id{}{{Cj{{f{c}}}}}}}}{e{{AGb{c}}}Cf{{Id{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGde}g{}{{Id{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cf}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gh}dCf}{{{f{{AGb{c}}}}}{{AGb{c}}}{JhCf}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cf}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHn}}}{{A`{bI`}}}{AGhCf}}{{{Gn{c}}}{{AGb{c}}}Cf}{cc{}}{{GhAGd}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}Gh}{{Ch{{f{c}}}}}Cf}{{}AGd}{{{f{Ij}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}{{AGd{f{Ij}}}{{AGb{c}}}Cf}{{{f{Ij}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}0{{}Gh}{{}c{}}{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}Gh}dCf}0{{fGh}d}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cf}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gf{c}}AGj}}}Cf}{{{f{{AGb{c}}}}}GhCf}0`{db}{{{f{Df{AGb{c}}}}{Ch{Ij}}}bCf}{{{f{Df{AGb{c}}}}GhGh}bCf}{{fGhGh}c{}}01{{{f{{AGb{c}}}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGb{c}}e}}}Cf{}{{Id{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cf{}{{Id{}{{Cj{{A`{{f{c}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{B`}}}}{{}{{f{B`}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Ij}}}}}Cf}{{{f{{AGb{c}}}}Gh}{{f{c}}}Cf}{{{f{{AGb{c}}}}Gh}{}Cf}1{{{f{{AGb{c}}}}}{{Gf{c}}}Cf}{{{f{{AGb{c}}}}}{}Cf}{{}c{}}{{{AGb{c}}{Ch{Ij}}}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}{Ch{Ij}}}{{Cn{Cl}}}Cf}1`{{{f{Df{AGn{c}}}}}bCf}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCf}{{{f{Df{AGn{c}}}}c}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cf}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{AGn{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{{f{{AGn{c}}}}DdGhGh}{{Cn{ACd}}}Cf}{{}Gh}{{}c{}}{{DdGh}{{AGn{c}}}Cf}{{{f{Df{AGn{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{AHb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AH`}}DdGhGh}{{Cn{ACd}}}}{{DdGh}{{Cn{AH`}}}}{{}{{N`{Eb}}}}{{}AGd}{{}Gh}{{}c{}}{{}d}`{{{Cn{Eb}}{N`{Eb}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6`````````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{AHj}}{f{Eb}}}AHj}{{{f{AHj}}{f{Eb}}}{{l{c}}}Dn}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AHl}}}Fb}{{{f{AHn}}Fd}{{l{Ff}}}}{{{f{AHn}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AI`}}}{{A`{{l{Ff}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AIb}}{f{En}}}{{A`{Abn}}}}0{{{f{AIb}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Fd}}}Fd}{{{f{Fl}}}Fl}{{{f{AId}}}AId}{{f{f{Dfc}}}b{}}00{fb}00{{}Fd}{{}Fl}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00``{Ghb}00{{{f{Fd}}{f{Fd}}}d}{{{f{Fl}}{f{Fl}}}d}{{{f{AId}}{f{AId}}}d}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIh}}}{{A`{Abn}}}}{{{f{AIh}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{AIj}}c}{{A`{AIjn}}}{}}{{{f{AIl}}{f{{l{Bh}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AId}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Fl}}}Fd}{{{f{Fd}}}Fl}22`{{DdcGh}AIn{}}{{DdGh}AJ`}`{{{f{AJb}}Gh}{{A`{Jln}}}}{{{f{AJb}}Gh}Jl}{{{f{{AJd{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fd}}{f{Dfc}}}bADl}{{{f{Fl}}{f{Dfc}}}bADl}{{{f{AId}}{f{Dfc}}}bADl}{{}Gh}00{{}c{}}00{{{f{AId}}}d}{{{f{AJf}}}{{A`{{l{Bh}}n}}}}{{{f{AJh}}}{{A`{{l{Bh}}n}}}}``88``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJj}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hj{cc}}}}}{}}``{{{f{AI`}}}{{A`{Ghn}}}}{{}Fd}{{}Fl}{{{f{AJl}}GhGh}{{l{c}}}Dn}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIh}}}{{A`{{Hh{Hf}}n}}}}{{{f{AJj}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJn}}}Ab}0{{{f{AK`}}}AK`}{{{f{AKb}}{f{Eb}}A@b}{{A`{Abn}}}}`{{{f{AKd}}c{Ch{e}}}{{A`{AKdn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKd}}ci}{{A`{AKdn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AKd}}{f{{l{Bh}}}}{Ch{c}}}{{A`{AKdn}}}{}}{{{f{AKf}}Hf}{{l{c}}}Dn}{{{f{AKh}}Hfc}{{l{e}}}{}Dn}{{{f{AKj}}GhGh}AKj}0`{{{f{AHn}}d}{{l{c}}}Dn}{{{f{AHn}}Fd}{{l{c}}}Dn}{{{f{AKl}}Bj}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKn}}{f{c}}}{{A`{AKnn}}}A@f}{{{f{AL`}}{f{c}}}AL`A@f}{{{f{ALb}}}{{Gn{{f{{Bl{Bj}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AI`}}}{{A`{AI`n}}}}9{{}c{}}00{{Fdd}Fd}{{Fld}Fl}1010{{Flc}Fl{{Id{}{{Cj{d}}}}}}210{FdFd}{FlFl}`{{{f{ALd}}{f{{l{Bh}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALf{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALh}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALj{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALl{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALl{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALl{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALh}ALl{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{ALn{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnALnDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALh}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0{{{f{{l{c}}}}}GhAl}0{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AM`{Fb}}}}Fb}{{A`{bn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}00````{{fh}b}{{{f{{l{c}}}}eAMdd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMd}}}AMd}{{f{f{Dfc}}}b{}}{fb}{{}AMd}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{AMd}}{f{AMd}}}d}{{f{f{c}}}d{}}00{{{f{AMd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AMd}}{f{Dfc}}}bADl}{{}Gh}{{}c{}}{{{f{{Bl{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGhf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKj}}GhGh}AKj}0{{Gh{f{{Bl{Fj}}}}{f{DfFl}}}{{A`{{AMf{{l{Ff}}}}n}}}}`````````````11`{AMhHf}00{{{f{B`}}}{{A`{Ddn}}}}{{{f{B`}}}{{A`{AMjn}}}}{{{f{AMl}}}Hf}{{{f{B`}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{AMn}}}d}{{{f{Jl}}}{{`{{D`{}{{Cj{Jl}}}}}}}}{{{f{Jl}}{f{Df{Gn{Jl}}}}}b}{{AMnd}AMn}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jl}}{f{Jl}}}Jl}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAN`}}{Ch{{f{B`}}}}}b}{{{f{DfAMn}}{f{AMn}}}{{A`{bn}}}}{{{f{DfAN`}}}b}{{{f{DfAN`}}{f{B`}}}b}{{{f{AMn}}Fd}{{l{Ff}}}}{eANb{}{{Id{}{{Cj{c}}}}}}0{{AGde}ANd{}{{Id{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jl}}}Jl}{{{f{{L`{KnKl}}}}}{{`{Jj}}}}{{{f{{L`{LfLb}}}}}{{`{Jj}}}}{{{f{Dd}}}{{f{ANf}}}}{{{f{Dd}}}{{f{B`}}}}{{{f{Dd}}}{{f{ANh}}}}{{{f{Dd}}}{{f{{Bl{Bj}}}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{ANj}}}{{f{En}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}6{{{f{{L`{LnLb}}}}}{{`{Jj}}}}7{f{{f{c}}}{}}000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOf{B`}}}AOh}{{{f{AMn}}{f{AMn}}c}{{A`{AMnn}}}AOj}{{{f{Jl}}{f{En}}}d}{{{f{AOl}}{f{En}}}{{A`{Abn}}}}{{{f{Jl}}{f{En}}}Jl}{{{f{En}}En}En}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOl}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{AMn}}{f{En}}Gb}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{AOn}}}AOn}{{{f{AOh}}}AOh}{{{f{AMn}}}AMn}{{{f{B@`}}}B@`}{{{f{Jl}}}Jl}{{{f{B@b}}}B@b}{{{f{En}}}En}{{{f{B@d}}}B@d}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nj}}}Nj}{{{f{Nl}}}Nl}{{{f{Ff}}}Ff}{{{f{O`}}}O`}{{{f{Nd}}}Nd}{{{f{Ob}}}Ob}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ej}}}Ej}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{An}}}An}{{{f{Bb}}}Bb}{{{f{Fh}}}Fh}{{{f{Bh}}}Bh}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@f}}}B@f}{{{f{B@h}}}B@h}{{{f{B@j}}}B@j}{{{f{AGd}}}AGd}{{{f{B@l}}}B@l}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@n}{{{f{B@h}}{f{B@h}}}B@n}{{{f{DfOj}}En}b}{BA`e{}{{ANb{c}}ALh}}0{{BA`AGd}e{}{{ANd{c}}ALh}}0{{f{f{c}}}B@n{}}0{{{f{En}}}d}{{{f{AGd}}}d}11{{{AOf{B`}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BAb}{{}AOn}{{}AOh}{{}Jl}{{}B@b}{{}En}{{}AGd}{{{f{Dd}}}f}{Gh{{f{c}}}{}}000{{{f{{L`{ce}}}}}fDnDn}111111111111111111111111111111111111111111{Gh{{f{Dfc}}}{}}00{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}1111111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AN`c}AMn{{Id{}{{Cj{{Ch{{f{B`}}}}}}}}}}{Ghb}000000000000000000000000000000000000000000000{{{f{AOl}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{AMn}}}{{f{En}}}}{{{f{Jl}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAf{BAd}}}}0`{{{f{Dd}}{f{c}}}d{{If{B`}}A@f}}{{{f{AOn}}{f{AOn}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{En}}{f{AGd}}}d}{{{f{En}}{f{En}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@h}}{f{B@h}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{Jl}}{f{Jl}}d}d}{{{f{AMn}}{f{AMn}}}}{{{f{AMn}}{f{B`}}}}{{{f{AMn}}{f{{l{An}}}}}}210{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOh}}{f{B`}}}{{Ch{Fb}}}}{{AOj{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{AN`AMn}{BAb{{N`{AOh}}}}{{{f{Dd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{AOn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AOh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Jl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{En}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@d}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Oj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ld}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@h}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@j}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{AGd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@l}}{f{DfHn}}}{{A`{bI`}}}}{H`Dd}{{{f{El}}}Dd}{{{f{B`}}}Dd}{ElDd}{cc{}}000{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}}{{L`{LnLb}}}}222222222222{dJl}{{{f{B`}}}Jl}{{{f{{Bl{Bj}}}}}Jl}{cJlBAh}6{{{Ch{c}}}Jl{{BAj{Jl}}}}7{{{f{Jl}}}En}8{JlEn}{{{f{AGd}}}En}:{{{f{Jl}}}Oj};{{{f{BAl}}}Oj}{{{f{B@l}}}Ld}======================={BAnAGd}>{BB`AGd}?{{{f{AGd}}d}En}{{{l{Ff}}En}AMn}{{{l{Ff}}{N`{AOh}}dAOn}AMn}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{BBb}}}}}}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{{Ch{BBb}}}}}}}}{{{l{Ff}}AOn}AMn}{cDd{{Id{}{{Cj{Dd}}}}}}{cDd{{Id{}{{Cj{El}}}}}}{cDd{{Id{}{{Cj{{f{B`}}}}}}}}{cDd{{Id{}{{Cj{{E`{B`}}}}}}}}{cDd{{Id{}{{Cj{{Cn{B`}}}}}}}}{cDd{{Id{}{{Cj{{f{Dd}}}}}}}}{cDd{{Id{}{{Cj{{f{BAd}}}}}}}}{cDd{{Id{}{{Cj{BAd}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{BBd}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{{Ch{BBd}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{AMh}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{{Ch{AMh}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{AMl}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{{Ch{AMl}}}}}}}}{{{f{B`}}}Dd}0{ElDd}{{{f{{l{An}}}}{f{{AOf{B`}}}}AOn}{{A`{AMnn}}}}{{{Gn{c}}AGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGd}{{ALh{}{{ANl{e}}{ANn{c}}{AO`{g}}}}}{AOb{AOd{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}{{GhcAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{DddGhAOn}AMn}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AOh}}Fb}{{f{B`}}}}{B@hKf}{B@j{{Ch{Kf}}}}{{{f{{L`{LnLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LjLh}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gh}{{A`{Jln}}}}{{{f{{L`{KnKl}}}}Gh}{{A`{Jln}}}}{{{f{{L`{LlLb}}}}Gh}{{A`{Jln}}}}{{{f{AOl}}Gh}{{A`{Jln}}}}{{{f{AMn}}Gh}{{A`{Jln}}}}{{{f{{L`{LnLb}}}}Gh}Jl}{{{f{{L`{KnKl}}}}Gh}Jl}{{{f{{L`{LlLb}}}}Gh}Jl}{{{f{{L`{LfLb}}}}Gh}Jl}{{{f{{L`{LjLh}}}}Gh}Jl}{{{f{AOl}}Gh}Jl}{{{f{AMn}}Gh}Jl}{{{f{AOh}}}{{f{{AOf{B`}}}}}}{{}En}0000000000000000000000000{{{f{AOh}}Fb}{{Ch{{f{B`}}}}}}{{B@jKf}Kf}{{B@jc}Kf{{Eb{}{{Ad{Kf}}}}}}{{{f{AMn}}}{{f{{N`{AOh}}}}}}{{{f{En}}}{{Ch{{Gn{Gh}}}}}}{{{f{Jl}}}{{Ch{{f{B`}}}}}}{{{f{BBf}}Gh}Jl}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AMn}}{f{B`}}}}{{{f{AMn}}{f{AMn}}}}{{{f{AMn}}{f{{l{An}}}}}}102{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jl}}{f{Dfc}}}bADl}{{{f{B@b}}{f{Dfc}}}bADl}{{{f{En}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{B@j}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@l}}{f{Dfc}}}bADl}{{{f{Jl}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jl}}}Fb}{EnEn}{{}Gh}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fj}01{{BBhEn}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LlLb}}}Ab}{AMnAb}{JlJl}{DdEl}{{{f{En}}}d}00{{{f{Jl}}}d}111{{{f{AMn}}}d}0212{{{f{AOh}}}d}23330323{{{f{AGd}}}d}343434044434444340{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{AGl{cgAGj}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AMn}}}BBj}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{En}}}{{f{En}}}}{{{f{AOh}}}Gh}{{{f{AMn}}}Gh}{DdBBl}{{{f{AMn}}{f{B`}}}}{{{f{AMn}}{f{{l{An}}}}}}{{{f{AMn}}{f{AMn}}}}012{{{f{AMn}}{f{AMn}}}{{A`{{Hj{AMnAMn}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@b}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{AMn}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBAb}}{f{{N`{AOh}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Nd}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMn}}}{{A`{Ghn}}}}{{{f{AMn}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGhAOn}AN`}{{Ddc}{{L`{LfLb}}}{{If{{Bl{{Ch{AMh}}}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{BBd}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{{Ch{BBd}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{AMh}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{BBb}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{{Ch{BBb}}}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{AMl}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{{Ch{AMl}}}}}}}}{{{N`{AOh}}}BAb}{{DdEn}Oj}{KfB@h}{HfB@j}{KfB@j}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@d}{{{f{DfBBj}}}Ch}{{{f{AMn}}{f{B`}}}}{{{f{AMn}}{f{AMn}}}}{{{f{AMn}}{f{{l{An}}}}}}012{{{f{AMn}}}Gh}5{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@n}}}}{{{f{Jl}}{f{Jl}}}{{Ch{B@n}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@n}}}}{{{f{B@h}}{f{B@h}}}{{Ch{B@n}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{AMn}}}{{f{{l{Ff}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gh}}}}{{{f{DfAN`}}{f{B`}}}{{Hj{Fbd}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}{f{{l{An}}}}{Ch{{f{AMj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{f{{l{An}}}}{Ch{{f{AMj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{AOh}}{f{AOh}}}d}{{{f{{L`{LjLh}}}}}Gh}{{{f{{L`{LnLb}}}}}{{l{Nd}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBj}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AMn}}d}AMn}{{{f{AMn}}Fd}AMn}{{{f{Jl}}}{{E`{B`}}}}{{{f{{L`{KnKl}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{B`}}}{{l{An}}}}{{{f{{L`{LfLb}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{Jl}}{f{En}}}{{Ch{Jl}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMn}}B@dd}{{Cn{Cl}}}}{{{f{En}}B@d}AGd}{{{f{Oj}}B@d}BAl}{LdB@l}{{{f{En}}DdB@d}BAl}{Ld{{f{B`}}}}{{{f{AMn}}{f{{AOf{B`}}}}BBn}AMn}{{AGdGhd}AGd}{{{f{AMn}}}{{A`{AMnn}}}}{{{f{AMn}}}AMn}{{{f{AGd}}}{{f{AGd}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGd}}}BC`}{{{f{{L`{LjLh}}}}Gh}{{A`{{E`{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LfLb}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{KnKl}}}}{f{B`}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{B`}}}{{l{An}}}}3333{{{f{Jl}}{f{Jl}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AMj}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AMj}}}}{f{{l{An}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{ANbe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANde}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BA`{{A`{eg}}}{}{{ANb{c}}ALh}{}}0{{BA`AGd}{{A`{eg}}}{}{{ANd{c}}ALh}{}}0{{{f{Jl}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000{Hf{{A`{B@h}}}}1111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jl}}{f{En}}}{{A`{Jln}}}}{{{f{En}}B@d}{{A`{AGdn}}}}{f{{A`{H`BCb}}}}0000{fAAl}000000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMn}}}{{A`{AMnn}}}}{{{f{AMn}}}d}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}cJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AMn}}}{{A`{AAnn}}}}1{{{f{En}}Jl}d}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}gJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{}c{}}000000000000000000000000000000000000000000000{Ghc{}}0{{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}{Ch{Ij}}}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{DfDd}}BAd}{{A`{bI`}}}}{{{f{DfDd}}BCd}{{A`{bI`}}}}{{{f{DfDd}}{f{B`}}}{{A`{bI`}}}}{{{f{En}}}Jl}```````````{{{f{AMn}}{f{AMn}}c}{{A`{AMnn}}}AOj}{{AOj{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{f{AMn}}{f{AMn}}}{{A`{{Hj{AMnAMn}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCf}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{{}b}{{{f{DfBCf}}}b}{Ghb}2{cc{}}6{{}Gh}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4`{{{f{DfBCh}}Fb{f{AOh}}}{{A`{{f{DfBCh}}n}}}}{{{f{DfBCh}}}{{f{DfBCh}}}}{{{f{DfBCh}}{f{B`}}}{{A`{{f{DfBCh}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}>{BChAMn}>=<{{DdGh{N`{AOh}}AOnd}BCh}<;:=``````````````````````````{{{f{BCj}}}{{f{B`}}}}666555`{{nBCj}n}{nn}66{{{f{BCj}}}f}7666{Ghb}00`{{{f{BCl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BCj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{n}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{cBCj{{BAj{{E`{B`}}}}}}11{BCnn}{BD`n}{BDbn}{BDdn}{BDfn}{BDhn}{{}{{Gj{{f{B`}}BCl}{{Ad{b}}}}}}{{}Gh}00{{}c{}}00{cnALl}{{{f{B`}}}BCj}````{{{Gj{{f{B`}}BCl}{{Ad{b}}}}}b}{cnBDj}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{H`BCb}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{B`}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gn{Fj}}{f{{BDl{En}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gn{Ab}}{f{{BDl{En}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Eb}}}{{Gn{Fj}}}}0{{{f{AAn}}{f{{l{Bh}}}}}{{A`{AAnn}}}}{{Gh{Gn{Fj}}}AAn}{{{f{AAn}}{f{{Bl{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bl{Dd}}}}{f{{BDl{En}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HfGh}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}0{{{f{DfAAn}}{f{B`}}e}{{A`{{f{DfAAn}}n}}}BDn{{ABb{{f{Fj}}}{{Ad{c}}}}}}{{{f{DfAAn}}Ghe}{{A`{{f{DfAAn}}n}}}BDn{{ABb{{f{Fj}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gh}}}}}}}}6{{{f{DfAAn}}}b}{{{f{BE`}}}BE`}{{{f{BEb}}}BEb}9{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{B`}}}{{A`{{f{Fj}}n}}}}{{{f{DfAAn}}c}b{{D`{}{{Cj{Fj}}}}}}{{{f{AAn}}e}{{A`{{Gn{{f{Fj}}}}n}}}{{If{B`}}}{{Id{}{{Cj{c}}}}}}{{}BEb}{{}AAn}{Gh{{f{c}}}{}}0000{Gh{{f{Dfc}}}{}}0000{Ghb}0000{{{f{AAn}}{f{B`}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{B`}}}{{A`{Fjn}}}}{{{f{AAn}}e}AAn{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BEd{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bl{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gn{En}}}}9{{{f{{BDl{BAl}}}}}AAn}{{{f{{BDl{En}}}}}AAn}{{{f{BEb}}{f{BEb}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gh}`{{{f{AAn}}e}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AAn}}{Gn{Fj}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gn{Oj}}}}{{{f{AAn}}AId}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{Bh}}}}}{{A`{AAnn}}}}6{{{f{BE`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AAn}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0000{cAAn{{Id{}{{Cj{Fj}}}}}}{cAAn{{Id{}{{Cj{Ab}}}}}}{{{f{{Bl{BEf}}}}}{{A`{AAnn}}}}{{{f{{Bl{BEf}}}}{f{{BDl{En}}}}}{{A`{AAnn}}}}{{c{f{{BDl{En}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BEf}}}}}}}}{{{f{AAn}}Gh}{{Ch{{Gn{Jl}}}}}}{{{f{AAn}}{f{B`}}}{{Ch{Gh}}}}{{{f{AAn}}}{{Gn{{f{Dd}}}}}}{{{f{AAn}}}{{Gn{Dd}}}}{{{f{AAn}}}{{Gn{{f{B`}}}}}}{{{f{AAn}}}{{f{{Bl{Fj}}}}}}{{{f{DfAAn}}}{{f{Df{Gn{Fj}}}}}}{{{f{AAn}}Gh}{{A`{BEfn}}}}{{{f{AAn}}Gh{f{DfBEf}}}{{A`{bn}}}}{{{f{AAn}}Gh{f{DfBEf}}}b}{{{f{AAn}}}{{Ch{{A`{Enn}}}}}}`{{{f{AAn}}e}{{A`{BEhn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AAn}}{Gn{Fj}}{f{BEj}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}1{{{f{AAn}}{Gn{Fj}}dd}{{A`{BEhn}}}}{{{f{BEb}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gh}}}AAn}{{{f{AAn}}}Gh}{{{f{AAn}}{f{{Bl{Fj}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bl{Fj}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bl{Fj}}}}}{{f{DfAAn}}}}{{{f{AAn}}{BEl{Gh}}}f}{{{f{AAn}}{BEn{Gh}}}f}{{{f{AAn}}{BF`{Gh}}}f}{{{f{AAn}}{BFb{Gh}}}f}{{{f{AAn}}{Oh{Gh}}}f}{{{f{AAn}}BFd}f}{{{f{AAn}}{f{B`}}}f}{{{f{AAn}}Gh}f}{{}Gh}0000{{{f{DfAAn}}Ghc}{{A`{{f{DfAAn}}n}}}BDn}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{Bh}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jf}}}}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}B@dd}BFf}{{{f{AAn}}}BFh}{AAnBFj}{{{f{AAn}}}Gh}5{{{f{AAn}}}{{A`{{Ch{Fj}}n}}}}1{{{f{AAn}}BE`}{{A`{{Ch{Ab}}n}}}}12{{{Gn{Fj}}}{{A`{AAnn}}}}{{Gh{Gn{Fj}}}AAn}{{{Gn{Fj}}}AAn}22{{{Gn{Fj}}Gh}{{A`{AAnn}}}}0{{{f{DfBFf}}}Ch}{{{f{DfBFh}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gn{AAn}}n}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Eb{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Eb{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Eb{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Fj}}}}{{{f{DfAAn}}}b}{{AAnB@d}{{BFl{{Cn{Cl}}}}}}{{{f{DfAAn}}{f{B`}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{B`}}c}{{A`{{f{DfAAn}}n}}}BFn}{{{f{DfAAn}}Ghc}{{A`{{f{DfAAn}}n}}}BDn}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFn}<{{{f{AAn}}{Gn{Fj}}{f{BG`}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Ghdd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDl{En}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AAn}}Gh}{{Ch{{f{Fj}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BGb{Gh}}}}{{{f{AAn}}c}{{A`{{Gn{Fj}}n}}}{{BGd{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDl{En}}}}}}}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDl{En}}}}}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{DfAAn}}Gh}b}{{{f{AAn}}}{{Hj{GhGh}}}}{{{f{AAn}}Hf}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gh}{{{f{BFf}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BFh}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{AAn}}HfGh}AAn}00{{{f{AAn}}cFl}{{A`{AAnn}}}{{BGd{Dd}}}}{{{f{DfAAn}}cFl}{{A`{{f{DfAAn}}n}}}{{BGd{Dd}}}}{{{f{AAn}}Hf}{{Hj{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGhd}{{Gn{AAn}}}}{{{f{AAn}}BE`}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gh}}}AAn}{{{f{AAn}}{f{{l{Ff}}}}}{{A`{AAnn}}}}{AAn{{Gn{Fj}}}}{{{f{AAn}}{f{{l{Ff}}}}}AAn}{{{f{AAn}}{f{{l{Ff}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BGf}{{A`{{AAf{AA`{AAd{{AAb{Gh}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAAn}}{Ch{{f{B`}}}}{Ch{{AAj{El{Gn{El}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{B`}}}}{Ch{{AAj{Dd{Gn{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{B`}}e}{{A`{{f{DfAAn}}n}}}BDn{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Ghe}{{A`{{f{DfAAn}}n}}}BDn{{ABb{{f{Fj}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{BGh{{A`{AAnn}}}}{{{Hj{{BFl{{Cn{Cl}}}}{f{{BDl{BAl}}}}}}}{{A`{AAnn}}}}2{{c{f{{BDl{En}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BEf}}n}}}}}}}}{{{f{AAn}}{f{B`}}}{{A`{Ghn}}}}{{}{{A`{c}}}{}}0000{f{{A`{H`BCb}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bl{El}}}}}}BEb{Ch{{Hj{HfGh}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gn{Dd}}}}BEb{Ch{{Hj{HfGh}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BGd{Dd}}}}{{{f{AAn}}c{f{B`}}BGj}{{A`{AAnn}}}{{BGd{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gh}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDn}{{{f{DfAAn}}c{f{{BDl{En}}}}}{{A`{{f{DfAAn}}n}}}BDn}{{{f{DfAAn}}Fj}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Fb}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Fb}}}{{f{DfAAn}}}}``````{{fh}b}0{{FjFj}}{{Fjc}{}{BdMh}}{{{f{Fj}}c}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}{f{C`}}}Fj}0000000{{{f{Fj}}{f{C`}}AjA@`}Fj}11{{{f{Fj}}{f{C`}}Bj}Fj}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}{f{Fj}}ceg}Fj{{Eb{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}{{Eb{{f{Mj}}{f{Ab}}}{{Ad{Ab}}}}}{{Eb{{f{Ab}}{f{Mj}}}{{Ad{Ab}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}c}Fj{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}}{{A`{Fbn}}}}{{{f{Fj}}Fd}{{l{Ff}}}}{{{f{Fj}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{BGl}}}{{f{Ab}}}}{{{f{Fj}}}{{f{Ab}}}}{{{f{Fj}}}{{Ch{{f{BGn}}}}}}{{{f{Fj}}}{{Ch{{f{BGl}}}}}}{{{f{Fj}}}{{Ch{{f{Ab}}}}}}{{{f{BGl}}}Ab}{{{f{Fj}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Fj}}}{{Ch{BH`}}}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}120120{{{f{Fj}}}{{A`{{f{{l{Bh}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BGl}}{f{En}}}{{A`{BGln}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}10{{{f{BGl}}{f{En}}Gb}{{A`{BGln}}}}{{{f{Fj}}{f{En}}Gb}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{AMn}}n}}}}{{{f{Fj}}}Fj}{{{f{BGl}}}BGl}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fj}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fj}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{{{f{Fj}}c}{}{BdMh}}{{Fjc}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{Ghb}0>?{{{f{BGl}}}{{f{En}}}}{{{f{Fj}}}{{f{En}}}}{{{f{Fj}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fj}}{f{Fj}}}d}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}011{{{f{Fj}}}{{A`{Fjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}JlGh}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fj}}}{{E`{Oj}}}}{{{f{Fj}}AId}{{A`{Fjn}}}}{{{f{Fj}}{f{{l{Bh}}}}}{{A`{Fjn}}}}{{{f{BGl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{AbFj}{BGnFj}{BGlFj}3{{AbGh}BGl}{{DdGh{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{{f{Fj}}Gh}{{A`{Jln}}}}{{{f{Fj}}}Jn}{{{f{Fj}}}{{Ch{{Cn{G`}}}}}}{{{f{Fj}}Gh}{{Ch{{f{K`}}}}}}{{{f{Fj}}Gh}Jl}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}0{{{f{BGl}}}d}{{{f{Fj}}}d}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{l{Ah}}n}}}}{{}Gh}0{{}c{}}0{BDnFj}{BGlFj}{FjFj}{FjAAn}{{{f{DfFj}}}{{f{DfAb}}}}{BGlBGl}{{{f{BGl}}}d}{{{f{Fj}}}d}{{{f{Fj}}}{{A`{{l{Bh}}n}}}}000{{{f{Fj}}}{{l{Bh}}}}0{{{f{Fj}}}Mb}{{{f{BGl}}}{{Ch{{f{Ab}}}}}}{{{f{BGl}}}Gh}{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}0{{{f{Fj}}c}{{l{Bh}}}{{Eb{{f{Ab}}}{{Ad{{l{Bh}}}}}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}Mj}11{{Fjc}{}{BdMh}}{{{f{Fj}}c}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}9{{{f{Fj}}}{{A`{Ghn}}}}{{{f{BGl}}}{{f{Dd}}}}{{{f{Fj}}}{{f{Dd}}}}{{DdMjGh}BGl}{{Ddc}Fj{}}{{DdEn}BGl}{{Dd{f{En}}}Fj}{{{f{Fj}}GhGh}Fj}{{DdMjGh}Fj}0{{{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}0{{{f{Fj}}}Gh}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}{{Cn{Jf}}}}1{{{f{Fj}}AjA@`}{{A`{Mjn}}}}{{{f{Fj}}}Fj}?{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}c}{}{BdMh}}{{Fjc}{}{BdMh}}{{{f{DfBGl}}Dd}{{f{DfBGl}}}}{{{f{DfFj}}Dd}b}{{{f{Fj}}{f{{Bl{B@j}}}}}{{A`{Fjn}}}}0{{{f{BGl}}Gh}BGl}7{{{f{Fj}}Ajdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{Fj}}Ghdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{BGl}}}{{f{Mj}}}}{{{f{DfFj}}Mb}b}{{{f{Fj}}Hf}Fj}{{{f{DfFj}}}b}{{{f{Fj}}{Ch{Kf}}}Fj}{{{f{Fj}}HfGh}Fj}{{{f{Fj}}Fd}{{A`{Fjn}}}}0{{{f{Fj}}Hf}{{Hj{FjFj}}}}{{{f{Fj}}Bj}{{A`{Mjn}}}}{{{f{Fj}}}{{A`{{f{{l{An}}}}n}}}}{{{f{BGl}}{f{En}}}{{A`{BGln}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}{{Fjc}{}{BdMh}}{{{f{Fj}}c}{}{BdMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{Ch{Gh}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bl{A@h}}}}Mb}Fj}{BGlAb}{FjAb}{{{f{Fj}}{f{{Bl{A@h}}}}}Fj}{{{f{Fj}}{f{{Bl{Fb}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bl{Fb}}}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}Fj}{fc{}}0{{{f{Fj}}}Fj}{{{f{BGl}}}Ab}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}ceg}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{Eb{{f{Mj}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{Eb{{f{Ab}}{f{Mj}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}c}{{A`{Fjn}}}{{Eb{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Cb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Fj}}}{{Ch{{f{AMn}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fj}}}{{Ch{{f{{l{Ob}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fj}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fj}}c}{{A`{{l{Bh}}n}}}{{Eb{{f{Ab}}}{{Ad{{A`{{l{Bh}}n}}}}}}}}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{j}}}}}}}}2{{{f{Fj}}}{{Ch{{f{{l{Nl}}}}}}}}7{{{f{Fj}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nj}}}}}}}}{fAAl}0{{{f{Fj}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Fj}}}{{A`{Fjn}}}}0{AbBGl}{{{f{Fj}}Bj}{{A`{Mjn}}}}{{{f{Fj}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{Fj}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FjDd}Fj}{{{f{Fj}}c}Fj{BdMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{f{{l{Bh}}}}{f{Fj}}}{{A`{Fjn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BHb}}}BHb}{{f{f{Dfc}}}b{}}{fb}{{}BHb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{BHb}}{f{BHb}}}d}{{f{f{c}}}d{}}00{{{f{BHb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{BHb}}{f{Dfc}}}bADl}`{{}Gh}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BEh}}}{{A`{AAnn}}}}`{{{f{BHd}}}{{f{{Bl{{BHf{Fb}}}}}}}}{{{f{BEh}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}J`Jb}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHd}}}BHd}{{{f{C`}}}C`}{{{f{BEh}}}BEh}{{{f{BHh}}}BHh}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHd}{{}C`}{Gh{{f{c}}}{}}00{{{f{BHj}}}f}11111{Gh{{f{Dfc}}}{}}0000000`{{BHlc}{}BHn}{Ghb}000{{{f{DfBHd}}}b}1111{{{f{BHd}}{f{BHd}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BI`}}}Fb}{{{f{BHd}}}{{f{{Bl{Fb}}}}}}{{{f{BEh}}}{{A`{AAnn}}}}{{{f{DfBHd}}}{{f{Df{Gn{Fb}}}}}}{{{f{BHd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{C`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BHh}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B`}}BHh}Dd}{cc{}}0000{{{Gn{{Gn{{Hj{Fb{BHf{Fb}}}}}}}}}BHd}{{{Gn{{Hj{Fb{BHf{Fb}}}}}}}BHd}{BHdC`}33{BIbBHh}4{cBHd{{Id{}{{Cj{{Hj{Fb{BHf{Fb}}}}}}}}}}{cBHd{{In{}{{Cj{{Hj{Fb{BHf{Fb}}}}}}}}}}{{{f{C`}}Gh}BI`}{{{f{BEh}}}{{f{C`}}}}{{{f{DfBEh}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Ff}}}}{{{f{BId}}dd}{{A`{C`n}}}}{{{f{BEh}}}{{A`{AAnn}}}}{{{f{DfC`}}}{{f{DfBHd}}}}{{}Gh}0000000{{}c{}}0000000{C`BHd}1{BHd}{{{f{BHd}}}}310{{{f{BI`}}}d}{{{f{C`}}}d}{{{f{BHd}}}d}{{{f{BHd}}}{{BIh{{BIf{{Gf{Fb}}}}{Gf{{BHf{Fb}}}}}}}}{{{f{C`}}}BIj}{{{f{BEh}}}{{Gn{Fj}}}}{{{f{BEh}}{Ch{{Hj{HfGh}}}}}{{Gn{Fj}}}}={{{f{BI`}}}Gh}{{{f{C`}}}Gh}?????{{{Gn{Fb}}{Gn{{BHf{Fb}}}}d}BHd}{{{f{AAn}}{Gn{Fj}}C`{Ch{{Gn{Dd}}}}}BEh}{{{f{DfBIj}}}Ch}{{{f{DfBIj}}Gh}Ch}{{{f{BEh}}c}{{A`{AAnn}}}{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}J`Jb}}{f}{{{f{C`}}}BHl}{{{f{BEh}}AjA@`}{{A`{AAnn}}}}{{BEhe}BEh{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{C`}}HfGh}BHj}{{{f{DfBHd}}}b}{{{f{DfC`}}}b}{{{f{BEh}}Bj}{{A`{AAnn}}}}{{{f{BEh}}}{{A`{AAnn}}}}{C`{{Gn{Fb}}}}0{BEhC`}{{{f{DfBEh}}}C`}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{H`BCb}}}}{fAAl}0000000{C`C`}{{{f{C`}}}{{f{BHd}}}}{{{f{C`}}}{{f{{Gn{{AAb{Fb}}}}}}}}={{}c{}}0000000`````{{{f{BHd}}c}Ab{{Eb{{Hj{Fb{f{{BHf{Fb}}}}}}}{{Ad{Ch}}}}J`Jb}}{{{f{BHd}}c}Ab{{Eb{{Hj{Fb{f{{BHf{Fb}}}}}}}{{Ad{}}}}J`Jb}}{{{f{{Bl{{AAb{Fb}}}}}}c}Ab{{Eb{{AAb{Fb}}}{{Ad{Ch}}}}J`Jb}}{{{f{{Bl{{AAb{Fb}}}}}}c}Ab{{Eb{{AAb{Fb}}}{{Ad{}}}}J`Jb}}{{{f{{Bl{c}}}}e{Ch{BIl}}}{{AM`{c}}}{BInBJ`}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bl{c}}}}{f{Ij}}e{Ch{BIl}}}{{AM`{c}}}{BInBJ`}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAb{Fb}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJb}}{f{C`}}}Ab}{{BJdBJd}BJd}0`{{{f{BJf}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BJf}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBJh}}Jl}{{Ch{b}}}}{{{f{DfBJj}}{f{Jl}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BEf}}}BEf}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bl{c}}}}}En{{Il{En}}}}{{}BEf}{Gh{{f{c}}}{}}00{Gh{{f{Dfc}}}{}}00{Ghb}00{{{f{BEf}}{f{BEf}}}d}{{f{f{c}}}d{}}00{{{f{BEf}}{f{DfHn}}}{{A`{bI`}}}}{{{Hj{{f{En}}Gh}}}BJh}{cc{}}0{{{Hj{{f{En}}Gh}}}BJj}1{{gGh}{{BDl{En}}}{{BAj{Dd}}}{{BAj{En}}}{{D`{}{{Cj{{Gn{{Hj{ce}}}}}}}}}}{{}Gh}00{{}c{}}00{BJhAb}{BJjAb}{{{f{En}}Gh}BJh}{{{f{En}}Gh}BJj}{{{Gn{Jl}}}BEf}{{{f{DfBJh}}Gh}Ab}{{{f{DfBJj}}Gh}Ab}{{{f{{Bl{BEf}}}}{Ch{Gh}}}{{A`{{BDl{En}}n}}}}0{{{f{{Bl{BEf}}}}{Ch{Gh}}}{{A`{{Gn{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bl{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bl{AAn}}}}d}{{A`{AAnn}}}}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bl{Dd}}}}{f{{Bl{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BFjc}{{A`{AAnn}}}{{Eb{BJl{f{Df{BK`{BJn}}}}{f{Df{BK`{BKb}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKd}}{f{{Bl{Fb}}}}ddd}AAn}`{{{f{BKd}}{f{{Bl{Fb}}}}{Ch{{Hj{HfGh}}}}}AAn}{{{f{BKd}}{f{AAn}}{f{Ab}}{f{Ab}}BKf}{{A`{AAnn}}}}`{{{f{B`}}{f{B`}}}Dd}{{BKh{N`{{Bl{Dd}}}}}BBl}{{{f{BKd}}{f{Ab}}{f{Ab}}{Ch{{Hj{HfGh}}}}dd}{{A`{AAnn}}}}{{{f{BGh}}Gh}{{Hj{BGhBGh}}}}{{{f{AHd}}}Aj}{{{f{BKj}}}Aj}{{{f{BKl}}{f{{Bl{A@h}}}}Mb}AAn}0{{{f{BKl}}{f{{Bl{A@h}}}}}AAn}0{{{f{BKn}}{Ch{{Gn{{f{B`}}}}}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{BFjd}BFj}{{{BL`{c}}{Ch{{N`{BLb}}}}}{{BL`{c}}}BLd}{{{f{Ab}}}{{A`{Abn}}}}{BBlBBl}{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBlBBl}}{{BLhBLh}}{{{f{BGj}}Hf{Ch{{f{AMj}}}}}{{A`{Hfn}}}}0{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}1{{BLlc}BFj{{If{{Bl{BBl}}}}}}6`{{BBlc}BBl{{BAj{Dd}}}}{{}BBl}{{BBld}BBl}{{}BLn}{c{{A`{BBln}}}{{If{{Bl{BBl}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBM`}`{{BMbd}BMb}`{{{f{BMd}}}d}00`{{BBlc}BBl{{BAj{BBl}}}}{{{f{BKj}}}{{A`{Mjn}}}}{{{N`{BMd}}BMf}{{A`{BFjn}}}}{{BFjBFjcc}BFj{{BAj{BBl}}}}97{{BBlcd}BBl{{BAj{BBl}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{BLlc{N`{{BDl{En}}}}}BFj{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}J`Jb}}{{BBlc{BMj{{N`{BMh}}}}}BBl{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BBlBBlc{BMj{{N`{BMh}}}}}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{{f{BBl}}{f{Dfc}}f}{{A`{BMln}}}{{Af{{f{BBl}}f}{{Ad{{A`{BMln}}}}}}}}{{{f{AHj}}{f{Eb}}}AHj}{{{f{AHj}}{f{Eb}}}{{l{c}}}Dn}{{BBlc{f{{Bl{BBl}}}}{BMj{{N`{BMh}}}}}BBl{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BBlBMn{f{{Bl{BBl}}}}dd}BBl}{{ce{BMj{{N`{BMh}}}}d}BBl{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AHl}}}Fb}{BBlBBl}{{{f{BKj}}}{{A`{Fbn}}}}{{BBlBBlHfEn}BBl}{BGh{{N`{Cl}}}}{{{f{BN`}}}{{Ch{Gh}}}}{BNbBBl}{BNdBBl}62106{{{f{AHn}}Fd}{{l{Ff}}}}{{BBlFd}BBl}{{{f{BKj}}Fd}{{l{Ff}}}}{{cFl}BBl{{If{{Bl{BBl}}}}}}{{{f{AHn}}{f{{Bl{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AI`}}}{{A`{{l{Ff}}n}}}}<{{{f{BKj}}}{{A`{{l{Ff}}n}}}}{cBBl{{BAj{BBl}}}}{{{f{BNf}}}{{f{{Bl{Oj}}}}}}``{BBlBNb}{eANb{}{{Id{}{{Cj{c}}}}}}{cBGh{{Id{}{{Cj{{Ch{b}}}}}}}}{cBGh{{Id{}{{Cj{b}}}}}}2{{AGde}ANd{}{{Id{}{{Cj{c}}}}}}0{{AGdc}BGh{{Id{}{{Cj{b}}}}}}{{AGdc}BGh{{Id{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BNh{c}}}}}{{A`{{BDl{BAl}}n}}}BNj}{{{f{BMd}}}{{f{AGf}}}}{{{f{BKj}}}{{f{AGf}}}}{{{f{BNl}}}{{f{AGf}}}}{{{f{BGh}}}{{f{AGf}}}}{{{f{DfBKj}}}{{f{DfAGf}}}}{{{f{DfBGh}}}{{f{DfAGf}}}}{{{f{Mj}}}Jl}{{{f{BNn}}}{{f{{l{Bb}}}}}}{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BOb{BOdA@f}}{{{f{BOf}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBM`}{{{f{{N`{c}}}}}OfBOh}{{{f{BOj}}}{{f{BBl}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBM`}{{{f{ANj}}}{{f{En}}}}{{{f{BOl}}}{{f{Ab}}}}{{{f{DfBKj}}}{{A`{Ghn}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BOn}}}{{f{{l{An}}}}}}{{{Gn{BBl}}}BBl}{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{Bl{{C@`{c}}}}e}}}{{N`{{Bl{c}}e}}}{}BM`}{{{N`{{C@`{c}}e}}}{{N`{ce}}}{}BM`}{{{f{B`}}}BBl}{{BBl{Ch{Fb}}}BBl}{{{f{C@b}}}{{A`{{l{An}}n}}}}{{{f{C@b}}}{{l{An}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMj}}}{{L`{LlLb}}}}`{{{BL`{{Cn{BLd}}}}{Ch{{N`{{BDl{En}}}}}}}{{A`{C@dn}}}}{{{C@f{c}}{f{{BDl{En}}}}}{{A`{{C@h{c}}n}}}C@j}{{{C@l{c}}{f{{BDl{En}}}}}{{A`{{C@n{c}}n}}}C@j}{{{CA`{c}}Gh}{{A`{CAbn}}}BLd}{{{CAd{c}}{f{{BDl{En}}}}}{{A`{{CAf{c}}n}}}C@j}{{{f{Df{BL`{c}}}}}{{A`{CAhn}}}BLd}`{BBlCAj}{{BBlCAlBBl}BBl}{{BLhBLh}}{{BLnBLn}BLn}{{{f{DfBLn}}BLn}b}10{{{f{BLn}}}Fb}0321{f{{f{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBM`}111111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BFjFbcFl}BFj{{If{{Bl{BBl}}}}}}{BGh{{Cn{Cl}}}}{{{f{BKj}}}{{Ch{{Cn{G`}}}}}}``{BFjBFj}```{{{f{CAn}}{f{Dd}}}{{A`{Ddn}}}}{{CB`{Gn{BBl}}}{{A`{BBln}}}}{{{f{AMn}}{f{AMn}}c}{{A`{AMnn}}}AOj}{{{f{BNl}}{f{Df{Bl{Fj}}}}}{{A`{{Ch{Fj}}n}}}}{{{f{CBb}}FjFj}{{A`{Fjn}}}}{{CB`{Gn{BBl}}}BBl}{{{f{CBd}}}b}{{BBlEn}BBl}{{{f{BKj}}{f{En}}Gb}{{A`{Abn}}}}{{BFj{CBf{{f{B`}}EnA@l}}d}BFj}{{{f{AIb}}{f{En}}}{{A`{Abn}}}}3{{{f{AOl}}{f{En}}}{{A`{Abn}}}}{{BFjEnd}BFj}2{{{f{AIb}}{f{En}}Gb}{{A`{Abn}}}}{{{f{AOl}}{f{En}}Gb}{{A`{Abn}}}}{{BBlEnGb}BBl}`{BBlCBh}{{{f{{N`{c}}}}}{{Ch{{f{ALl}}}}}{ALlA@f}}{BBlBBl}{{{f{CBj}}}{{A`{Abn}}}}1`{{{f{CBl}}}{{A`{{l{Kl}}n}}}}{{{f{BGh}}Gh}d}{{{f{CBn}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKj}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBn}}c}{{A`{Abn}}}Bf}{{{f{BKj}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}``{{{f{BKj}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBKj}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBlBBlBBl}BBl}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBlBBl}BBl}10{{{f{CBd}}}CBd}{{{f{BFj}}}BFj}{{{f{BLl}}}BLl}{{{f{BMf}}}BMf}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{BEj}}}BEj}{{{f{BG`}}}BG`}{{{f{CCj}}}CCj}{{{f{BGj}}}BGj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{BKf}}}BKf}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{BOj}}}BOj}{{{f{BBl}}}BBl}{{{f{{CHj{c}}}}}{{CHj{c}}}{JhJh}}{{{f{CHl}}}CHl}{{{f{CAl}}}CAl}{{{f{{BMj{c}}}}}{{BMj{c}}}Jh}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{BMn}}}BMn}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{BLh}}}BLh}{{{f{CB`}}}CB`}{{{f{BLn}}}BLn}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BM`Jh}}{{{f{CK`}}}CK`}{{{f{CKb}}}CKb}{{{f{CKd}}}CKd}{{{f{A@b}}}A@b}{{{f{BGf}}}BGf}{{{f{BGh}}}BGh}{{{f{Mj}}}Mj}{{{f{BAl}}}BAl}{{{f{A@`}}}A@`}{{{f{BIl}}}BIl}{{{f{CKf}}}CKf}{{{f{CKh}}}CKh}{{{f{CKj}}}CKj}{{{f{BKj}}}{{N`{BKj}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CKl}}}{{Ch{{f{CKn}}}}}}{{{f{CC`}}}{{Ch{{f{CKn}}}}}}{{{f{CCd}}}{{Ch{{f{CKn}}}}}}``{{{f{BGj}}{f{BGj}}}B@n}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@n{CL`A@f}BM`}{{{f{{Bl{BBl}}}}}BBl}{{BMbCEl}BMb}{{{f{CEl}}{f{CEn}}}d}`{{{f{{Bl{Fj}}}}}{{A`{Fjn}}}}{cBBl{{BAj{Dd}}}}{BFj{{A`{AAnn}}}}{c{{A`{{Gn{AAn}}n}}}{{In{}{{Cj{BFj}}}}}}{BA`e{}{{ANb{c}}ALh}}0{{BA`AGd}e{}{{ANd{c}}ALh}}0{{ADnDd}{{l{c}}}Dn}{{AE`{f{{l{c}}}}}{{l{c}}}Dn}10{{AE`DdEn}{{l{c}}}Dn}0{BFj{{A`{CBdn}}}}{{{f{DfBFj}}}{{A`{{N`{{BDl{En}}}}n}}}}{eBBl{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{CJj}}Gh}CLb}``{{{f{BKn}}{Gn{{f{B`}}}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@n{}}0{{CDl{f{{BDl{En}}}}}{{A`{CLdn}}}}{BLnBLn}```{{{f{CH`}}}{{A`{{N`{{BDl{En}}}}n}}}}{{cCKd}{{A`{BFjn}}}{{If{{Bl{BFj}}}}}}{{{f{C@b}}{f{{l{An}}}}}{{l{An}}}}{{ed}{{A`{BBln}}}{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{{f{CKl}}{Gn{BFj}}}{{A`{BFjn}}}}{{{f{CC`}}{Gn{BFj}}}{{A`{BFjn}}}}44{e{{A`{BBln}}}{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{c{f{B`}}d}BBl{{If{{Bl{BBl}}}}}}{{BNbc}BBl{{BAj{BBl}}}}{{{f{CLf}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{C@b}}{f{B`}}d}{{A`{{l{Bh}}n}}}}{{BNdc}BBl{{BAj{BBl}}}}{{{f{BLn}}BLn}d}{{{f{CLf}}{f{{l{Bb}}}}}{{l{Bh}}}}{{{f{C@b}}{f{{l{An}}}}dd}{{A`{{l{Bh}}n}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Bh}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gh}{{A`{{l{Ff}}n}}}}{BFjBFj}{{{CLh{c}}}{{A`{Ghn}}}BLd}{BBlBBl}{{{f{C@b}}{f{B`}}d}{{A`{{l{Ff}}n}}}}{{{f{C@b}}{f{{l{An}}}}d}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANf}}Bj{Ch{Bj}}{Ch{{f{CDj}}}}Bjd}{{A`{Ghn}}}}{{{f{{Bl{Bj}}}}Bj{Ch{Bj}}{Ch{{f{CDj}}}}Bjd}{{A`{Ghn}}}}2{{{AOf{B`}}}En}{{{f{BKd}}{f{{Bl{A@h}}}}dd}AAn}{{{f{CLj}}}{{CBf{GhMbA@l}}}}`{{BFjBFj{Ch{Dd}}}BFj}{{{f{CLl}}{f{AAn}}{Ch{Dd}}{Ch{{Hj{HfGh}}}}}{{A`{AAnn}}}}{{{f{CLl}}{f{AAn}}{Ch{{Hj{HfGh}}}}d}{{A`{{Hj{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBld}BBl}{{BBlced}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}212121{{ce}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}32{{CLnBBlGhd}BBl}```{{BBlBBlBGjCCl}BBl}`{CIlBBl}`{{BBlBBlBGjCCl{Ch{Ld}}{Ch{Dd}}}BBl}0{AMhHf}00{{{f{CM`}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}`{{{f{CMd}}}{{l{Lb}}}}{{{f{BGj}}}Hf}`{{{f{BGj}}}d}```{{}b}{cbBM`}{{}BFj}{{}BMf}{{}CCb}{{}CCf}{{}CMf}{{}BEj}{{}BG`}{{}CD`}{{}CDd}{{}CDf}{{}CDh}{{}CDn}{{}CE`}{{}CEb}{{}CEf}{{}CEh}{{}BKf}{{}CEj}{{}CEl}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFj}{{}CFl}{{}CFn}{{}CG`}{{}CGj}{{}CGn}{{}CH`}{{}BBl}{{}{{BMj{{N`{CMh}}}}}}{{}{{BMj{{N`{CBb}}}}}}{{}{{BMj{{N`{BMh}}}}}}{{}CId}{{}CIl}{{}CIn}{{}CJb}{{}CJd}{{}CJf}{{}CJh}{{}CJn}{{}BLn}{{}{{N`{CMj}}}}{{}{{N`{{Bl{c}}}}}{}}{{}{{N`{c}}}CMl}{{}{{N`{B`}}}}{{}CKb}{{}CKd}{{}A@b}{{}BGf}{{}BAl}{{}A@`}`{{}{{AAj{{Gn{AB`}}{Gn{A@h}}}}}}{Gh{{f{c}}}{}}00{{{f{{AMf{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BMj{c}}}}}f{}}22222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBM`}333333333333333{Gh{{f{Dfc}}}{}}00{{{f{Df{AMf{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CH`}}}{{A`{Eln}}}}{{{f{BFj}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{B`}}}{ALlA@f}}{{{f{BAl}}c}{{A`{CMnn}}}{{Jf{}{{Cj{{f{CN`}}}}}}}}```{{{f{Ab}}HfCNb}{{A`{Abn}}}}{{BNdHfCNb}BBl}{{BBlHfCNb}BBl}{{BLnBLn}BLn}{{{f{CH`}}}{{A`{{`{BDj}}n}}}}``{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBlBBl}}{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}{{BBlc}BBl{{BAj{BBl}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BM`{AGfJ`Jb}}{{{N`{AGfc}}}{{N`{ec}}}BM`{AGfJ`Jb}}{{{f{{N`{ce}}}}}{{CNd{ce}}}A@f{JhBM`}}{Ghb}0000000{{{f{DfCBd}}}b}{{BFje}BFj{{BAj{BLh}}}{{Id{}{{Cj{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBM`}33333333333333{BBlBBl}2{{BFj{Ch{{Gn{BBl}}}}}BFj}1{{{f{BKj}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMj}}}{{L`{LlLb}}}}`{BBlCNf}{{{f{AOl}}}{{f{En}}}}{{{f{BKj}}}{{f{En}}}}{{{f{BGh}}}{{f{AGd}}}}{{{f{Mj}}}{{f{En}}}}{{{f{BAl}}}{{f{AGd}}}}``{{{f{En}}}BBl}{cBBl{{If{{Bl{En}}}}}}`{CInBBl}{{}CId}{{}BLn}{fc{{BAf{BAd}}}}0`{{{f{CLf}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{CLf}}{f{{l{Bb}}}}}{{l{Bh}}}}{{BGj{f{En}}{f{B`}}}{{A`{bn}}}}{{BGj{Ch{{f{B`}}}}{f{B`}}}{{A`{bn}}}}{{{f{{BDl{c}}}}{f{{BDl{c}}}}}{{A`{bn}}}{}}{{{f{CNh}}{f{B`}}}{{A`{bn}}}}`{{{f{CCh}}{f{CCh}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{BG`}}{f{BG`}}}d}{{{f{BGj}}{f{BGj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{BKf}}{f{BKf}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{BOj}}{f{BOj}}}d}{{BBlc}BBl{{BAj{BBl}}}}{{{f{BBl}}{f{BBl}}}d}{{{f{{CHj{c}}}}{f{{CHj{c}}}}}d{CNjJh}}{{{f{CHl}}{f{CHl}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{{BMj{Ab}}}}{f{{BMj{Ab}}}}}d}{{{f{{BMj{{N`{c}}}}}}{f{{BMj{{N`{c}}}}}}}dA@f}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CMn}}{f{CMn}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{BMn}}{f{BMn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{BLh}}{f{BLh}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNjA@f}BM`}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{CNl}}}}{f{CNl}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BGf}}{f{BGf}}}d}{{{f{BGh}}{f{BGh}}}d}{{{f{BGh}}{f{{f{Cl}}}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAl}}{f{BAl}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{CKh}}{f{CKh}}}d}{{{f{CKj}}{f{CKj}}}d}{{BBlc}BBl{{BAj{BBl}}}}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{An}}}}}{{l{An}}}}{{{f{B`}}}El}{{CNnBBld}BBl}``{{BBlc}BBl{{BGd{Dd}}}}{{BBlc}BBl{{If{{Bl{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BD`}}}CO`{}}{{{f{{Bl{COb}}}}d{Ch{{f{CKn}}}}}{{A`{{N`{{Bl{COb}}}}n}}}}{{{f{{Bl{COb}}}}d{Ch{{f{CKn}}}}d}{{A`{{Hj{{N`{{Bl{COb}}}}Gh}}n}}}}{{{f{{Bl{c}}}}{f{{Bl{c}}}}}d{{If{ANf}}}}{{{f{BFj}}d}{{A`{Eln}}}}{BNbBBl}{{BFje}BFj{{BAj{BLh}}Jh}{{If{{Bl{c}}}}}}{{{f{AIh}}}{{A`{Abn}}}}{BBlBBl}{{{f{AIh}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{DfBLn}}c}b{{Id{}{{Cj{BLn}}}}}}{{BBlBBlBBl}BBl}{{{f{C@b}}{f{{l{An}}}}Gh}{{A`{{l{An}}n}}}}{A@h{{Hj{FbFb}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Ah}}n}}}}{{{f{C@b}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@b}}{f{B`}}{f{En}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CBd}}}{{Ch{{A`{AAnn}}}}}}{{BFjGh}{{A`{AAnn}}}}{{{f{CBd}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BKj}}}{{E`{Oj}}}}{{BKhHf}BBl}{{BKh{f{B`}}}BBl}{{BKhe}BBl{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BGh}}}{{f{{Bl{BAl}}}}}}`{{BFjc}BFj{{BAj{BBl}}}}{{BBlc}BBl{{BAj{BBl}}}}`10{{BBlAId}BBl}{{{f{AIj}}c}{{A`{AIjn}}}{}}{{{f{AIl}}{f{{l{Bh}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BKj}}{f{{l{Bh}}}}}{{A`{Abn}}}}{{BFjBBl}BFj}5{{{f{C@b}}{f{B`}}d}{{A`{{l{Ff}}n}}}}{{{f{C@b}}{f{{l{An}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Ff}}n}}}}{COd{{A`{AAnn}}}}{{{f{DfCOf}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dn}{{AOj{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{BMbBFj}{{{BL`{c}}}{{A`{AAnn}}}BLd}{CKl{{A`{BFjn}}}}{CC`{{A`{BFjn}}}}{CCd{{A`{BFjn}}}}{{{f{Df{C@f{c}}}}{f{DfAAn}}}{{A`{bn}}}C@j}{{{COh{c}}}{{A`{AAnn}}}BLd}{{{BNh{c}}}{{A`{AAnn}}}BNj}{{{f{Df{COj{c}}}}{f{DfAAn}}}{{A`{bn}}}C@j}{{{f{Df{C@l{c}}}}{f{DfAAn}}}{{A`{bn}}}C@j}{{{f{Df{COl{c}}}}{f{DfAAn}}}{{A`{bn}}}C@j}{{{COn{c}}}{{A`{AAnn}}}BLd}{{{CLh{c}}}{{A`{AAnn}}}BLd}{{{CA`{c}}}{{A`{AAnn}}}BLd}{{{CAd{c}}{f{DfAAn}}}{{A`{Kfn}}}C@j}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{COh{c}}{Ch{{N`{BLb}}}}d}{{A`{AAnn}}}BLd}{{{f{CAb}}Gh}d}{{}BBl}{BFjBFj}{BNdBBl}{BBlBBl}{{{f{BKj}}}Mj}`1```{{}{{BMj{{N`{BMh}}}}}}{{{f{CBj}}}{{A`{Abn}}}}3{{BBlBBl}BBl}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBD`}}}}{{{f{BNl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CBb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CAn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BG`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CCl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CD`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AB`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@h}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CDn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{D@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CE`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BKf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CF`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CG`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BBl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{{CHj{c}}}}{f{DfHn}}}{{A`{bI`}}}Jh}{{{f{CHl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CAl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{{BMj{c}}}}{f{DfHn}}}{{A`{bI`}}}{}}{{{f{CHn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CI`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CIb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CMn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CId}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIf}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CIh}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CIj}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{BMn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CIl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJ`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BLh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CB`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BLn}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}A@fBM`}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{BDjA@f}BM`}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{AGhA@f}BM`}{{{f{CK`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Mj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BAl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BIl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B`}}BHh}Dd}```{{BBlce}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}{{BMbd}BMb}``{{{f{B`}}c}{{A`{BBln}}}{{If{{Bl{BBl}}}}}}{{BBl{Ch{Fb}}}BBl}{cc{}}00000000{CH`BFj}{BLlBFj}2222222222222222222222222222222222{FbAB`}3333333{{{f{B`}}}CDj}44444444{CEnBKf}55555555555555555555555555{NfBBl}{dBBl}{KfBBl}{FbBBl}9{NnBBl}{BjBBl}{HfBBl}{OfBBl}{OdBBl}{BOjBBl}{{{f{B`}}}BBl}{KdBBl}{AjBBl}{cc{}}00{CFlCAl}1{D@b{{BMj{{N`{BNl}}}}}}{CIj{{BMj{{N`{BNl}}}}}}{CHn{{BMj{{N`{BNl}}}}}}{CI`{{BMj{{N`{BNl}}}}}}{D@d{{BMj{{N`{BNl}}}}}}{CIh{{BMj{{N`{BNl}}}}}}{D@f{{BMj{{N`{BNl}}}}}}{BMn{{BMj{{N`{BNl}}}}}}{D@h{{BMj{{N`{BNl}}}}}}{CIb{{BMj{{N`{BNl}}}}}};;;{D@jCMn}<<<<<{CHnBMn}{CI`BMn}{D@fBMn}?{CIhBMn}{cc{}}00000{CJhCJf}1111{ElBLh}{{{f{B`}}}BLh}{DdBLh}{BBlBLh}555{D@l{{N`{ANh}}}}{{{Cn{ce}}}{{N`{ce}}}A@fBM`}{{{f{ANf}}}{{N`{ANf}}}}{D@n{{N`{CMj}}}}{COb{{N`{ANf}}}}{{{f{CMj}}}{{N`{CMj}}}}{{{f{ANh}}}{{N`{ANh}}}}{c{{N`{c}}}{}}{{{E`{c}}}{{N`{c}}}{DA`A@f}}{El{{N`{B`}}}}{DAbc{}}{cc{}}{{{f{{Bl{c}}}}}{{N`{{Bl{c}}}}}Jh}{{{f{B`}}}{{N`{B`}}}}{{{N`{B`}}}{{N`{{Bl{Bj}}}}}}{H`{{N`{B`}}}}{{{Gn{ce}}}{{N`{{Bl{c}}e}}}{}{BM`Jh}}{{{AAb{c}}}{{N`{{Bl{c}}}}}{}}6{JlCK`}77777{DAdBGh}8{BjMj}{NnMj}{HfMj}{OfMj}{OdMj}{NfMj}{KfMj}{FbMj}{KdMj}{AjMj}{dMj}{cc{}}000000{{{f{{BDl{BAl}}}}}DAf}{Fb{{Ch{BLn}}}}{FbBLn}00{{c{Ch{Ij}}}DAh{}}{{{DAj{Hf}}{DAj{Bj}}{Ch{Ij}}}DAl}{{{DAj{Hf}}{DAj{Bj}}{Ch{Ij}}}DAn}{c{{AMf{{l{Bh}}}}}{{Id{}{{Cj{d}}}}}}{c{{AMf{{l{e}}}}}{{Id{}{{Cj{}}}}}Al}{cBLn{{Id{}{{Cj{BLn}}}}}}{e{{N`{{Bl{c}}}}}{}{{Id{}{{Cj{c}}}}}}{{gGh}{{DB`{Hf}}}If{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}0{e{{DB`{Hf}}}{{Id{}{{Cj{{Ch{d}}}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{DB`{Hf}}}BJ`{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{B`}}}{{Ch{BLn}}}}{c{{AMf{{l{e}}}}}{{In{}{{Cj{}}}}}Al}{e{{N`{{Bl{c}}}}}J`{{In{}{{Cj{c}}}}}}`{c{{A`{{CLh{AFj}}n}}}{{BAj{COb}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BM`A@f}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{B`}}}{{A`{DBb}}}}{c{{AMf{{l{e}}}}}{{Jj{}{{Cj{}}}}}Al}{c{{AMf{{l{Bh}}}}}{{Jj{}{{Cj{d}}}}}}{En{{BMj{{N`{BMh}}}}}}{{Ddc}DBd{}}{{{Gn{c}}AGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGd}{{ALh{}{{ANl{e}}{ANn{c}}{AO`{g}}}}}{AOb{AOd{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}`{{DdcGh}AIn{}}{{GhcAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{}CId}{{BFjBFjcc}BFj{{BAj{BBl}}}}{{{f{DBf}}{f{AAn}}ei}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}{{BAj{Dd}}}{{Id{}{{Cj{g}}}}}}{{DdGh}AJ`}{{GhAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGd}BGh}``{{BBlc{BMj{{N`{BMh}}}}DBh}BBl{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}`{{BBlc}BBl{{BAj{BBl}}}}{{BBlGhGh}BBl}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBjA@f}BM`}{{{f{BKj}}Gh}{{A`{Jln}}}}{{BNbBBld}BBl}{{BNdBBld}BBl}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}6{{{f{AJb}}Gh}{{A`{Jln}}}}{{{f{AOl}}Gh}{{A`{Jln}}}}{{{f{AJb}}Gh}Jl}{{{f{AOl}}Gh}Jl}{CBhBBl}{{{f{BFj}}}BLn}{{{f{CK`}}}En}{{}En}{{{f{CDb}}HfCCl{Ch{{f{AMj}}}}}{{A`{CCjn}}}}00{{{f{CMh}}{f{{BDl{En}}}}DBl{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BMh}}{f{{BDl{En}}}}DBl{f{{Bl{Oj}}}}}{{A`{Ojn}}}}{{{f{DAf}}{f{B`}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bl{BAl}}}}}}{{{f{BNf}}}Gh}{{{f{{Bl{Bj}}}}}{{Ch{Gh}}}}{{{f{Df{CA`{c}}}}}{{A`{{f{{N`{CJj}}}}n}}}BLd}{{{f{BKj}}}{{Ch{{Nb{G`}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBM`}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBM`}{{{f{BKj}}Gh}{{Ch{{f{K`}}}}}}{{{f{BKj}}GhGh}{{Ch{{f{K`}}}}}}{{{f{CDb}}CCjCClLd{Ch{{f{AMj}}}}CD`}{{A`{DBnn}}}}{{{f{CDd}}}{{N`{CDf}}}}{{{f{Dfc}}}{{A`{DC`n}}}{BNjBLdA@f}}{{{f{D@`}}{f{{BDl{En}}}}}{{A`{{N`{{BDl{En}}}}n}}}}{{{f{BBf}}Gh}Jl}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BKj}}Gh}Jl}{{{f{CKl}}}d}{{{f{CC`}}}d}`{{BFje}BLl{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{{f{DCb}}{Gn{Fj}}{f{BEj}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BFjBBlcBEj}BLl{{If{{Bl{BBl}}}}}}2{{BGjBGj{f{{Bl{Hf}}}}CClLd{Ch{AMj}}}{{A`{{Gn{{AAb{Fb}}}}n}}}}{{CDb{f{{Bl{Hf}}}}CClLd{f{{Ch{Dd}}}}ddCD`}{{Hj{{Gn{{AAb{Fb}}}}{Gn{Hf}}{Gn{Hf}}}}}}{{{f{BId}}dd}{{A`{C`n}}}}{{{f{{AJd{}{{Cj{c}}}}}}e}c{}{}}{{BBlc}BBl{{BAj{BBl}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBjA@f}BM`}21`{{{f{BKj}}}d}{{{f{BEj}}{f{Dfc}}}bADl}{{{f{BG`}}{f{Dfc}}}bADl}{{{f{BGj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CCn}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{BKf}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{CG`}}{f{Dfc}}}bADl}{{{f{CGb}}{f{Dfc}}}bADl}{{{f{CGd}}{f{Dfc}}}bADl}{{{f{CGf}}{f{Dfc}}}bADl}{{{f{CGh}}{f{Dfc}}}bADl}{{{f{CGj}}{f{Dfc}}}bADl}{{{f{CGl}}{f{Dfc}}}bADl}{{{f{CGn}}{f{Dfc}}}bADl}{{{f{BOj}}{f{Dfc}}}bADl}{{{f{BBl}}{f{Dfc}}}bADl}{{{f{CHl}}{f{Dfc}}}bADl}{{{f{CAl}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{CIj}}{f{Dfc}}}bADl}{{{f{BMn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{CJd}}{f{Dfc}}}bADl}{{{f{CJf}}{f{Dfc}}}bADl}{{{f{CJh}}{f{Dfc}}}bADl}{{{f{CJl}}{f{Dfc}}}bADl}{{{f{CJn}}{f{Dfc}}}bADl}{{{f{BLh}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DCdA@f}BM`ADl}{{{f{CK`}}{f{Dfc}}}bADl}{{{f{CKb}}{f{Dfc}}}bADl}{{{f{CKd}}{f{Dfc}}}bADl}{{{f{BGf}}{f{Dfc}}}bADl}{{{f{BAl}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CKj}}{f{Dfc}}}bADl}{{{f{DCf}}{f{Ab}}CFbd}{{A`{{Hj{{Hj{{Gn{Fb}}{Gn{Fb}}}}d}}n}}}}{{{f{DCf}}{f{Ab}}CFbd}{{A`{{Hj{{AM`{Fb}}{AM`{Fb}}}}n}}}}{{{f{DCf}}{f{Ab}}dd}{{A`{{Gn{Fb}}n}}}}{{BLl{Ch{Gh}}}BFj}{{BNdBBl}BBl}{{BBl{Ch{Gh}}}BBl}{{{f{C@b}}}{{A`{{l{An}}n}}}}{{{f{C@b}}}{{l{An}}}}``{{{f{{Bl{{f{{l{An}}}}}}}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{DCh}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}`{{{f{CMd}}}{{l{Lb}}}}`{{BMbCEn}BMb}`{{{f{AB`}}}Fb}`{{{f{{Bl{Fj}}}}Ld}{{A`{Fjn}}}}{{{f{{L`{LfLb}}}}{f{{l{An}}}}CKj{Gj{Hf}{{Ad{AMh}}}}{Gj{AMh}{{Ad{Hf}}}}{f{AMj}}{f{AMj}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{Gj{Hf}{{Ad{AMh}}}}{Gj{AMh}{{Ad{Hf}}}}{f{AMj}}{f{AMj}}}{{A`{{l{Lb}}n}}}}{BBlBBl}{{{f{AMh}}}d}{{{C@f{c}}d}{{C@f{c}}}C@j}````0`{{}b}{cb{JhBM`}}``{cBBl{{If{{Bl{Hf}}}}}}``{{{f{{Bl{Fb}}}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{DC`}}Bj{Ch{Gh}}d{Ch{{f{{BDl{En}}}}}}GhGh{Ch{{f{CDj}}}}{Ch{Bj}}Bj{Ch{{f{CDl}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BDl{En}}GhGh}}n}}}}{{{COn{c}}{Ch{{DCj{Gh}}}}}{{COn{c}}}BLd}{{{CLh{c}}{Ch{{DCj{Gh}}}}}{{CLh{c}}}BLd}``{{}Gh}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BFjBFjcc}BFj{{BAj{BBl}}}}{{{f{DBf}}{f{AAn}}ei}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}{{BAj{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLn}}BLn}b}{{BBlBBlHfEn}BBl}{{BBlBBlBBl}BBl}`{{{f{Ab}}CGh}Ab}{{BBlCGh}BBl}`{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{BBlBBl}BBl}{{BLnBLn}BLn}{{{f{BLn}}BLn}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDnFj}{{}Fj}{{MjDd}Fj}{BGh{{Hj{{Gn{BAl}}Gh{Gn{{Cn{Cl}}}}{Ch{Ij}}}}}}{{{AMf{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BM`}66{{{f{BBl}}}}{BLn}{{{f{BGh}}}}{DClBNd}{BNdBNd}{{{N`{ce}}}{}A@fBM`}{{{N`{ce}}}{{Hj{e}}}A@fBM`}{{CDdc}{{BL`{c}}}BLd}{{BBhEn}{{A`{Mjn}}}}{BFnAb}{{{N`{BKj}}}Ab}{{MjDd}Ab}{BGd{{Gn{c}}}{}}{{}{{Gn{Dd}}}}{{{f{BLn}}}d}{{{f{CAl}}}d}{{{f{CEn}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CGj}{{A`{{l{Bh}}n}}}}{{BBlccCGj}BBl{{BAj{BBl}}}}{cd{{If{ANf}}}}4{{{f{BGj}}{Ch{{f{B`}}}}}d}4{{{f{CId}}}d}7{{{f{BKj}}}d}{{{f{CAb}}}d}{BBlBBl}{{{f{Ab}}}{{A`{{l{Bh}}n}}}}{{{f{AJf}}}{{A`{{l{Bh}}n}}}}25{{{f{BGj}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{Bh}}n}}}}{{BBlc}BBl{{BAj{BBl}}}}54{{{f{AJh}}}{{A`{{l{Bh}}n}}}}6{{{f{CM`}}}{{l{Bh}}}}{{{f{CMb}}}{{l{Bh}}}}{{{f{CBl}}}{{A`{{l{Bh}}n}}}}9{{{f{Mj}}}d}::{{{f{BKj}}}{{l{Bh}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CK`}}}d}{{}d}{{{f{CNh}}Fd}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CFb}}{f{CEn}}}{{A`{bn}}}}6{{{f{BGj}}}d}{{{f{CM`}}}{{l{Kl}}}}{{{f{CMb}}}{{l{Kl}}}}{{{f{CBl}}}{{A`{{l{Kl}}n}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{AGl{cgAGj}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BLn}}}{{AFf{BLn}}}}{{{f{BGh}}}{{AGl{{Gn{{Cn{CNl}}}}DCnAGj}}}}{{{f{DAf}}}{{`{Jf}}}}{{{f{BLn}}}{{AFh{BLn}}}}{{{f{{DDb{}{{DD`{c}}}}}}}{{`{Jf}}}{AGhJhCMlCNj}}{{BNbBBld}BBl}{{BFjBFjccBKf}BFj{{If{{Bl{BBl}}}}}}{{BNdBBld}BBl}{{{f{DBf}}{f{AAn}}eiBKf}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}{{BAj{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DDd}}{f{AAn}}{f{B`}}{f{B`}}eeCFh{Ch{Jl}}}{{A`{AAnn}}}{{If{B`}}}{{Id{}{{Cj{c}}}}}}{BFjBMb}{{{f{DDf}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{DDf}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{BMbd}BMb}`{{BMb{Gn{BBl}}}BFj}{BKhBBl}{DDhBBl}{{{f{CJj}}}{{f{{Ch{{Gn{DDj}}}}}}}}``{{}BBl}{BFjBFj}{BNdBBl}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{BBlBBl}{{{f{BKj}}}Mj}{DDlBFj}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBjA@f}BM`}{{{f{Ab}}}{{A`{Abn}}}}0`{{BFjBFjcc}BFj{{BAj{BBl}}}}{{{f{DBf}}{f{AAn}}ei}{{A`{AAnn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}{{BAj{Dd}}}{{Id{}{{Cj{g}}}}}}{{BMbc}BMb{{If{{Bl{BBl}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}>{{{f{BKj}}}Gh}=;{{{f{BGh}}}Gh}{{BFjFb}BFj}{{{f{BKj}}Gh}Ab}```{BBlBNd}{cBBlDDn}{DDnBBl}{BGjBBl}{DE`BBl}{CK`BBl}{MjBBl}{{BBlc}BBl{{BAj{BBl}}}}0``{{CCdd}CCd}{{{CLh{c}}d}{{CLh{c}}}BLd}```{BBlBBl}{{{f{DDf}}}{{l{Ff}}}}0{{{f{DDf}}{f{{Bl{Fj}}}}}{{A`{{l{Ah}}n}}}}{{{f{DDf}}HfCNb}{{A`{{l{Ah}}n}}}}{{{f{DDf}}Hfd}{{A`{Abn}}}}{{{f{DDf}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}4{{{f{DDf}}}{{A`{Abn}}}}{{{f{DDf}}}Ab}01{{{f{DDf}}}{{A`{{l{Ff}}n}}}}{{{f{DDf}}}{{l{Ah}}}}{{{f{DDf}}{f{Fj}}}{{A`{{l{Ah}}n}}}}{{{f{DDf}}HfGh}{{l{Ah}}}}{{{f{DDf}}Fd}{{A`{{l{Ah}}n}}}}{{{f{DDf}}Bj}Ab}7{{{f{DDf}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJd{}{{Cj{c}}}}}}e}c{}{}}{{BBlc}BBl{{BAj{BBl}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DBjA@f}BM`}21``````{{{f{AMn}}{f{AMn}}}{{A`{{Hj{AMnAMn}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DEbA@f}{BM`Jh}}{{BFjcBLn{Ch{{N`{D@`}}}}{Ch{{f{B`}}}}}BFj{{Eb{AAn}{{Ad{{A`{AAnn}}}}}}J`Jb}}{{DDhc}BBl{{Eb{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}J`Jb}}{{BBlc{BMj{{N`{BMh}}}}}BBl{{Eb{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BBlBBlc{BMj{{N`{BMh}}}}}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BBl{f{Dfc}}{f{Df}}}{{A`{BBln}}}{{Af{BBl{f{Df}}}{{Ad{{A`{BBln}}}}}}}}{{{f{BNf}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNf}}c}{{A`{Ojn}}}{{ABb{{f{En}}}{{Ad{En}}}}}}{c{{BMj{{N`{BMh}}}}}{{Eb{{f{En}}}{{Ad{{A`{Enn}}}}}}J`Jb}}{c{{BMj{{N`{BMh}}}}}{{Eb{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}J`Jb}}{{BBlc}BBl{{Af{BBl}{{Ad{BBl}}}}}}{c{{BMj{{N`{BMh}}}}}{{Eb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}J`Jb}}{{DDh{N`{Eb}}}BBl}{c{{BMj{{N`{BMh}}}}}{{Eb{{f{{Bl{Oj}}}}}{{Ad{{A`{Ojn}}}}}}J`Jb}}:{{ce{BMj{{N`{BMh}}}}}BBl{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}{{BBlc{f{{Bl{BBl}}}}{BMj{{N`{BMh}}}}}BBl{{Eb{{f{Df{Bl{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}}{{BBlBMn{f{{Bl{BBl}}}}d{Ch{DEd}}}BBl}2{{{f{BNf}}}{{A`{Ojn}}}}{{CDdc}CDd{{Eb{CDf}{{Ad{CDf}}}}}}1111{{{CHj{{BMj{{N`{BNl}}}}}}}{{A`{{BMj{{N`{BNl}}}}n}}}}{CK`CK`}{{{Ch{{f{{Bl{Gh}}}}}}{f{{BDl{BAl}}}}{Ch{{f{{Bl{Ab}}}}}}{Ch{{f{DEf}}}}}AAn}{{{Ch{{f{{Bl{Dd}}}}}}{f{{BDl{En}}}}{Ch{{f{{Bl{Ab}}}}}}d}{{Ch{{Gn{Gh}}}}}}{{{f{DAf}}}{{A`{{BDl{En}}n}}}}{{{f{B`}}}BBl}{BNbBBl}{BFjBFj}{BNdBBl}{{{f{AHd}}}{{Ch{c}}}{}}{BBlBBl}{{{f{DEh}}}Mj}{{{f{BKj}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BKj}}}{{Ch{Aj}}}}9876{{{f{AJj}}}{{Ch{c}}}{}}51{{{f{DEj}}}Mj}4{{{COh{c}}{Ch{COb}}}{{COh{c}}}BLd}{{{f{En}}{f{En}}}{{A`{Enn}}}}````{{{f{CMd}}}{{l{Lb}}}}`{{{f{CBl}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hj{cc}}}}}{}}```:9``{{{f{DCh}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}`5```>{{{f{CM`}}}{{l{Nd}}}}21`{{{f{BGj}}}Hf}{{{f{BGj}}}d}{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{BGjHf}BGj}{{BBlBBl}}{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKj}}}Gh}{{{f{CKl}}}{{Ch{Gh}}}}{{{f{CC`}}}{{Ch{Gh}}}}{{{f{CCd}}}{{Ch{Gh}}}}`````{{{C@f{c}}Gh}{{C@f{c}}}C@j}`{BNbBBl}{BNdBBl}{{{f{AI`}}}{{A`{Ghn}}}}{BBlBBl}{{{f{BKj}}}{{A`{Ghn}}}}{{{f{BKj}}}{{f{Dd}}}}{BBlDDh}````33`{{{f{DCh}}}{{l{Kl}}}}{{{f{CMb}}}{{l{Kl}}}}{{{f{CBl}}}{{A`{{l{Kl}}n}}}}{{{f{CMd}}}{{l{Lb}}}}{{{f{BGj}}}Hf}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CNjA@f}BM`}{{{f{CFb}}}d}{BGj}{BBl}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BGj}}}d}{{DElGh}{{Ch{Gh}}}}{{BBlc}BBl{{BAj{BBl}}}}0{{{f{BNf}}}{{A`{Ojn}}}}{{}c{}}{cCOdBNj}{cCOfC@j}2{{Ddc}DEn{}}{c{{AMf{c}}}{}}{BFjBMb}{c{{BL`{c}}}BLd}{cCC`{{If{ANf}}}}{cCCd{{If{ANf}}}}{c{{C@f{c}}}C@j}{{{f{{Bl{Oj}}}}}BNf}{c{{COh{c}}}BLd}{c{{BNh{c}}}BNj}{c{{COj{c}}}C@j}{{}CMf}{c{{C@l{c}}}C@j}{HfBGj}{c{{COl{c}}}C@j}{c{{COn{c}}}BLd}{{BGjBGjBGj}CDb}{c{{CLh{c}}}BLd}{{DF`{N`{CJj}}{N`{{BDl{BAl}}}}{Hj{GhGh}}{Ch{{Gn{Gh}}}}{Ch{{N`{BLb}}}}{Ch{DEf}}Ghd{Ch{{Gn{Ab}}}}{Ch{{Hj{Dd{N`{B`}}}}}}CFd}{{A`{CAbn}}}}{c{{CA`{c}}}BLd}{c{{CAd{c}}}{C@jC@j}}{CEnBKf}{c{{BMj{c}}}{}}{{BBlBBlBBl}CIl}{{}CIn}{BBlBLh}{{Dd{Gn{Oj}}{BMj{{N`{BMh}}}}c}CB`BNl}{c{{N`{c}}}{}}{{AGdGh{Gn{{Cn{Cl}}}}{Ch{Ij}}}BGh}{{EnJl}Mj}{{DdAGdd}BAl}{e{{N`{c}}}{}{{ABb{{f{{CNd{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BM`{{ABb{{f{{CNd{ce}}}}}{{Ad{c}}}}}}{AGdBGh}{{{f{AJl}}GhGh}{{l{c}}}Dn}{{{f{BKj}}GhGh}Ab}{{{f{B`}}}CDj}{{ce}{{N`{ce}}}{}BM`}{{HfDd}{{A`{Abn}}}}{DdCDj}{{AGdGh}BGh}{{{N`{{Bl{COb}}}}}CC`}{{{N`{{Bl{COb}}}}}CCd}{BjCDj}{{}{{N`{{C@`{c}}}}}{}}{c{{N`{{C@`{e}}c}}}BM`{}}{Gh{{N`{{Bl{{C@`{c}}}}}}}{}}{{Ghc}{{N`{{Bl{{C@`{e}}}}c}}}BM`{}}{DFbCC`}{DFbCCd}5432{{{f{DfDFd}}}Ch}{{{f{DfDBn}}}Ch}{{{f{BMd}}DFf}{{A`{{Ch{AAn}}n}}}}{{{f{DfCAh}}Gh}{{A`{{Ch{{Gn{AAn}}}}n}}}}{{{f{DfC@d}}Gh}{{A`{{Ch{{Gn{AAn}}}}n}}}}{{{f{DfCAb}}Gh}{{A`{{Ch{{Gn{AAn}}}}n}}}}{{{f{BBl}}{f{Df{BHf{{f{BBl}}}}}}}b}{{BBl{f{Df{BHf{BBl}}}}}b}{BBlBBl}0{BLnBLn}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}0{HfBBl}`{{}AB`}{{}A@h}`{{{f{BKj}}}Gh}{BFjBFj}7`````{{{f{Df{CA`{c}}}}}{{A`{Ghn}}}BLd}````{{{f{AIh}}}{{A`{{Hh{Hf}}n}}}}{{BMbc}BMb{{If{{Bl{BBl}}}}}}````{{BFj{f{Df{BK`{BJn}}}}{f{Df{BK`{BKb}}}}}{{A`{BJln}}}}`{{BBlc}BBl{{BAj{BBl}}}}{{{f{BKj}}}{{A`{Mjn}}}}{{{f{CM`}}}{{l{Ob}}}}{{{f{CMb}}}{{l{Ob}}}}{{{f{CBl}}}{{A`{{l{Ob}}n}}}}{{{f{CBl}}}{{A`{{l{Kl}}n}}}}{{CHdc}BBl{{BAj{BBl}}}}{{CHhc}BBl{{BAj{BBl}}}}`{{BBle}BBl{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{BBle{Ch{{Hj{eFd}}}}CJh}BBl{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{{f{Df{BDl{En}}}}{f{{BDl{En}}}}}{{A`{bn}}}}```{{{f{B`}}}BGj}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}Ld}{{L`{LfLb}}}}``{{{f{BGj}}{f{BGj}}}{{Ch{B@n}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@n}}}{DBjA@f}BM`}```{{}BBl}{c{{DFh{{N`{c}}}}}{}}{{ce}{{DFh{{N`{ce}}}}}{}BM`}````{{BBlc}BBl{{BAj{BBl}}}}`{{DDh{f{B`}}}BBl}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hj{{AAj{{Gn{Fb}}{Gn{A@h}}}}{AAj{{Gn{AB`}}{Gn{A@h}}}}}}n}}}}`{{{f{DEh}}}Mj}{BBlBBl}{BFj{{A`{{Hj{AAnAAn}}n}}}}`{{{f{BGh}}}BGh}{{{f{{N`{c}}}}{f{DfDFj}}}b{ALlA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBM`}{{{f{B`}}BBlA@`}BBl}{{BFjBBlA@`}BFj}{{{f{AJj}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBlBBlA@`}BBl}{{{f{DEj}}AjA@`}{{A`{Mjn}}}}{{{f{BKj}}AjA@`}{{A`{Mjn}}}}{{{f{CM`}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BD`}}}CO`{}}````{{{f{DFl}}CGn{Ch{Kf}}}Ab}{{BBlCGn{Ch{Kf}}}BBl}{{{f{Df{N`{AFj}}}}{f{Df{Bl{Bj}}}}}{{A`{GhBD`}}}}{{{f{Df{N`{AFj}}}}DFn}{{A`{bBD`}}}}{{{CA`{c}}CFd}{{CA`{c}}}BLd}{{{f{Df{N`{AFj}}}}{f{Df{Gn{Bj}}}}}{{A`{GhBD`}}}}{{{f{Df{N`{AFj}}}}{f{DfEl}}}{{A`{GhBD`}}}}{{{f{Df}}}{{A`{cBD`}}}DG`}{{{f{Df{N`{AFj}}}}{f{Df{Bl{DGb}}}}}{{A`{GhBD`}}}}{{{f{CKl}}}d}{{{f{BKj}}}Ab}{{{f{CC`}}}d}{{{f{CCd}}}d}````{{{f{BKj}}}{{Ch{Ij}}}}{{ce}BBl{{Eb{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}J`Jb}{{If{{Bl{BBl}}}}}}{{{f{AJn}}}Ab}0{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBlBBl}}{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLn}}BLn}b}{{{f{{Bl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}{{{f{DfBKj}}Dd}b}{{BFjeid}BFj{{If{B`}}}{{Id{}{{Cj{c}}}}}{{If{B`}}}{{Id{}{{Cj{g}}}}}}{{BKhe}BBl{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}}{{cBBl}BBl{{BAj{BBl}}}}{{{f{Ab}}{f{{l{Ff}}}}}{{A`{{l{Ah}}n}}}}{{BBlc}BBl{{BAj{BBl}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@b}}{f{B`}}{f{B`}}}{{A`{{l{An}}n}}}}{{BBlcc}BBl{{BAj{BBl}}}}1{{{f{BNf}}{Ch{En}}}{{A`{Ojn}}}}{{{f{C@b}}{f{B`}}{f{B`}}Gh}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BBlcc{Ch{c}}{Ch{En}}}BBl{{BAj{BBl}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{f{{l{An}}}}CKj}{{A`{{L`{LfLb}}n}}}}{{BBl{f{{Bl{Hf}}}}}BBl}{{{f{ANf}}}COb}`{{{f{AK`}}}AK`}{{{f{BKj}}}Ab}{BNbBBl}{BFjBFj}{BNdBBl}{BBlBBl}`{{BMbc}BMb{{If{{Bl{BBl}}}}}}{{{f{DCb}}{Gn{Fj}}{f{BG`}}}{{A`{{Hj{Fj{Gn{Fj}}C`}}n}}}}{{BFjBBlcBG`}BLl{{If{{Bl{BBl}}}}}}{{BBlBG`}BBl}{{{f{AKb}}{f{Eb}}A@b}{{A`{Abn}}}}{{BBl{N`{Eb}}{BMj{{N`{BMh}}}}A@b}BBl}{{{f{BKj}}{f{Eb}}A@b}{{A`{Abn}}}}{{BBlGhc}BBl{{Af{{f{Df{l{Ej}}}}}{{Ad{{Ch{Aj}}}}}}J`JbEd}}{{{f{DGd}}A@b}{{A`{Abn}}}}{{BBlA@b}BBl}{{{f{DGd}}{f{Ab}}CCh}{{A`{Abn}}}}{{BBlBBlCCh}BBl}32102032103{{BBlA@`AjA@b}BBl}2{{BBlBBlA@`AjCCh}BBl}543254325432{{{f{DGf}}{f{{l{An}}}}{Ch{{f{AMj}}}}}{{A`{DGfn}}}}{{{f{CBj}}Fb}{{A`{Abn}}}}{{BBlFb}BBl}{{{f{CDb}}Hf{Ch{{f{AMj}}}}}{{A`{Hfn}}}}0{{{f{CBj}}Of}{{A`{Abn}}}}{{BBlOf}BBl}2```{{{f{CKl}}}{{Ch{{f{DEf}}}}}}{{{f{CC`}}}{{Ch{{f{DEf}}}}}}{{{f{CCd}}}{{Ch{{f{DEf}}}}}}``````{{{f{DDf}}{l{Ah}}}{{l{Ah}}}}{{}{{BMj{{N`{BMh}}}}}}{{BBlBBldd{Ch{Kf}}}BBl}0{{{f{BMd}}DFf}{{A`{AAnn}}}}{{cCCb}{{A`{BFjn}}}{{If{ANf}}}}{{{N`{{Bl{COb}}}}CCb}{{A`{BFjn}}}}{{DFbCCb}{{A`{BFjn}}}}{{cCCf}{{A`{BFjn}}}{{If{ANf}}}}{{{N`{{Bl{COb}}}}CCf}{{A`{BFjn}}}}{{DFbCCf}{{A`{BFjn}}}}{{DGh{f{{Bl{Fb}}}}e}{{A`{Abn}}}Ed{{Id{}{{Cj{{Ch{c}}}}}}}}{{{f{AKd}}c{Ch{e}}}{{A`{AKdn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKd}}ci}{{A`{AKdn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{COh{c}}}}}{{A`{{N`{{BDl{BAl}}}}n}}}BLd}{{{f{Df{BNh{c}}}}}{{A`{{BDl{En}}n}}}BNj}{{{f{CAb}}}{{f{{N`{{BDl{BAl}}}}}}}}{{{f{Df{CA`{c}}}}}{{A`{{N`{{BDl{BAl}}}}n}}}BLd}{{{f{BMd}}{Ch{Gh}}}{{A`{{N`{{BDl{En}}}}n}}}}{{{f{CJj}}}{{f{DGj}}}}```````{{}BLn}`{{{f{DfBFj}}{f{Df{BK`{BJn}}}}{f{Df{BK`{BKb}}}}}{{A`{{N`{{BDl{En}}}}n}}}}`{{{f{DCh}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}`{{{f{CMd}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DGl}{{A`{KfBD`}}}}{{BFjc}BFj{{If{{Bl{BBl}}}}}}0{{BFjBFjcc}BFj{{BAj{BBl}}}}````{{{f{AKd}}{f{{l{Bh}}}}{Ch{c}}}{{A`{AKdn}}}{}}{{{f{DfBLn}}BLnd}b}{{{f{BFj}}{BK`{BJn}}{BK`{BKb}}}b}{{{CA`{c}}d}{{CA`{c}}}BLd}{{{f{Df{CA`{c}}}}{N`{CJj}}}bBLd}{{{CAd{c}}d}{{CAd{c}}}C@j}{{{COh{c}}d}{{COh{c}}}BLd}{{{BNh{c}}d}{{BNh{c}}}BNj}{{{COn{c}}d}{{COn{c}}}BLd}5{{COdd}COd}{{BBlMb}BBl}{{{f{DfBGh}}{Ch{Ij}}}b}{{{f{AKf}}Hf}{{l{c}}}Dn}{{{f{BKj}}Hf}Ab}{{BNbBBl}BBl}{{BFjc}BFj{{BAj{BBl}}}}{{BNdBBl}BBl}{{BBlBBl}BBl}{{{f{AKh}}Hfc}{{l{e}}}{}Dn}{{BFjce}BFj{{BAj{BBl}}}{{BAj{BBl}}}}{{BBlce}BBl{{BAj{BBl}}}{{BAj{BBl}}}}{{{f{BKf}}}d}{BBlBBl}{{{f{DfACf}}}b}{{{f{DfBKj}}}b}{{BBl{Ch{Kf}}}BBl}{{BFjcCDn}{{A`{bn}}}{{If{ANf}}}}{{BFjcCEf}{{A`{bn}}}{{If{ANf}}}}{{BFjcCEj}{{A`{bn}}}{{If{ANf}}}}{{BFjcCFj}{{A`{bn}}}{{If{ANf}}}}{{{f{CLf}}}{{l{Ff}}}}````{{{f{BKj}}HfGh}Ab}{{BFjHfFb}BFj}{{BNdBBlBBl}BBl}={{{f{DfBGh}}GhGh}b}0`{{{f{AKj}}GhGh}AKj}{{fGhGh}c{}}1022{{BGhGhGh}BGh}0`{{{f{AHn}}d}{{l{c}}}Dn}{{BNbFd}BBl}{{BFjcFl}BFj{{BGd{Dd}}}}{{BNdFd}BBl}{{BBlFd}BBl}{{BBleFl}BBl{{BAj{BBl}}Jh}{{If{{Bl{c}}}}}}{{BFjcFl}BFj{{If{{Bl{BBl}}}}}}{{{f{AHn}}Fd}{{l{c}}}Dn}{{{f{BKj}}Fd}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALl}}}}}{ALlA@f}}{{{f{CKl}}}{{f{DFb}}}}{{{f{CC`}}}{{f{DFb}}}}{{{f{CCd}}}{{f{DFb}}}}{{{f{C@b}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BKj}}Hf}{{Hj{AbAb}}}}{{{f{BGh}}Gh}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{C@b}}{f{{l{An}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Eb{{f{B`}}{f{B`}}}{{Ad{c}}}}}}4{{{f{{l{An}}}}{f{{l{An}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Eb{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{BBlBBl}`{{{f{CLf}}{f{{Bl{Bj}}}}}{{l{Bh}}}}{{{f{CLf}}{f{{l{Bb}}}}}{{l{Bh}}}}`{{BNbBj}BBl}{{BFjBj}BFj}{{BNdBj}BBl}{{{f{AKl}}Bj}{{Ch{Aj}}}}{{BBlBj}BBl}{{{f{BKj}}Bj}{{Ch{Aj}}}}{{{f{DGn}}Bj}Mj}{{{f{BKj}}Bj}{{A`{Mjn}}}}{{FbFb}A@h}{BBlDH`}{{{f{C@b}}}{{l{An}}}}{{{f{C@b}}{f{Fj}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{B`}}d}{{l{An}}}}{{{f{C@b}}}{{l{Ff}}}}03{{{f{C@b}}{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}3`{{{f{CBl}}{f{B`}}}{{A`{Abn}}}}`{{BBlEn}BBl}`{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}606060{{{f{C@b}}{f{{l{An}}}}}{{l{An}}}}10{{{f{{N`{ce}}}}}GhA@fBM`}{BBlBKh}{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBlBBl}}{{BLhBLh}}{{BLnBLn}BLn}{{{f{DfBLn}}BLn}b}{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}{{BMbc}BMb{{BAj{Dd}}}}{{DDh{f{B`}}}BBl}{{{f{BKf}}}{{f{Dd}}}}`1{{{f{B`}}}BBl}{BNbBBl}{BFjBFj}{BNdBBl}{{{f{AHd}}}{{Ch{c}}}{}}{BBlBBl}{{{f{DEh}}}Mj}{{{f{BKj}}}{{A`{Mjn}}}}{{}{{BMj{{N`{BMh}}}}}}{CAlCAl}?{{{f{Df}}g}{{A`{eBD`}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BFjFb}BFj}{{BLl{Ch{Gh}}}BFj}{{BNdBBl}BBl}{{BBl{Ch{Gh}}}BBl}{{{f{AKn}}{f{c}}}{{A`{AKnn}}}A@f}{{{f{BKj}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{DHb}}{f{{Bl{A@h}}}}Mb}DHb}{{{f{DHb}}{f{{Bl{A@h}}}}}DHb}{{{f{BKj}}{f{{Bl{Fb}}}}}{{A`{Abn}}}}{{{f{BKj}}{f{{Bl{Fb}}}}}Ab}{{{f{AL`}}{f{c}}}AL`A@f}{{{f{BKj}}{f{{l{Ff}}}}}Ab}{{{f{DfBGh}}}{{Ch{Ij}}}}{{BBlBBlBBl}BBl}{{CHbc}CHd{{BAj{BBl}}}}{{CHfc}CHh{{BAj{BBl}}}}`{{BBlBBlBGjCCl}BBl}```{{{f{CBl}}Ld}{{A`{{l{Lb}}n}}}}{BFj{{A`{DHdn}}}}{CH`{{A`{DHdn}}}}1{{{f{CK`}}}{{Ch{Jl}}}}{{BNdGh}BBl}{{{f{DAf}}B@d}{{BDl{BAl}}}}{{{f{BGh}}}{{Cn{Cl}}}}{{{f{ALb}}}{{Gn{{f{{Bl{Bj}}}}}}}}{{{f{BFj}}d}{{A`{Eln}}}}{{{f{DHf}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{BKn}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{BBl}}{f{{BDl{En}}}}DBl}{{A`{Ojn}}}}{{{f{C@b}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}{BNbBBl}{{{f{C@b}}}{{l{An}}}}{DDhBBl}{{{f{AB`}}}{{Ch{Fb}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBlBBl}{{{f{BNf}}}{{A`{Ojn}}}}{{{f{CBl}}{f{B`}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDAf}}{f{{BDl{En}}}}}{{A`{dn}}}}`887{{{f{CEf}}c}{{C@l{c}}}C@j}{{{f{CFj}}c}{{CAd{c}}}C@j}{{{f{DfBLn}}BLn}b}``{{BFjFbcFl}BFj{{If{{Bl{BBl}}}}}}{{{f{BGh}}{f{BGh}}}Ij}{{{f{BGh}}f}Ij}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DHh}}{Ch{{f{AMj}}}}{f{{l{An}}}}}{{A`{DHhn}}}}{{{f{BGj}}Hf{Ch{{f{AMj}}}}ceg}{{A`{Hfn}}}{{Eb{Hf}{{Ad{Hf}}}}}{{Eb{Hf}{{Ad{AMh}}}}}{{Eb{AMh}{{Ad{Hf}}}}}}{{{f{BGj}}Hf{Ch{{f{AMj}}}}}{{A`{Hfn}}}}{{{f{CDb}}Hf{Ch{{f{AMj}}}}}{{A`{Hfn}}}}10`10{g{{A`{ANbe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BGhc}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BGhc}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}2{{AGdg}{{A`{ANde}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BGhc}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BGhc}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{BA`{{A`{eg}}}{}{{ANb{c}}ALh}{}}0{{BA`AGd}{{A`{eg}}}{}{{ANd{c}}ALh}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dn{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AE`DdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bl{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BM`}111111111111111{DHj{{A`{CJjBDh}}}}{{{f{DAf}}{f{B`}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CDd{Ch{COb}}}{{A`{{BL`{AFj}}n}}}}{{{f{BNf}}c}{{A`{Ojn}}}{{ABb{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BNf}}c}{{A`{Ojn}}}{{ABb{{f{{Bl{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BBlc}{{A`{BBln}}}{{Af{BBl}{{Ad{{A`{BBln}}}}}}}}{{{f{BNf}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{{f{BNf}}}{{A`{Ojn}}}}{{DElGh}{{A`{Ghn}}}}{Bj{{A`{CGbn}}}}{Fb{{A`{CGdn}}}}{Of{{A`{CGfn}}}}{c{{A`{{N`{c}}DHl}}}{}}{{AGdGh{Gn{{Cn{Cl}}}}{Ch{Ij}}}{{A`{BGhn}}}}{{ce}{{A`{{N`{ce}}DHl}}}{}BM`}{{}{{A`{{N`{{C@`{c}}}}DHl}}}{}}{c{{A`{{N`{{C@`{e}}c}}DHl}}}BM`{}}10{{{f{B`}}}{{A`{BGjn}}}}`0{c{{A`{{DFh{{N`{c}}}}DHl}}}{}}{{ce}{{A`{{DFh{{N`{ce}}}}DHl}}}{}BM`}{{{f{BNl}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{CAn}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{BMh}}{f{Df{Gn{Bj}}}}}{{A`{bn}}}}{{{f{DfAb}}Gh{f{{CBf{GhMbA@l}}}}}b}{f{{A`{H`BCb}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BM`}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{B`}}}}`{{BLnBLn}BLn}{{{f{AI`}}}{{A`{AI`n}}}}{BNbBBl}{{BFj{Ch{{Gn{El}}}}BEb}BFj}{BNdBBl}{BBlBBl}{{{f{BKj}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}2{{BFj{Ch{e}}BEb}BFj{{BAj{BLh}}Jh}{{If{{Bl{c}}}}}}6{{BFj{Ch{{Gn{Dd}}}}BEb}BFj}541{{BFje}BFj{{BAj{BLh}}Jh}{{If{{Bl{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}J`}{{{N`{ce}}}cJhBM`}{{{f{DfMj}}Jl}b}{{{f{DfCDd}}{f{DHn}}}b}9{{{f{DI`}}c{f{B`}}BGj}{{A`{AAnn}}}{{BGd{Dd}}}}0{{{CA`{c}}d}{{CA`{c}}}BLd}```{{BMbCFb}BMb}`{{{f{BGh}}}{{Ch{{f{Ij}}}}}}0{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}cJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{Mj}}}{{f{Jl}}}}{{{f{CNh}}ddDdd}{{A`{AAnn}}}}{{BBldd{f{B`}}d}BBl}``3{{{f{BGh}}}{{f{{Bl{{Cn{Cl}}}}}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}gJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{BGh}}}DCn}{{BNbBj}BBl}{{BFjBj}BFj}{{BNdBj}BBl}{{{f{AKl}}Bj}{{Ch{Aj}}}}{{BBlBj}BBl}{{{f{BKj}}Bj}{{Ch{Aj}}}}{{{f{DGn}}Bj}Mj}{{{f{BKj}}Bj}{{A`{Mjn}}}}``{{{f{DIb}}A@l{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{DIb}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}J`{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GhA@fBM`}{{{f{CM`}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}10{{{f{CD`}}}{{Ch{Fb}}}}{{{f{BGj}}}Hf}`{{{f{BGj}}}d}`{cCHb{{BAj{BBl}}}}{{CHdc}CHf{{BAj{BBl}}}}{{CHhc}CHf{{BAj{BBl}}}}```{{BMbBFj}BMb}{{CIlBBl}CIl}{{{CA`{c}}{f{{N`{{BDl{BAl}}}}}}{Ch{{f{{BDl{BAl}}}}}}d}{{A`{{CA`{c}}n}}}BLd}{{CCd{Ch{{DCj{Gh}}}}}CCd}{{{C@f{c}}{DCj{Gh}}}{{C@f{c}}}C@j}{{{COn{c}}{DCj{Gh}}}{{COn{c}}}BLd}{{CC`d}CC`}{Ghc{}}0{{{CLh{c}}{Ch{{DCj{Gh}}}}}{{CLh{c}}}BLd}{{CDdGh}CDd}{{CC`{Ch{CKn}}}CC`}{{CCd{Ch{CKn}}}CCd}{{BFjd}BFj}{{BKfCEl}BKf}1{{BFjBBl}BFj}{{BFjc}BFj{{If{{Bl{BBl}}}}}}{{{COh{c}}{Ch{{Gn{El}}}}}{{COh{c}}}BLd}{{{BNh{c}}{Ch{{Gn{El}}}}}{{BNh{c}}}BNj}{{{CA`{c}}{Ch{{Gn{El}}}}}{{CA`{c}}}BLd}{{CDd{Ch{{N`{{Bl{Dd}}}}}}}CDd}`4{{CC`{Ch{Dd}}}CC`}{{CDf{Ch{c}}}CDf{{BAj{CDj}}}}{{{COj{c}}B@d}{{COj{c}}}{}}{{{C@l{c}}B@d}{{C@l{c}}}C@j}{{{COj{c}}{Ch{CEh}}}{{COj{c}}}{}}{{CMf{Ch{CEh}}}CMf}{{{C@l{c}}{Ch{CEh}}}{{C@l{c}}}C@j}{{{CAd{c}}CFn}{{CAd{c}}}C@j}{{BFjc}BFj{{If{{Bl{BFj}}}}}}{{{CAd{c}}{Ch{Gh}}}{{CAd{c}}}C@j}{{{C@f{c}}{Ch{El}}}{{C@f{c}}}C@j}0{{CIlBBl}CIl}{{CInBBl}CIn}{{CC`d}CC`}{{CDfd}CDf}{{{f{BNf}}En}{{A`{Ojn}}}}{{CC`{Ch{{N`{{BDl{En}}}}}}}CC`}{{CDd{Ch{{N`{{Gn{En}}}}}}}CDd}{{CC`CDh}CC`}{{CDfCDh}CDf}{{CC`Bj}CC`}{{CDfBj}CDf}{{CMfCOb}CMf}{{BKh{Gn{BBl}}}{{A`{BBln}}}}{{{C@f{c}}{Ch{Gh}}}{{C@f{c}}}C@j}{{{C@f{c}}{Ch{d}}}{{C@f{c}}}C@j}{{CInBBlBBlBBl}CIn}=={{CDdd}CDd}{{{COh{c}}{Ch{{Gn{Ab}}}}}{{COh{c}}}BLd}{{{CA`{c}}{Ch{{Gn{Ab}}}}}{{CA`{c}}}BLd}{{CIlBBlBBlBBl}CIl}4{{CIlBBl}CIl}{{CInBBl}CIn}{{CC`d}CC`}{{CCdd}CCd}{{{COn{c}}d}{{COn{c}}}BLd}{{{CLh{c}}d}{{CLh{c}}}BLd}9{{{COh{c}}{Ch{{Hj{Dd{N`{B`}}}}}}}{{COh{c}}}BLd}{{{CA`{c}}{Ch{{Hj{Dd{N`{B`}}}}}}}{{CA`{c}}}BLd}{{CC`{Ch{Dd}}}CC`}{{CCd{Ch{Dd}}}CCd}{{CC`{Ch{Gh}}}CC`}{{CCd{Ch{{DCj{Gh}}}}}CCd}{{CDd{Ch{Gh}}}CDd}{{{COl{c}}DId}{{COl{c}}}C@j}{{{COn{c}}DId}{{COn{c}}}BLd}{{{C@f{c}}El}{{C@f{c}}}C@j}={{CDdd}CDd}{{BAl{DIf{DdDd}}}BAl}{{CIlBBl}CIl}{{CInBBl}CIn}010{{CC`d}CC`}{{CDfd}CDf}3{{CKlc}CKl{{BAj{{Ch{Gh}}}}}}<{{CC`c}CC`{{BAj{{Ch{Gh}}}}}}{{CCdc}CCd{{BAj{{Ch{Gh}}}}}}{{CCd{Ch{Gh}}}CCd}{{{COh{c}}{Ch{Gh}}}{{COh{c}}}BLd}{{{BNh{c}}{Ch{Gh}}}{{BNh{c}}}BNj}{{{CLh{c}}{Ch{Gh}}}{{CLh{c}}}BLd}{{CDd{Ch{Gh}}}CDd}10:>{{CC`{Ch{CDl}}}CC`}{{CDf{Ch{CDl}}}CDf}{{BFjBLn}BFj}{{{C@l{c}}d}{{C@l{c}}}C@j}{{CDdCDf}CDd}{{{CLh{c}}{Ch{e}}}{{CLh{c}}}BLd{{BAj{COb}}}}{{CDd{Ch{c}}}CDd{{BAj{COb}}}}{{CKl{N`{{Bl{COb}}}}}CKl}{{{CLh{c}}{Ch{{N`{BLb}}}}}{{CLh{c}}}BLd}{{{CA`{c}}{Ch{{N`{BLb}}}}}{{CA`{c}}}BLd}{{BFjd}BFj}{{{COh{c}}{Ch{{Gn{Gh}}}}}{{COh{c}}}BLd}{{{BNh{c}}{Ch{{Gn{Gh}}}}}{{BNh{c}}}BNj}{{{COn{c}}{Ch{{Gn{Dd}}}}}{{COn{c}}}BLd}{{{CLh{c}}{Ch{{N`{{Bl{Dd}}}}}}}{{CLh{c}}}BLd}{{{CA`{c}}{Ch{{Gn{Gh}}}}}{{CA`{c}}}BLd}{{CDd{Ch{{N`{{Gn{Gh}}}}}}}CDd}6{{CC`{Ch{Bj}}}CC`}{{{C@f{c}}Bj}{{C@f{c}}}C@j}{{CDf{Ch{Bj}}}CDf}{{{C@f{c}}CEb}{{C@f{c}}}C@j}{{CC`d}CC`}{{CDdd}CDd}{{CKld}CKl}2{{CCdd}CCd}{{{CLh{c}}d}{{CLh{c}}}BLd}3?{{{CAd{c}}{Ch{Gh}}}{{CAd{c}}}C@j}{{CKlc}CKl{{BAj{{Ch{DEf}}}}}}{{BFjc{Ch{Fb}}}BFj{{BAj{Dd}}}}{{CC`c}CC`{{BAj{{Ch{DEf}}}}}}{{CC`{Ch{DEf}}}CC`}{{CCd{Ch{DEf}}}CCd}{{CCdc}CCd{{BAj{{Ch{DEf}}}}}}{{{COh{c}}{Ch{DEf}}}{{COh{c}}}BLd}{{{BNh{c}}{Ch{DEf}}}{{BNh{c}}}BNj}{{{CLh{c}}{Ch{{f{DfDEf}}}}}{{CLh{c}}}BLd}{{{CA`{c}}{Ch{DEf}}}{{CA`{c}}}BLd}{{CDd{Ch{DEf}}}CDd}{{{f{BNf}}}{{A`{Ojn}}}}{{CC`{Ch{{N`{{BDl{En}}}}}}}CC`}{{CCd{Ch{{N`{{BDl{En}}}}}}}CCd}{{{COn{c}}{N`{{BDl{En}}}}}{{COn{c}}}BLd}{{{CLh{c}}{N`{{BDl{En}}}}}{{CLh{c}}}BLd}{{CDd{Ch{{N`{{BDl{En}}}}}}}CDd}{{CC`c}{{A`{CC`n}}}{{Eb{{BDl{En}}}{{Ad{{A`{{BDl{En}}n}}}}}}}}4{{{COn{c}}{f{{BDl{En}}}}}{{COn{c}}}BLd}{{{CLh{c}}{f{{BDl{En}}}}}{{CLh{c}}}BLd}3{{CIlBBl}CIl}{{CInBBl}CIn}{{CC`Bj}CC`}{{{C@f{c}}Bj}{{C@f{c}}}C@j}{{CDfBj}CDf}{{BFjd}BFj}{{CC`Gh}CC`}{{CDdGh}CDd}10{{{CA`{c}}{Ch{{Hj{GhGh}}}}}{{CA`{c}}}BLd}3{{CKlDFb}CKl}{{CC`DFb}CC`}{{CCdDFb}CCd}{{{CAd{c}}CId}{{CAd{c}}}C@j}{{BKf{Ch{Dd}}}BKf}{{{C@f{c}}{Ch{El}}}{{C@f{c}}}C@j}{{CIlLd}CIl}{{CIl{Ch{Dd}}}CIl}{{CC`d}CC`}{{CDfd}CDf}10={{{f{BGh}}{Ch{Ij}}}{{Cn{Cl}}}}{{BGh{Ch{Ij}}}BGh}{{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}{Ch{Ij}}}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}1{{CInBBl}CIn}{{CIlBBl}CIl}{BFjBFj}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bl{Bj}}}}}{{A`{GhBD`}}}}{{{f{CEf}}AAnc}{{A`{bn}}}C@j}{{{f{CFj}}AAnc}{{A`{bn}}}C@j}{{{f{DfAAn}}{f{ANf}}e{f{g}}Gh}{{A`{bn}}}{{BAj{Dd}}}{{Id{}{{Cj{c}}}}}{DIhJ`Jb}}{{{f{Df}}c}{{A`{GhBD`}}}DG`}{{{f{Df{N`{AFj}}}}{f{{Bl{DIj}}}}}{{A`{GhBD`}}}}{{BBlc}BBl{{BAj{BBl}}}}{{{f{BKj}}}{{A`{Mjn}}}}{{{f{CM`}}}{{l{Kl}}}}{{{f{CMb}}}{{l{Kl}}}}{{{f{CBl}}}{{A`{{l{Kl}}n}}}}``{{{f{ALd}}{f{{l{Bh}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{DfAAn}}{f{{Bl{Oj}}}}dd}{{A`{bn}}}}{{{f{CLd}}}CLd}{{f{f{Dfc}}}b{}}{fb}{{{f{DIl}}{f{{Bl{Bj}}}}}{{Hj{GhGh}}}}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{Ghb}0{{{f{DIl}}{f{{Bl{Bj}}}}{f{DfGh}}}{{Hj{GhGh}}}}{{{f{{Bl{Bj}}}}{Ch{Bj}}BjGhGhGh{Ch{{f{CDj}}}}d}{{A`{Ghn}}}}{{{f{CLd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{{}Gh}0{{}c{}}0{{{Ch{Bj}}Bj}DIl}{{{f{Df{N`{{BDl{En}}}}}}{f{Df{Gn{Oj}}}}}{{A`{dn}}}}{{{f{{Bl{Bj}}}}Bj{f{{BDl{En}}}}d{f{{Bl{Gh}}}}Gh{Ch{Bj}}Bj{Ch{{f{CDj}}}}GhCDh{Ch{{f{CLd}}}}ddGhGh{Ch{Gh}}d}{{A`{AAnn}}}}{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}0{{{f{{Bl{Bj}}}}}d}88````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ij}}}Aj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BDl{BAl}}}}{f{{BDl{BAl}}}}}{{A`{bn}}}}{cc{}}{{}Gh}{{}DIn}{{}c{}}{{{Ch{{f{BLb}}}}{f{CLj}}{f{{BDl{BAl}}}}}{{A`{dn}}}}{{{f{DIn}}Aj{f{AGd}}}d}{{{Gn{{Hj{{f{CN`}}DJ`}}}}BAl{Ch{DJb}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BHd}}c}Ab{{Eb{{Hj{Fb{f{{BHf{Fb}}}}}}}{{Ad{Ch}}}}J`Jb}}{{{f{BHd}}c}Ab{{Eb{{Hj{Fb{f{{BHf{Fb}}}}}}}{{Ad{}}}}J`Jb}}{{{f{{Bl{{AAb{Fb}}}}}}c}Ab{{Eb{{AAb{Fb}}}{{Ad{Ch}}}}J`Jb}}{{{f{{Bl{{AAb{Fb}}}}}}c}Ab{{Eb{{AAb{Fb}}}{{Ad{}}}}J`Jb}}{{{f{{Bl{c}}}}e{Ch{BIl}}}{{AM`{c}}}{BInBJ`}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bl{c}}}}{f{Ij}}e{Ch{BIl}}}{{AM`{c}}}{BInBJ`}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAb{Fb}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BJb}}{f{C`}}}Ab}{{BJdBJd}BJd}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALf{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALh}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALj{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALl{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALl{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALl{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALh}ALl{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{ALn{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnALnDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALh}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0``{{{f{DJd}}}{{l{Ff}}}}0{{{f{DJd}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DJd}}{f{{l{An}}}}d}{{A`{Abn}}}}{{{f{DJd}}}Ab}{{{f{DJd}}}{{A`{Abn}}}}1{{{f{DJd}}}{{A`{{l{Ff}}n}}}}{{{f{DJd}}}{{l{Cb}}}}{{{f{DJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DJd}}Fd}{{A`{{l{Cb}}n}}}}{{{f{DJd}}Bj}{{A`{Abn}}}}5{{{f{DJd}}}{{A`{{l{Ah}}n}}}}01{{{f{DJf}}}{{f{{l{Cb}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CAjBBl}BBl}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}3{cc{}}{{}Gh}{{}c{}}{CAjBBl}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDJh}}{f{{Bl{Bj}}}}ddd}{{A`{bn}}}}{{{f{DfDJh}}d}b}>>>>====;;;;::::9999{{{f{DJh}}}En}99998888{{{f{{Bl{Gh}}}}Gh{f{{BDl{En}}}}{Ch{Bj}}CDhd}{{A`{{Gn{DJh}}n}}}}8888{DJh{{A`{Abn}}}}777766665555{{{f{{Bl{Bj}}}}}d}::::```````````{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CM`}}}{{l{Nd}}}}{{{f{CMb}}}{{l{Nd}}}}{{{f{CMd}}}{{l{Lb}}}}`{{{f{DCh}}}{{l{Nd}}}}21{{{f{CM`}}}{{l{Bh}}}}{{{f{CMb}}}{{l{Bh}}}}{{{f{CM`}}}{{l{Kl}}}}{{{f{CMb}}}{{l{Kl}}}}55`46576{{{f{DCh}}}{{l{Kl}}}}16{{{f{CM`}}}{{l{Ob}}}}{{{f{CMb}}}{{l{Ob}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{B`}}}}}}{f{B`}}Ld}{{L`{LfLb}}}}=<{{{f{DGd}}A@b}{{A`{Abn}}}}{{{f{DGd}}{f{Ab}}CCh}{{A`{Abn}}}}101010101010<>=`?>>`98`````````{{fh}b}{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BO`}}{Ch{{f{B`}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DJj}}}{{f{{l{An}}}}}}{{{f{BO`}}{Ch{{f{B`}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJl}}}DJl}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{DJl}}{f{DJl}}}d}{{f{f{c}}}d{}}00{{{f{DJl}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DJl}}{f{Dfc}}}bADl}`{{}Gh}{{}c{}}{{{f{DJl}}{f{B`}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DJn{c}}}}}{{DJn{c}}}{JhAl}}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{{f{B`}}}{{Ch{DJl}}}}{{}Gh}{{}c{}}`{{{f{Df{DJn{c}}}}{f{B`}}}ChAl}{{{f{DfDK`}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DJn{Lb}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Hf}}}}{{{f{Df{DJn{Kl}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Of}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DKd{}{{DKb{e}}}}n}}}{}{}}{{DJl{Ch{Ld}}}{{A`{{DJn{Lb}}n}}}}{{DJl{Ch{Ld}}}{{A`{{DJn{Kl}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CKn}}}CKn}{{f{f{Dfc}}}b{}}{fb}{{}CKn}{Gh{{f{c}}}{}}0{Gh{{f{Dfc}}}{}}0{Ghb}0{{{f{CKn}}{f{CKn}}}d}{{{f{DKf}}{f{DKf}}}d}{{f{f{c}}}d{}}00{{{f{CKn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{{{f{B`}}}{{A`{DKf}}}}{{{f{B`}}g}{{A`{CKnn}}}{{If{B`}}}{{BAj{El}}}{{Id{}{{Cj{{Hj{ce}}}}}}}}{{{f{CKn}}{f{Dfc}}}bADl}{{}Gh}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CKnGh}CKn}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bl{Bj}}}}}{{Ch{DKh}}}}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}=<{{{f{{Bl{Bj}}}}{f{Df{Gn{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eANb{}{{Id{}{{Cj{c}}}}}}0{{AGde}ANd{}{{Id{}{{Cj{c}}}}}}0{{{f{ANj}}}{{f{En}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AMn}}{f{AMn}}c}{{A`{AMnn}}}AOj}{{{f{AOl}}{f{En}}}{{A`{Abn}}}}{{{f{AOl}}{f{En}}Gb}{{A`{Abn}}}}`{BA`e{}{{ANb{c}}ALh}}0{{BA`AGd}e{}{{ANd{c}}ALh}}0{{{AOf{B`}}}En}{{{f{AOl}}}{{f{En}}}}``{{AOj{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{Gn{c}}AGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{Gn{c}}AGd}{{ALh{}{{ANl{e}}{ANn{c}}{AO`{g}}}}}{AOb{AOd{e}}}Jh{{Hd{}{{Cj{e}}}}JjJ`Jb}}{{GhcAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{GhAGd}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AOl}}Gh}{{A`{Jln}}}}{{{f{AOl}}Gh}Jl}{{}En}{{{f{BBf}}Gh}Jl}4{{BBhEn}{{A`{Mjn}}}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{AGl{cgAGj}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}{{Ch{c}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{{{f{AMn}}{f{AMn}}}{{A`{{Hj{AMnAMn}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{ANbe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{ANde}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BA`{{A`{eg}}}{}{{ANb{c}}ALh}{}}0{{BA`AGd}{{A`{eg}}}{}{{ANd{c}}ALh}{}}0{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}Gh}cJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}0{{{f{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}}}gJh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}{Ghc{}}0{{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}{Ch{Ij}}}{{ALh{}{{ANl{c}}{ANn{e}}{AO`{g}}}}}Jh{AOb{AOd{c}}}{{Hd{}{{Cj{c}}}}JjJ`Jb}}```````````{{{f{AMn}}{f{AMn}}c}{{A`{AMnn}}}AOj}{{AOj{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{An}}}}CKj{Gj{Hf}{{Ad{AMh}}}}{Gj{AMh}{{Ad{Hf}}}}{f{AMj}}{f{AMj}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{Gj{Hf}{{Ad{AMh}}}}{Gj{AMh}{{Ad{Hf}}}}{f{AMj}}{f{AMj}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{B`}}}}{f{{l{An}}}}CKj}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ij}}}DAh{}}{{{DAj{Hf}}{DAj{Bj}}{Ch{Ij}}}DAl}{{{DAj{Hf}}{DAj{Bj}}{Ch{Ij}}}DAn}`{CNfBBl}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CNfLd}BBl}3{{CNfBBlLd}BBl}{{CNfDd}BBl}555{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}8{cc{}}9{{}Gh}{{}c{}};;;;;;;;;;{{CNf{Ch{Dd}}BBlCKj}BBl}{{CNfBBl}BBl}={{CNf{f{B`}}}BBl}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CNfBBl}0?0`{{{f{BJf}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BJf}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DKj}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{DKj{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gh}{{}c{}}{{{f{DKj}}}d}{{GhGh}DKj}{{{f{DfDKj}}{Cn{Cl}}}b}{{{f{DfDKj}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GhAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKl}}}DKl}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{DKl}}{f{DKl}}}d}{{{f{DKl}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{DKl}}{f{Dfc}}}bADl}{{}Gh}{{}c{}}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCb}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DKn}}}DKn}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{DKn}}{f{DKn}}}d}{{{f{DKn}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{DKn}}{f{Dfc}}}bADl}{{}Gh}{{}c{}}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCb}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AM`{Fb}}}}Fb}{{A`{bn}}}}```{{{f{Ab}}CGh}Ab}{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Eb{}{{Ad{}}}}Ed}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DL`}}}{{f{AGf}}}}{{{f{DfDL`}}}{{Cn{Cl}}}}{{{f{DfDL`}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DL`}}}DL`}{{f{f{Dfc}}}b{}}{fb}{{}DL`}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{DL`}}}{{f{AGd}}}}{{{f{DfDL`}}Gh}b}{{{f{DL`}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gh}{{}c{}}{{{f{DL`}}}Gh}{GhDL`}{{{f{DfDL`}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DL`}}}{{Ch{{f{DLb}}}}}}8{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bl{Fj}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fh}}n}}}}00`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DHn}}}DHn}{{f{f{Dfc}}}b{}}{fb}{{}DHn}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{{BEd{EnA@l}}}}}En}{{{f{DHn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DHn}}}Gh}{{{f{DHn}}}{{N`{{BDl{En}}}}}}{{{f{B`}}dd}En}{{{f{DC`}}Bj{Ch{Gh}}d{Ch{{f{{BDl{En}}}}}}GhGh{Ch{{f{CDj}}}}{Ch{Bj}}Bj{Ch{{f{CDl}}}}dd{f{Df{Ch{Gh}}}}d}{{A`{{Hj{{BDl{En}}GhGh}}n}}}}{{}Gh}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DC`}}{f{CDd}}}{{A`{DHnn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DHn{N`{{BDl{En}}}}}DHn}````{{{f{{l{c}}}}eAMdd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bl{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGhf}{{Ad{d}}}}}}``{{{f{DLd}}}{{f{Ab}}}}{{{f{CBl}}}{{A`{{l{Kl}}n}}}}{{{f{CBl}}}{{A`{{l{Nd}}n}}}}0{{{f{CBl}}}{{A`{{l{Bh}}n}}}}22112{{{f{CBl}}}{{A`{{l{Ob}}n}}}}322{{{f{CBl}}{f{B`}}}{{A`{Abn}}}}{{{f{CBl}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gh{f{Df{Gn{d}}}}}b}```{{{f{AKj}}GhGh}AKj}0{{Gh{f{{Bl{Fj}}}}{f{DfFl}}}{{A`{{AMf{{l{Ff}}}}n}}}}`````````````11```{{{f{BOn}}}{{f{{l{An}}}}}}{{{f{C@b}}}{{A`{{l{An}}n}}}}{{{f{C@b}}}{{l{An}}}}{{{f{C@b}}{f{{l{An}}}}}{{l{An}}}}{{{f{C@b}}{f{B`}}d}{{A`{{l{Bh}}n}}}}{{{f{C@b}}{f{{l{An}}}}dd}{{A`{{l{Bh}}n}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Bh}}n}}}}{{{f{C@b}}{f{B`}}d}{{A`{{l{Ff}}n}}}}{{{f{C@b}}{f{{l{An}}}}d}{{A`{{l{Ff}}n}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{B`}}}El}{{{f{C@b}}{f{{l{An}}}}Gh}{{A`{{l{An}}n}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Ah}}n}}}}{{{f{C@b}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@b}}{f{B`}}{f{En}}}{{A`{Abn}}}}7{{{f{C@b}}{f{{l{An}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{C@b}}{f{B`}}}{{A`{{l{Ff}}n}}}}?>{{{f{{Bl{{f{{l{An}}}}}}}}{f{B`}}d}{{A`{{l{An}}n}}}}{{{f{C@b}}{f{B`}}{f{B`}}}{{A`{{l{An}}n}}}}0{{{f{C@b}}{f{B`}}{f{B`}}Gh}{{A`{{l{An}}n}}}}1{{{f{C@b}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{C@b}}{f{{l{An}}}}Gh}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Eb{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{{{f{{l{An}}}}{f{{l{An}}}}Ghed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{B`}}}}}}}{{Eb{{f{B`}}{f{B`}}}{{Ad{c}}}}}}2{{{f{C@b}}}{{l{An}}}}{{{f{C@b}}{f{Fj}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{B`}}d}{{l{An}}}}{{{f{C@b}}}{{l{Ff}}}}03{{{f{C@b}}{f{Fj}}{f{Fj}}}{{A`{{l{An}}n}}}}3{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}404040{{{f{C@b}}{f{{l{An}}}}}{{l{An}}}}10{{{f{C@b}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGhGh}{{DLf{Hf}}}{{If{B`}}}{{D`{}{{Cj{c}}}}}}{{eGhGh}{{Kb{Hf}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BKj}}}Aj}{{Dd{Gn{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DIf{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{Ab}}c}{}{BdMh}}{{Abc}{}{BdMh}}`{{{f{BKj}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{BKj}}}{{A`{Fbn}}}}{{{f{Ab}}}{{Ch{Gh}}}}0{{{f{BKj}}Fd}{{l{Ff}}}}{{{f{BKj}}}{{A`{{l{Ff}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ab}}Gh}{{f{{Cn{Cl}}}}}}{{{f{BKj}}}{{f{AGf}}}}{{{f{DfBKj}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBKj}}}{{f{Df{l{c}}}}}Dn}{{{f{BKj}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BKj}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBKj}}}{{A`{Ghn}}}}{{{f{DfAb}}}{{A`{Ghn}}}}{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fh}}}}n}}}}{{Ab{f{Ab}}}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{Ab}}Ab}}01232031{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BKj}}}{{Ch{{Cn{G`}}}}}}{{{f{BKj}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMn}}n}}}}{{{f{BKj}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bf}{{{f{BKj}}}{{Gl{{Gf{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gh}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gh}}}}}}}}{{{f{BKj}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBKj}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BKj}}}{{N`{BKj}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gh{{f{c}}}{}}000{{{f{Ab}}}f}{Gh{{f{Dfc}}}{}}000{{AbAb}}{{{f{Ab}}c}{}{BdMh}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BdMh}}{Ghb}000{{{f{BKj}}}Ab}{{{f{BKj}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}8{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{B`}}}{{A`{{l{Bh}}n}}}}2{{{f{Ab}}{f{B`}}}};244{{f{f{c}}}d{}}00{{{f{Ab}}}Gh}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JlGh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{BKj}}}{{E`{Oj}}}}{{{f{Ab}}AId}{{A`{Abn}}}}{{{f{BKj}}{f{{l{Bh}}}}}{{A`{Abn}}}}{{{f{BKj}}}Mj}{{{f{Mb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ab}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Ab}}}El}{cc{}}00{{{L`{LnLb}}}Ab}{{{L`{LfLb}}}Ab}{DLhAb}{{{L`{LlLb}}}Ab}4{{{l{c}}}AbDn}{{{L`{KnKl}}}Ab}{{Dd{f{{Bl{Jl}}}}d}{{A`{Abn}}}}{{Dd{f{{Bl{Jl}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Id{}{{Cj{Nn}}}}}}{cAb{{Id{}{{Cj{Od}}}}}}{cAb{{Id{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Id{}{{Cj{{f{Od}}}}}}}}{cAb{{Id{}{{Cj{{f{Fb}}}}}}}}{cAb{{Id{}{{Cj{{f{Aj}}}}}}}}{cAb{{Id{}{{Cj{Fb}}}}}}{cAb{{Id{}{{Cj{d}}}}}}{cAb{{Id{}{{Cj{Aj}}}}}}{cAb{{Id{}{{Cj{{Ch{Fb}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Id{}{{Cj{{f{d}}}}}}}}{cAb{{Id{}{{Cj{{Ch{{f{B`}}}}}}}}}}{cAb{{Id{}{{Cj{{f{Nn}}}}}}}}{cAb{{Id{}{{Cj{Kf}}}}}}{cAb{{Id{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Id{}{{Cj{{Ch{d}}}}}}}}{cAb{{Id{}{{Cj{Bj}}}}}}{cAb{{Id{}{{Cj{{Ch{Bj}}}}}}}}{cAb{{Id{}{{Cj{{f{Kd}}}}}}}}{cAb{{Id{}{{Cj{{f{B`}}}}}}}}{cAb{{Id{}{{Cj{{Ch{El}}}}}}}}{cAb{{Id{}{{Cj{Kd}}}}}}{cAb{{Id{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Id{}{{Cj{El}}}}}}{cAb{{Id{}{{Cj{{f{Kf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Id{}{{Cj{{f{Hf}}}}}}}}{cAb{{Id{}{{Cj{Nf}}}}}}{cAb{{Id{}{{Cj{Hf}}}}}}{cAb{{Id{}{{Cj{{f{Nf}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Hf}}}}}}}}{cAb{{Id{}{{Cj{{f{Of}}}}}}}}{cAb{{Id{}{{Cj{Of}}}}}}{cAb{{Id{}{{Cj{{Ch{Od}}}}}}}}{cAb{{Id{}{{Cj{{f{Bj}}}}}}}}{{Dd{Gn{Od}}}Ab}{{Dd{Gn{Of}}}Ab}{{Dd{Gn{Fb}}}Ab}{{Dd{Gn{Aj}}}Ab}{{Dd{Gn{Nn}}}Ab}{{Dd{Gn{Bj}}}Ab}{{Dd{Gn{Nh}}}Ab}{{Dd{Gn{Kd}}}Ab}{{Dd{Gn{Nf}}}Ab}{{Dd{Gn{Kf}}}Ab}{{Dd{Gn{Hf}}}Ab}{{DdGh{f{En}}}Ab}{{{f{Ab}}GhGh}Ab}{{{f{BKj}}Gh}{{A`{Jln}}}}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BKj}}}{{Ch{{Nb{G`}}}}}}{{{f{BKj}}Gh}{{Ch{{f{K`}}}}}}{{{f{BKj}}GhGh}{{Ch{{f{K`}}}}}}{{{f{BKj}}Gh}Jl}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAh}{{{f{Ab}}{f{B`}}}}012{{{f{BKj}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gh}000{{}c{}}000{Ab{{Gn{{Cn{Cl}}}}}}{{}Fj}{AbAAn}3{BFnAb}{AbAb}?{{{f{Ab}}}{{A`{{l{Bh}}n}}}}000{{{f{BKj}}}{{l{Bh}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DLj}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BKj}}}Mj}{{{f{BKj}}}Gh}{{{f{Ab}}}Gh}{{{f{BKj}}Gh}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hj{{Gn{{Hh{Hf}}}}{Gn{{Ch{Ij}}}}}}}}{{{f{Ab}}}Ab}{AbBBl}{{{f{Ab}}{f{B`}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAh}201{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BKj}}}{{A`{Mjn}}}}{{{f{BKj}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}12325{{Abc}{}{BdMh}}{{AbAb}}{{{f{Ab}}c}{}{BdMh}}{{{f{BKj}}}Gh}{{{f{Ab}}}Gh}{{{f{BKj}}}{{A`{Ghn}}}}{{{f{BKj}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bl{{Ch{{E`{B`}}}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bl{Nf}}}}}}{{Ddc}Ab{{If{{Bl{Fb}}}}}}{{Ddc}Ab{{If{{Bl{Od}}}}}}{{Ddc}Ab{{If{{Bl{Of}}}}}}{{Ddc}Ab{{If{{Bl{Nn}}}}}}{{Ddc}Ab{{If{{Bl{Hf}}}}}}{{Ddc}Ab{{If{{Bl{Bj}}}}}}{{Ddc}Ab{{If{{Bl{Nh}}}}}}{{Ddc}Ab{{If{{Bl{d}}}}}}{{Ddc}Ab{{If{{Bl{Kd}}}}}}{{Ddc}Ab{{If{{Bl{Aj}}}}}}{{Ddc}Ab{{If{{Bl{{Gn{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{El}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Gn{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bl{El}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nn}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Fb}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bl{Jl}}}}}}{{Ddc}AbBFn}{{Ddc}Ab{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{AMl}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}Ab{{If{{Bl{AMl}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BBb}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Hf}}}}}}}}{{Ddc}Ab{{If{{Bl{BBb}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{AMh}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nh}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}Ab{{If{{Bl{AMh}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BBd}}}}}}}}{{Dd{Oh{Hf}}}Ab}{{Dd{Oh{Of}}}Ab}{{Ddc}Ab{{If{{Bl{BBd}}}}}}{{Dd{Oh{Kf}}}Ab}{{Ddc}Ab{{If{{Bl{{Ch{{E`{{Bl{Bj}}}}}}}}}}}}{{Dd{Oh{Fb}}}Ab}{{Ddc}Ab{{If{{Bl{{E`{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{Kf}}}}}}{{Ddc}Ab{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{Ab}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bl{{f{B`}}}}}}}}{{Ddc}Ab{{If{{Bl{{E`{B`}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{B`}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Dd{f{En}}}Ab}{{{f{BKj}}GhGh}Ab}{{DdGh}Ab}{{{f{DfDLj}}}Ch}{{{f{{AIf{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{B`}}}{{A`{{l{Bh}}n}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAh}301{{{f{Ab}}{f{B`}}}}{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BKj}}}Gh}`{{{f{BKj}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jf}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BKj}}AjA@`}{{A`{Mjn}}}}{{{f{BKj}}}Ab}{{{f{BKj}}}{{Ch{Ij}}}}{{{f{Ab}}c}{}{BdMh}};{{Abc}{}{BdMh}}{{{f{DfBKj}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bl{B@j}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BKj}}{f{Eb}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Ghdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gh}Ab}{{{f{DfAb}}Mb}b}{{{f{BKj}}Hf}Ab}{{{f{DfBKj}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DLj}}}{{Hj{Gh{Ch{Gh}}}}}}{{{f{BKj}}HfGh}Ab}{{{f{Ab}}HfGh}Ab}{{{f{Ab}}Fd}{{A`{Abn}}}}{{{f{BKj}}Fd}{{A`{Abn}}}}{{{f{BKj}}Hf}{{Hj{AbAb}}}}{{{f{Ab}}Hf}{{Hj{AbAb}}}}{{{f{BKj}}Bj}{{Ch{Aj}}}}{{{f{BKj}}Bj}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}Gh}{{A`{{E`{B`}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BdMh}}{{Abc}{}{BdMh}}{{AbAb}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BKj}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gh}}}Ab}{{{f{BKj}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bl{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bl{A@h}}}}}Ab}{{{f{BKj}}{f{{Bl{Fb}}}}}{{A`{Abn}}}}{{{f{BKj}}{f{{Bl{Fb}}}}}Ab}{{{f{BKj}}{f{{l{Ff}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GhB@d}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{B`}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{E`{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Cb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Ab}}}{{Ch{{f{AMn}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hj{{f{BAl}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{Dd{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hj{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{{f{BAl}}{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Ob}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADh}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{H`BCb}}}}{{{f{Ab}}}{{Ch{{f{{l{Nl}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nj}}}}}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{BKj}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKj}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BKj}}Bj}{{Ch{Aj}}}}{{{f{BKj}}Bj}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{BdMh}}{{{f{BKj}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{cc{}}{{}Gh}{{}c{}}{{{DLl{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{Eb{{f{Ef}}}{{Ad{c}}}}}}```````````{{fh}b}{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLf{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BLj}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{DLn}}}DLn}{{f{f{Dfc}}}b{}}{fb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}987{Ghb}{{{f{DLn}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{DLn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gh}{{}c{}}?>=?>=?>={fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4``{{{f{CBn}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBn}}c}{{A`{Abn}}}Bf}{{{f{{l{Gd}}}}c}{{A`{Abn}}}Bf}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CNb}}}CNb}{{f{f{Dfc}}}b{}}{fb}{{}CNb}{Gh{{f{c}}}{}}{Gh{{f{Dfc}}}{}}{Ghb}{{{f{CNb}}{f{CNb}}}d}{{f{f{c}}}d{}}00{{{f{CNb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{CNb}}{f{Dfc}}}bADl}{{}Gh}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AEIlBOf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12137],[5,"StructType",2017,12138],[5,"ChunkedArray",17,12139],[6,"PolarsError",3611,12140],[6,"Result",12141],[5,"Series",11554,12142],[17,"Output"],[10,"FnMut",12143],[5,"ListType",2017,12138],[1,"f64"],[10,"PolarsNumericType",2017,12138],[5,"StringType",2017,12138],[1,"str"],[5,"BinaryType",2017,12138],[10,"Num",12144],[10,"ToPrimitive",12145],[5,"BooleanType",2017,12138],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",12057,12146],[6,"GroupsProxy",4301,12147],[5,"FixedSizeListType",2017,12138],[5,"ObjectType",2017,12138],[10,"PolarsObject",1559,12148],[6,"Option",12149],[17,"Item"],[10,"Array",12150],[5,"Box",12151],[10,"Iterator",12152],[5,"AmortizedListIter",12153],[5,"PlSmallStr",2017,12154],[0,"mut"],[17,"IsNested"],[5,"FalseT",2017,12138],[17,"IsObject"],[10,"PolarsDataType",2017,12138],[6,"Cow",12155],[10,"Fn",12143],[10,"Copy",12156],[5,"AmortSeries",12033,12157],[5,"Float32Type",2017,12138],[5,"Float64Type",2017,12138],[5,"String",12158],[6,"DataType",2017,12159],[5,"View",12160],[1,"u32"],[5,"SortOptions",1689,12161],[5,"UInt32Type",2017,12138],[5,"BinaryOffsetType",2017,12138],[6,"Column",3994,12162],[5,"SortMultipleOptions",1689,12161],[10,"PolarsIntegerType",2017,12138],[10,"MetadataTrait",1275,12163],[6,"CastOptions",1169,12164],[10,"NumOpsDispatchCheckedInner",12104,12165],[5,"Iter",12166],[1,"usize"],[1,"fn"],[5,"Map",12167],[5,"Vec",12168],[5,"CompactString",12169],[5,"MetadataProperties",1275,12170],[10,"DoubleEndedIterator",12171],[1,"i64"],[5,"OffsetsBuffer",12172],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12173],[5,"Error",12173],[17,"Array"],[10,"IntoIterator",12174],[10,"AsRef",12175],[10,"PolarsAsRef",12176],[5,"Bitmap",12177],[10,"Borrow",12178],[10,"IntoParallelIterator",12179],[10,"Send",12156],[10,"Sync",12156],[10,"NoOption",12180],[10,"ExactSizeIterator",12181],[10,"Clone",12182],[10,"TrustedLen",12183],[6,"AnyValue",2017,12184],[5,"MetadataFlags",1275,12170],[10,"PolarsObjectSafe",1559,12148],[5,"BinaryArray",12185],[1,"f32"],[1,"u64"],[5,"Metadata",1275,12170],[5,"RwLockWriteGuard",12186],[5,"Int32Type",2017,12138],[5,"DateType",2017,12138],[5,"Logical",2017,12187],[5,"Int64Type",2017,12138],[6,"TimeUnit",2017,12188],[5,"DatetimeType",2017,12138],[5,"Int128Type",2017,12138],[5,"DecimalType",2017,12138],[5,"DurationType",2017,12138],[5,"TimeType",2017,12138],[10,"PolarsFloatType",2017,12138],[6,"IsSorted",11554,12189],[10,"PolarsIterator",1218,12190],[6,"ChunkedArrayLayout",17,12139],[10,"NumCast",12145],[5,"Scalar",4670,12191],[6,"MetadataReadGuard",1275,12192],[5,"IMMetadata",1275,12193],[5,"Arc",4670,12194],[5,"RwLockReadGuard",12186],[5,"Int8Type",2017,12138],[1,"i8"],[1,"i128"],[5,"UInt8Type",2017,12138],[5,"UInt16Type",2017,12138],[1,"u16"],[5,"UInt64Type",2017,12138],[5,"Int16Type",2017,12138],[1,"i16"],[1,"i32"],[5,"Range",12195],[5,"Field",2017,12196],[10,"ParallelIterator",12179],[10,"IndexedParallelIterator",12179],[6,"QuantileMethod",4670,12197],[5,"RollingOptionsFixedWindow",4670,12198],[10,"PolarsOpsNumericType",12199],[10,"Sized",12156],[5,"ChunkId",4670,12200],[17,"IsStruct"],[5,"RandomState",12201],[5,"BytesHash",12202],[5,"OwnedRepr",12203],[1,"array"],[5,"Dim",12204],[5,"ArrayBase",12205],[5,"ViewRepr",12205],[6,"Either",12206],[5,"TypeId",12207],[5,"DataFrame",3710,12208],[5,"NullableIdxSize",4670,12200],[10,"FnOnce",12143],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",863,12209],[5,"AnonymousListBuilder",891,12210],[5,"AnonymousOwnedListBuilder",891,12210],[5,"ListBooleanChunkedBuilder",891,12211],[5,"ListPrimitiveChunkedBuilder",891,12212],[10,"ListBuilderTrait",891,12213],[10,"ChunkedBuilder",891,12214],[5,"ListStringChunkedBuilder",891,12215],[5,"ListBinaryChunkedBuilder",891,12215],[5,"ListNullChunkedBuilder",891,12216],[5,"BinViewChunkedBuilder",891,12217],[10,"ViewType",12218],[5,"BooleanChunkedBuilder",891,12219],[5,"NullChunkedBuilder",891,12220],[5,"PrimitiveChunkedBuilder",891,12221],[5,"NullChunked",12222],[10,"NewChunkedArray",891,12214],[10,"Hasher",12223],[10,"ChunkedCollectInferIterExt",1198,12224],[10,"ChunkedCollectIterExt",1198,12224],[10,"Canonical",1212,12225],[10,"ChunkedCollectParIterExt",1214,12226],[10,"FromParIterWithDtype",1214,12226],[5,"BooleanArray",12227],[5,"BoolIterNoNull",1218,12190],[5,"FixedSizeListArray",12228],[5,"FixedSizeListIterNoNull",1218,12190],[5,"SomeIterator",1218,12190],[5,"MetadataEnv",1275,12229],[10,"MetadataCollectable",1275,12230],[5,"Iter",12231],[5,"IterNames",12231],[5,"File",12232],[5,"Mutex",12233],[6,"MetadataMerge",1275,12170],[5,"RwLock",12186],[5,"ObjectArray",1559,12148],[6,"ArrowDataType",2017,12234],[10,"Any",12207],[10,"Debug",12173],[5,"BitmapIter",12235],[6,"ZipValidity",12236],[5,"ObjectChunkedBuilder",1636,12237],[10,"AnonymousObjectBuilder",1660,12238],[5,"ObjectRegistry",1660,12238],[10,"ChunkAgg",1689,12239],[17,"FuncRet"],[10,"ChunkApply",1689,12239],[10,"ChunkApplyKernel",1689,12239],[10,"ChunkApproxNUnique",1689,12239],[10,"ChunkSort",1689,12239],[10,"ChunkUnique",1689,12239],[10,"ChunkCast",1689,12239],[6,"FillNullStrategy",1689,12239],[10,"ChunkCompareEq",11554,12239],[10,"ChunkExplode",1689,12239],[10,"ChunkFillNullValue",1689,12239],[10,"ChunkFilter",1689,12239],[10,"ChunkFull",1689,12239],[10,"ChunkFullNull",1689,12239],[10,"ChunkAnyValue",1689,12239],[10,"ChunkCompareIneq",1689,12239],[10,"IsFirstDistinct",1689,12239],[10,"IsLastDistinct",1689,12239],[10,"ChunkQuantile",1689,12239],[10,"ChunkExpandAtIndex",1689,12239],[10,"Reinterpret",1689,12239],[10,"ChunkReverse",1689,12239],[10,"ChunkRollApply",1689,12239],[10,"ChunkSet",1689,12239],[10,"ChunkShift",1689,12239],[10,"ChunkShiftFill",1689,12239],[10,"SlicedArray",1689,12240],[10,"ChunkVar",1689,12239],[10,"ChunkTake",1689,12239],[10,"ChunkTakeUnchecked",1689,12239],[10,"ChunkBytes",1689,12239],[10,"ChunkZip",1689,12239],[10,"BinaryFnMut",1903,12241],[10,"StaticArray",2017,12242],[10,"TernaryFnMut",1903,12241],[10,"Error",12243],[10,"UnaryFnMut",1903,12241],[5,"PrimitiveArray",12244],[5,"RowsEncoded",12245],[6,"SearchSortedSide",1953,12246],[5,"NoNull",4670,12247],[5,"NaiveDateTime",12248],[6,"Tz",12249],[5,"NaiveTime",12250],[5,"CategoricalChunked",2017,12251],[5,"CategoricalChunkedBuilder",2017,12252],[10,"ArrayFromIter",2017,12253],[10,"ArrayFromIterDtype",2017,12253],[5,"Path",12254],[5,"OsStr",12255],[10,"AsRefDataType",2017,12159],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12256],[10,"From",12175],[5,"BinaryViewArrayGeneric",12218],[6,"RevMapping",2017,12257],[10,"CategoricalMergeOperation",2017,12258],[10,"LogicalType",2017,12187],[6,"CategoricalOrdering",2017,12257],[5,"OwnedObject",2017,12184],[6,"UnknownKind",2017,12159],[5,"CompatLevel",2017,12159],[5,"CategoricalType",2017,12138],[5,"Dimension",2017,12259],[6,"ReshapeDimension",2017,12259],[6,"ArrowTimeUnit",2017],[6,"Ordering",12260],[10,"ArrayCollectIterExt",2017,12253],[5,"GlobalRevMapMerger",2017,12258],[1,"char"],[10,"FromIterator",12174],[10,"NumericNative",2017,12138],[10,"Into",12175],[5,"ArrowField",4670],[6,"PrimitiveType",12261],[6,"IntegerType",12262],[5,"TimeDelta",12263],[5,"NaiveDate",12264],[10,"GetAnyValue",2017,12184],[10,"IntoScalar",2017,12265],[5,"CatIter",2017,12251],[6,"Expr",4670,12266],[1,"u128"],[6,"PhysicalType",12262],[6,"ToCompactStringError",12169],[5,"Arguments",12173],[5,"StringCacheHolder",3572,12267],[5,"EnumChunkedBuilder",3591,12268],[5,"ErrString",3611,12140],[6,"PolarsWarning",3611,12269],[5,"Error",12270],[5,"Error",12271],[5,"TryReserveError",12272],[5,"Utf8Error",12273],[6,"Error",12274],[6,"ParquetError",12275],[10,"Display",12173],[5,"Schema",12276],[10,"IntoColumn",3994,12162],[6,"NullStrategy",3710,12208],[6,"UniqueKeepStrategy",3710,12208],[5,"HashSet",12277],[5,"Row",4558,12278],[5,"GroupBy",4301,12279],[5,"DynamicGroupOptions",4670,12280],[5,"RangeInclusive",12195],[5,"RangeTo",12195],[5,"RangeFrom",12195],[5,"RangeToInclusive",12195],[5,"RangeFull",12195],[5,"RecordBatchIter",3710,12208],[5,"PhysRecordBatchIter",3710,12208],[5,"LazyFrame",4670,12281],[5,"RecordBatchT",12282],[10,"IntoSeries",11554,12283],[5,"RollingGroupOptions",4670,12280],[10,"RangeBounds",12195],[10,"IntoVec",4670,12247],[6,"IndexOrder",4670,12284],[5,"StructArray",4670,12285],[5,"Duration",4670,12286],[5,"ScalarColumn",3994,12287],[5,"PartitionedColumn",12288],[6,"BitRepr",11554,12189],[5,"UnpivotArgsIR",4272,12289],[5,"GroupsIdx",4301,12147],[5,"UnitVec",12290],[6,"GroupByMethod",4301,12279],[5,"SlicedGroups",4301,12147],[5,"GroupsProxyParIter",4301,12147],[10,"UnindexedConsumer",12291],[6,"GroupsIndicator",4301,12147],[6,"IRAggExpr",12292],[10,"IntoGroupsProxy",4301,12293],[5,"Copied",12294],[5,"Zip",12295],[5,"GroupsProxyIter",4301,12147],[6,"RollingFnParams",4670,12296],[10,"IsFloat",12297],[10,"NativeType",12298],[10,"AggList",4542,12299],[10,"TakeExtremum",4542,12300],[10,"PhysicalAggExpr",4555,12301],[6,"AnyValueBuffer",4558,12302],[6,"AnyValueBufferTrusted",4558,12302],[5,"Node",12303],[6,"IR",12304],[5,"Arena",12303],[6,"AExpr",12292],[10,"JoinDispatch",4670,12305],[5,"JoinArgs",4670,12306],[5,"StructNameSpace",4670,12307],[10,"SeriesTrait",11554,12189],[10,"DfTake",4670,12308],[10,"DataFrameOps",4670,12309],[5,"CsvReader",4670,12310],[10,"PhysicalIoExpr",12311],[10,"MmapBytesReader",12312],[10,"LhsNumOps",12057,12146],[6,"Selector",4670,12313],[10,"NumOpsDispatch",12057,12146],[5,"LazyGroupBy",4670,12281],[5,"OptFlags",4670,12314],[10,"Allocator",12315],[5,"JoinBuilder",4670,12281],[10,"AnonymousScan",4670,12316],[5,"ScanArgsAnonymous",4670,12317],[10,"FunctionOutputField",4670,12318],[5,"SpecialEq",4670,12318],[6,"VisitRecursion",12319],[6,"FunctionExpr",4670,12320],[10,"ArgAgg",4670,12321],[5,"ArrayNameSpace",4670,12322],[5,"ListNameSpace",4670,12323],[5,"FieldsMapper",4670,12324],[5,"IpcStreamReader",4670,12325],[10,"Read",12326],[10,"ColumnsUdf",4670,12318],[10,"AsBinary",4670,12327],[10,"StringMethods",10460,12328],[5,"BorrowedFd",12329],[10,"AsFd",12329],[10,"AsList",4670,12330],[10,"AsRawFd",12331],[6,"AggExpr",4670,12266],[10,"SeriesSealed",4670,12332],[10,"AsString",4670,12333],[20,"MaybeUninit",12334],[10,"StringNameSpaceImpl",4670,12335],[5,"OwnedBatchedCsvReader",4670,12336],[5,"CsvWriter",4670,12337],[5,"BatchedWriter",12337],[10,"Write",12326],[5,"IpcWriter",4670,12338],[5,"BatchedWriter",12338],[5,"ParquetReader",4670,12339],[5,"BatchedParquetReader",4670,12340],[5,"ParquetWriter",4670,12341],[5,"BatchedWriter",12342],[5,"BatchedCsvReader",4670,12336],[5,"BinaryNameSpace",10364,12343],[6,"Operator",4670,12266],[10,"RenameAliasFn",4670,12318],[5,"UserDefinedFunction",4670,12344],[10,"ColumnBinaryUdf",4670,12318],[5,"InProcessQuery",4670,12345],[5,"HashMap",12346],[5,"CategoricalNameSpace",4670,12347],[10,"RoundSeries",4670,12348],[10,"TemporalMethods",11442,12349],[10,"NumOpsDispatchChecked",12104,12165],[5,"LazyCsvReader",4670,12350],[5,"ScanArgsIpc",4670,12351],[5,"LazyJsonLineReader",4670,12352],[5,"ScanArgsParquet",4670,12353],[5,"RollingOptionsDynamicWindow",4670,12354],[5,"Bounds",4670,12355],[6,"ClosedWindow",4670,12356],[6,"Label",4670,12356],[6,"StartBy",4670,12356],[5,"Window",4670,12357],[5,"CsvReadOptions",4670,12358],[5,"CsvParseOptions",4670,12358],[6,"CsvEncoding",4670,12358],[6,"CommentPrefix",4670,12358],[6,"NullValues",4670,12358],[5,"CsvWriterOptions",4670,12359],[5,"SerializeOptions",4670,12359],[6,"QuoteStyle",4670,12359],[5,"IpcScanOptions",4670,12360],[5,"IpcWriterOptions",4670,12338],[6,"IpcCompression",4670,12338],[5,"JsonWriterOptions",4670,12361],[6,"JoinCoalesce",4670,12306],[6,"JoinType",4670,12306],[5,"ParquetOptions",4670,12362],[6,"JoinValidation",4670,12306],[6,"ParallelStrategy",4670,12362],[5,"AsOfOptions",4670,12363],[6,"AsofStrategy",4670,12363],[5,"ParquetWriteOptions",4670,12364],[6,"InequalityOperator",4670,12365],[6,"ParquetCompression",4670,12364],[5,"IEJoinOptions",4670,12365],[5,"GzipLevel",4670,12364],[5,"BrotliLevel",4670,12364],[5,"ZstdLevel",4670,12364],[6,"InterpolationMethod",4670,12366],[6,"ClosedInterval",4670,12367],[6,"RankMethod",4670,12368],[5,"RankOptions",4670,12368],[6,"DslPlan",4670,12369],[5,"When",4670,12370],[5,"Then",4670,12370],[5,"ChainedWhen",4670,12370],[5,"ChainedThen",4670,12370],[6,"LazySerde",4670,12266],[6,"Excluded",4670,12266],[6,"BooleanFunction",4670,12371],[6,"CategoricalFunction",4670,12372],[6,"TemporalFunction",4670,12373],[5,"StatisticsOptions",4670,12374],[6,"PowFunction",4670,12375],[6,"StringFunction",4670,12376],[6,"StructFunction",4670,12377],[5,"DatetimeArgs",4670,12378],[5,"DurationArgs",4670,12378],[5,"RollingCovOptions",4670,12379],[5,"StrptimeOptions",4670,12379],[5,"JoinOptions",4670,12379],[6,"WindowType",4670,12379],[6,"WindowMapping",4670,12379],[5,"FileMetadata",4670,12380],[6,"NestedType",4670,12379],[5,"UnpivotArgsDSL",4670,12379],[6,"LiteralValue",4670,12381],[5,"AnonymousScanOptions",4670,12382],[5,"UnionArgs",4670,12382],[5,"RollingVarParams",4670,12296],[5,"RollingQuantileParams",4670,12296],[6,"NonExistent",4670,12383],[10,"LazyFileListReader",4670,12384],[5,"CloudOptions",10597,12385],[10,"Ord",12260],[6,"ColumnOrder",12386],[6,"NullValuesCompiled",10231,12358],[10,"BinaryNameSpaceImpl",4670,12387],[5,"JsonLineReader",4670,12388],[5,"RowGroupMetadata",12389],[10,"CrossJoin",4670,12390],[10,"ExprEvalExtension",4670,12391],[10,"DateMethods",10460,12392],[10,"DatetimeMethods",10460,12393],[10,"DurationMethods",10460,12394],[5,"IpcStreamWriterOption",4670,12325],[10,"BinaryUdfOutputField",4670,12318],[5,"CStr",12395],[10,"Default",12396],[5,"ParquetStatistics",4670],[5,"ColumnChunkMetadata",12397],[6,"NullBehavior",12110,12398],[5,"Weak",12194],[5,"DateLikeNameSpace",10992,12399],[10,"SeriesMethods",4670,12400],[10,"PartialEq",12260],[10,"Scalar",12401],[10,"ListNameSpaceExtension",4670,12402],[10,"Command",12403],[5,"PathBuf",12254],[10,"SerReader",4670,12404],[10,"SerWriter",4670,12404],[5,"IpcReader",4670,12360],[5,"IpcStreamWriter",4670,12325],[5,"JsonWriter",4670,12361],[5,"JsonReader",4670,12361],[10,"UdfSchema",4670,12405],[6,"ArrayFunction",12406],[6,"ListFunction",12407],[6,"BinaryFunction",12408],[6,"RangeFunction",12409],[5,"MutableStatistics",12410],[5,"OsString",12255],[5,"CString",12411],[10,"ToOwned",12155],[1,"never"],[5,"GrowableStruct",12412],[10,"SchemaExt",4670,12413],[10,"FromData",10986,12414],[5,"Buffer",12415],[10,"FromDataUtf8",10986,12414],[10,"FromDataBinary",10986,12414],[5,"ListArray",12416],[6,"Ambiguous",4670,12383],[10,"NamedFromOwned",4670,12417],[10,"DataFrameJoinOps",4670,12418],[5,"FunctionOptions",12382],[10,"PartialOrd",12260],[6,"Context",12369],[5,"BoundsIter",4670,12357],[6,"ReaderBytes",12312],[10,"PolarsTemporalGroupby",4670,12280],[10,"Hash",12223],[10,"SeriesJoin",4670,12419],[10,"TimeMethods",10460,12420],[5,"NonZero",12421],[10,"IntoListNameSpace",4670,12402],[5,"StructValueIter",12422],[17,"DataType"],[10,"SchemaNamesAndDtypes",4670,12413],[10,"AsofJoinBy",4670,12423],[10,"ListNameSpaceImpl",4670,12424],[5,"ExprNameNameSpace",4670,12425],[5,"KeyValue",12426],[10,"IntoLazy",4670,12281],[10,"Literal",4670,12381],[5,"Null",4670,12381],[10,"CloneToUninit",12182],[5,"SuperTypeOptions",12427],[5,"RowIndex",12428],[10,"ChunkAggSeries",4670,12429],[10,"QuantileAggSeries",4670,12430],[10,"IndexToUsize",4670,12431],[10,"NamedFrom",4670,12417],[6,"RowGroupFetcher",12340],[6,"ScanSources",12432],[5,"SplitNChars",4670,12433],[5,"AnonymousScanArgs",4670,12316],[5,"Pin",12434],[5,"Request",12243],[10,"SeriesRank",4670,12368],[5,"BorrowedCursor",12435],[10,"VarInt",12436],[5,"IoSliceMut",12326],[10,"SeriesOpsTime",10460,12437],[10,"PolarsRound",4670,12438],[10,"ChunkedSet",4670,12199],[5,"SchemaDescriptor",12439],[6,"SeekFrom",12326],[10,"VarAggSeries",4670,12440],[5,"StringNameSpace",12441],[10,"TakeChunked",4670,12308],[5,"IRPlan",12304],[10,"ToDummies",4670,12442],[10,"PolarsTruncate",4670,12443],[5,"FileMetaData",12426],[5,"AllocError",12315],[5,"SchemaInferenceResult",11409,12444],[10,"PolarsUpsample",4670,12445],[10,"VecHash",4670,12446],[6,"JsonFormat",4670,12361],[5,"BTreeMap",12447],[10,"WriteDataFrameToFile",12404],[5,"IoSlice",12326],[5,"CountLines",10231,12448],[6,"PrefilterMaskSetting",10274,12340],[5,"MemSlice",12449],[6,"Filter",12450],[10,"ArrayNameSpace",10345,12451],[10,"AsArray",10345,12452],[6,"Buffer",10381,12453],[10,"AsString",10526,12328],[6,"Pattern",10526,12454],[5,"DatetimeInfer",10566,12455],[10,"StrpTimeParser",10566,12455],[17,"Error"],[10,"TryFromWithUnit",10566,12455],[6,"CloudType",10597,12385],[6,"SupportedCompression",10656,12456],[5,"AnonymousBuilder",11047,12457],[6,"RollingFunction",11293,12458],[6,"RollingFunctionBy",11324,12459],[5,"MutableNullArray",11369,12460],[5,"MutableBitmap",12461],[10,"AsSeries",11442,12349],[5,"Utf8Array",12462],[5,"_SerdeSeries",12162],[5,"SeriesIter",11554,12463],[5,"Rc",12464],[6,"NumericListOp",12057,12465],[8,"FillNullLimit",1689],[10,"InitHashMaps",2017],[10,"InitHashMaps2",2017],[5,"TrueT",2017],[8,"PolarsResult",3611],[15,"IO",10211],[15,"Context",10211],[15,"Count",10205],[15,"Slice",10206],[8,"OpaqueColumnUdf",4670],[8,"QuantileInterpolOptions",4670],[8,"ChunkJoinOptIds",4670],[10,"ListFromIter",4670],[15,"Quantile",10087],[15,"Min",10087],[15,"Max",10087],[15,"IsBetween",11246],[15,"Any",11246],[15,"All",11246],[15,"GroupBy",10097],[15,"Union",10097],[15,"Sort",10097],[15,"Scan",10097],[15,"ExtContext",10097],[15,"DataFrameScan",10097],[15,"IR",10097],[15,"Select",10097],[15,"HStack",10097],[15,"MapFunction",10097],[15,"Cache",10097],[15,"Filter",10097],[15,"Distinct",10097],[15,"Slice",10097],[15,"Sink",10097],[15,"Join",10097],[15,"HConcat",10097],[15,"SortBy",10148],[15,"Filter",10148],[15,"Cast",10148],[15,"Sort",10148],[15,"Gather",10148],[15,"RenameAlias",10148],[15,"Ternary",10148],[15,"Function",10148],[15,"Window",10148],[15,"AnonymousFunction",10148],[15,"Slice",10148],[15,"BinaryExpr",10148],[15,"Round",11249],[15,"RoundSF",11249],[15,"Clip",11249],[15,"BackwardFill",11249],[15,"ForwardFill",11249],[15,"Random",11249],[15,"GatherEvery",11249],[15,"ValueCounts",11249],[15,"Rank",11249],[15,"ReplaceStrict",11249],[15,"CumCount",11249],[15,"CumSum",11249],[15,"CumProd",11249],[15,"CumMin",11249],[15,"CumMax",11249],[15,"Range",10208],[15,"ConcatHorizontal",11271],[15,"ConcatVertical",11271],[15,"ExtractGroups",11271],[15,"SplitExact",11271],[15,"Contains",11271],[15,"Find",11271],[15,"Replace",11271],[15,"DatetimeFunction",11285],[5,"Utf8Field",10381],[5,"CategoricalField",10381],[5,"DatetimeField",10381],[15,"Datetime",10456],[10,"Utf8FromIter",11550],[10,"BinaryFromIter",11550]],"r":[[1,12466],[2,12466],[3,12466],[4,12466],[6,12267],[7,12466],[8,12466],[9,12466],[13,12466],[14,12466],[16,12267],[17,12139],[18,12139],[19,12139],[24,12467],[117,12139],[141,12139],[142,12139],[170,12139],[172,12139],[227,12139],[281,12139],[427,12139],[474,12139],[582,12139],[585,12139],[732,12139],[863,12209],[891,12210],[892,12210],[893,12217],[894,12217],[895,12219],[896,12214],[897,12215],[898,12211],[899,12213],[900,12216],[901,12212],[902,12215],[903,12214],[904,12220],[905,12221],[906,12217],[1043,12214],[1059,12213],[1087,12214],[1152,12210],[1153,12210],[1154,12215],[1155,12211],[1156,12213],[1157,12216],[1158,12212],[1159,12215],[1167,12213],[1169,12164],[1198,12224],[1199,12224],[1212,12225],[1214,12226],[1215,12226],[1218,12190],[1219,12190],[1220,12190],[1221,12190],[1257,12190],[1273,12468],[1274,12468],[1280,12193],[1285,12170],[1286,12230],[1287,12229],[1288,12170],[1289,12170],[1290,12170],[1291,12192],[1292,12163],[1559,12148],[1560,12148],[1561,12148],[1562,12148],[1574,12148],[1605,12148],[1606,12469],[1636,12237],[1660,12238],[1661,12238],[1662,12238],[1663,12238],[1676,12238],[1677,12238],[1678,12238],[1681,12238],[1683,12238],[1690,12239],[1691,12239],[1692,12239],[1693,12239],[1694,12239],[1695,12239],[1696,12239],[1697,12239],[1698,12239],[1699,12239],[1700,12239],[1701,12239],[1702,12239],[1703,12239],[1704,12239],[1705,12239],[1706,12239],[1707,12239],[1708,12239],[1709,12239],[1710,12239],[1711,12239],[1712,12239],[1713,12239],[1714,12239],[1715,12239],[1716,12239],[1717,12239],[1718,12239],[1721,12239],[1722,12239],[1732,12239],[1733,12240],[1735,12161],[1736,12161],[1751,12239],[1796,12239],[1799,12239],[1808,12239],[1811,12239],[1855,12239],[1858,12239],[1864,12239],[1901,12239],[1903,12241],[1907,12241],[1908,12241],[1909,12241],[1910,12241],[1911,12241],[1912,12241],[1913,12241],[1914,12241],[1915,12241],[1916,12241],[1917,12241],[1918,12241],[1919,12241],[1920,12241],[1921,12241],[1922,12241],[1923,12241],[1924,12241],[1925,12241],[1926,12241],[1927,12241],[1928,12241],[1929,12241],[1930,12241],[1931,12241],[1932,12241],[1933,12241],[1934,12241],[1935,12241],[1936,12241],[1937,12241],[1938,12241],[1939,12470],[1940,12470],[1941,12471],[1942,12471],[1943,12471],[1944,12472],[1945,12472],[1946,12472],[1947,12472],[1948,12472],[1949,12472],[1950,12472],[1951,12472],[1952,12472],[1956,12246],[1958,12246],[1977,12246],[1983,12240],[1984,12473],[1985,12473],[1986,12473],[1987,12473],[1990,12474],[1991,12240],[1992,12161],[1993,12161],[2006,12475],[2007,12476],[2008,12476],[2009,12476],[2010,12475],[2011,12475],[2012,12477],[2013,12475],[2014,12476],[2015,12476],[2016,12476],[2018,12184],[2022,12138],[2023,12253],[2024,12253],[2025,12253],[2026,12234],[2028,12159],[2032,12138],[2034,12138],[2035,12138],[2037,12138],[2042,12138],[2043,12138],[2044,12251],[2047,12251],[2048,12252],[2049,12258],[2050,12257],[2052,12138],[2053,12159],[2054,12159],[2055,12159],[2056,12159],[2061,12478],[2062,12138],[2065,12479],[2067,12138],[2072,12480],[2073,12138],[2075,12259],[2079,12481],[2080,12138],[2087,12138],[2088,12196],[2089,12196],[2092,12138],[2098,12138],[2099,12138],[2103,12138],[2104,12138],[2105,12184],[2107,12258],[2111,12482],[2112,12431],[2113,12482],[2114,12482],[2116,12483],[2117,12482],[2119,12138],[2120,12138],[2124,12138],[2125,12138],[2129,12138],[2130,12138],[2134,12138],[2135,12138],[2139,12138],[2140,12138],[2142,12265],[2153,12138],[2154,12138],[2156,12187],[2157,12187],[2169,12138],[2172,12138],[2174,12138],[2175,12184],[2179,12483],[2180,12483],[2181,12482],[2182,12483],[2183,12483],[2184,12483],[2185,12154],[2186,12138],[2187,12138],[2188,12138],[2189,12138],[2191,12259],[2192,12257],[2195,12242],[2199,12138],[2201,12138],[2206,12138],[2211,12484],[2212,12138],[2213,12188],[2214,12159],[2217,12138],[2221,12138],[2222,12138],[2226,12138],[2227,12138],[2231,12138],[2232,12138],[2236,12138],[2237,12138],[2241,12159],[2424,12258],[2438,12187],[2571,12159],[2749,12187],[3153,12258],[3154,12258],[3159,12159],[3549,12251],[3550,12251],[3551,12252],[3552,12258],[3553,12257],[3555,12258],[3559,12257],[3560,12258],[3562,12258],[3563,12258],[3564,12251],[3565,12251],[3566,12257],[3571,12257],[3572,12267],[3578,12267],[3581,12267],[3589,12267],[3591,12268],[3617,12140],[3624,12140],[3625,12140],[3626,12269],[3642,12140],[3655,12140],[3671,12269],[3678,12140],[3680,12140],[3681,12140],[3682,12140],[3683,12140],[3684,12269],[3685,12140],[3707,12485],[3708,12485],[3709,12485],[3711,12208],[3716,12208],[3717,12208],[3719,12208],[3720,12208],[3763,12208],[3801,12208],[3834,12208],[3907,12208],[3994,12162],[3995,12162],[3998,12287],[4272,12289],[4301,12147],[4304,12279],[4305,12279],[4307,12147],[4308,12147],[4309,12147],[4310,12147],[4311,12147],[4312,12147],[4315,12147],[4317,12293],[4329,12147],[4338,12279],[4409,12279],[4419,12279],[4542,12299],[4543,12300],[4544,12300],[4545,12300],[4546,12300],[4547,12300],[4548,12300],[4549,12300],[4550,12300],[4551,12300],[4555,12301],[4560,12302],[4561,12302],[4581,12278],[4615,12278],[4636,12278],[4650,12278],[4651,12278],[4652,12278],[4668,12486],[4669,12487],[4673,12266],[4680,12314],[4682,12383],[4685,12316],[4686,12316],[4687,12382],[4694,12184],[4696,12194],[4697,12321],[4700,12209],[4705,12138],[4706,12253],[4708,12253],[4709,12253],[4710,12322],[4711,12150],[4712,12234],[4714,12488],[4716,12327],[4717,12330],[4719,12363],[4720,12159],[4721,12333],[4723,12363],[4724,12423],[4725,12363],[4728,12489],[4734,12336],[4735,12340],[4740,12138],[4741,12217],[4744,12387],[4746,12138],[4747,12138],[4749,12138],[4750,12318],[4757,12138],[4758,12219],[4759,12371],[4760,12138],[4761,12147],[4764,12355],[4765,12357],[4767,12364],[4778,12251],[4782,12251],[4783,12252],[4784,12372],[4785,12258],[4786,12347],[4787,12257],[4789,12138],[4793,12370],[4794,12370],[4795,12239],[4796,12429],[4797,12239],[4798,12239],[4799,12239],[4800,12239],[4801,12239],[4802,12239],[4803,12239],[4804,12239],[4805,12239],[4806,12239],[4807,12239],[4808,12239],[4809,12239],[4810,12239],[4811,12200],[4812,12306],[4813,12239],[4814,12239],[4815,12239],[4816,12239],[4817,12239],[4818,12239],[4819,12239],[4820,12239],[4821,12239],[4822,12239],[4823,12239],[4824,12239],[4825,12139],[4826,12214],[4827,12224],[4828,12224],[4829,12199],[4831,12367],[4832,12356],[4835,12162],[4837,12318],[4841,12318],[4843,12358],[4844,12159],[4856,12390],[4857,12358],[4858,12358],[4859,12358],[4860,12310],[4861,12337],[4862,12359],[4869,12159],[4870,12159],[4871,12208],[4872,12418],[4873,12309],[4877,12159],[4885,12478],[4886,12392],[4888,12138],[4892,12378],[4893,12479],[4895,12393],[4897,12138],[4904,12480],[4905,12138],[4909,12308],[4912,12259],[4917,12369],[4921,12286],[4927,12378],[4928,12481],[4929,12394],[4930,12138],[4931,12280],[4945,12266],[4949,12266],[4950,12391],[4951,12425],[4960,12489],[4961,12489],[4962,12138],[4963,12196],[4967,12196],[4968,12324],[4969,12425],[4970,12380],[4971,12490],[4973,12239],[4974,12239],[4984,12138],[4992,12138],[4993,12138],[4998,12138],[4999,12138],[5007,12414],[5008,12414],[5009,12414],[5013,12320],[5014,12318],[5018,12184],[5020,12318],[5022,12258],[5023,12279],[5025,12279],[5027,12147],[5028,12147],[5029,12147],[5030,12147],[5031,12147],[5032,12147],[5039,12364],[5050,12482],[5052,12365],[5053,12489],[5059,12431],[5060,12482],[5061,12147],[5062,12200],[5063,12482],[5066,12345],[5068,12284],[5069,12431],[5070,12365],[5072,12483],[5073,12482],[5075,12306],[5078,12138],[5079,12138],[5084,12138],[5085,12138],[5090,12138],[5091,12138],[5096,12138],[5097,12138],[5102,12138],[5103,12138],[5106,12366],[5109,12162],[5110,12293],[5111,12281],[5112,12402],[5113,12265],[5114,12283],[5115,12247],[5117,12338],[5118,12360],[5119,12360],[5120,12325],[5121,12325],[5122,12325],[5123,12338],[5124,12338],[5127,12239],[5131,12239],[5146,12306],[5147,12281],[5148,12306],[5149,12305],[5150,12379],[5152,12306],[5153,12306],[5156,12361],[5157,12388],[5159,12361],[5160,12361],[5161,12361],[5165,12356],[5167,12491],[5169,12491],[5170,12491],[5176,12350],[5177,12384],[5178,12281],[5179,12281],[5180,12352],[5181,12266],[5188,12306],[5193,12146],[5200,12215],[5201,12211],[5202,12213],[5203,12138],[5205,12492],[5206,12323],[5207,12402],[5208,12424],[5209,12212],[5210,12215],[5211,12138],[5212,12381],[5214,12381],[5216,12187],[5219,12187],[5272,12381],[5277,12417],[5278,12417],[5291,12379],[5293,12214],[5295,12247],[5296,12383],[5307,12381],[5315,12358],[5316,12200],[5317,12200],[5318,12146],[5319,12165],[5320,12138],[5323,12138],[5325,12138],[5330,12266],[5331,12266],[5332,12314],[5341,12336],[5342,12184],[5344,12493],[5347,12362],[5348,12364],[5349,12362],[5350,12339],[5352,12364],[5353,12341],[5357,12483],[5358,12483],[5359,12482],[5360,12483],[5361,12483],[5362,12483],[5363,12154],[5365,12138],[5366,12140],[5367,12138],[5368,12138],[5369,12190],[5370,12138],[5371,12148],[5372,12140],[5373,12438],[5374,12280],[5375,12443],[5377,12445],[5379,12375],[5382,12221],[5386,12430],[5387,12197],[5388,12197],[5390,12359],[5399,12368],[5400,12368],[5401,12239],[5403,12318],[5412,12259],[5413,12257],[5423,12379],[5426,12296],[5427,12280],[5428,12354],[5429,12198],[5430,12296],[5431,12494],[5432,12296],[5437,12348],[5438,12495],[5446,12191],[5450,12317],[5451,12351],[5452,12353],[5453,12413],[5454,12413],[5457,12413],[5458,12413],[5459,12246],[5463,12313],[5466,12404],[5467,12404],[5468,12359],[5469,12142],[5472,12419],[5473,12400],[5474,12437],[5475,12368],[5476,12332],[5477,12189],[5490,12240],[5491,12147],[5497,12161],[5498,12161],[5499,12318],[5504,12433],[5506,12356],[5508,12242],[5509,12374],[5517,12267],[5519,12138],[5520,12217],[5522,12376],[5523,12328],[5524,12335],[5526,12138],[5533,12379],[5537,12285],[5538,12467],[5541,12377],[5542,12307],[5544,12138],[5554,12308],[5556,12373],[5557,12349],[5559,12370],[5567,12484],[5568,12420],[5570,12138],[5571,12188],[5572,12159],[5576,12442],[5590,12138],[5597,12138],[5598,12138],[5603,12138],[5604,12138],[5609,12138],[5610,12138],[5615,12138],[5616,12138],[5617,12496],[5618,12405],[5622,12382],[5625,12208],[5628,12159],[5629,12379],[5630,12289],[5633,12344],[5643,12440],[5644,12446],[5648,12370],[5650,12357],[5653,12379],[5654,12379],[5664,12364],[5761,12497],[5764,12498],[5767,12499],[5768,12497],[5781,12500],[5792,12279],[5794,12501],[5797,12502],[5811,12502],[5822,12503],[5828,12504],[5834,12505],[5847,12506],[5852,12506],[5855,12239],[5865,12507],[5890,12508],[5894,12509],[5898,12510],[5906,12504],[5908,12370],[6175,12498],[6183,12258],[6188,12509],[6199,12504],[6213,12511],[6216,12512],[6218,12512],[6220,12512],[6514,12513],[6522,12502],[6526,12514],[6527,12501],[6529,12515],[6542,12501],[6552,12496],[6556,12515],[6558,12516],[6561,12515],[6562,12515],[6563,12516],[6564,12516],[6573,12492],[6574,12517],[6580,12518],[6581,12448],[6582,12448],[6583,12518],[6584,12159],[6586,12340],[6591,12519],[6593,12502],[6594,12519],[6596,12519],[6598,12519],[6600,12502],[6601,12519],[6605,12466],[6607,12505],[6608,12507],[6609,12378],[6611,12505],[6612,12505],[6613,12476],[6614,12476],[6615,12476],[6682,12492],[6683,12305],[6950,12410],[6952,12466],[6954,12520],[7102,12521],[7103,12504],[7112,12501],[7113,12501],[7115,12378],[7123,12286],[7124,12286],[7125,12413],[7392,12522],[7393,12522],[7400,12493],[7401,12493],[7402,12493],[7409,12279],[7430,12239],[7467,12504],[7472,12492],[7476,12239],[7481,12523],[7588,12279],[7592,12502],[7596,12516],[7830,12239],[7840,12504],[7842,12239],[7867,12493],[7876,12489],[7888,12356],[7889,12356],[7973,12524],[7984,12525],[7985,12526],[7986,12526],[7988,12527],[8000,12501],[8003,12431],[8004,12444],[8142,12505],[8143,12505],[8144,12528],[8145,12366],[8147,12528],[8148,12529],[8303,12367],[8305,12493],[8314,12530],[8320,12531],[8323,12532],[8332,12509],[8335,12509],[8342,12517],[8377,12504],[8386,12518],[8387,12518],[8395,12504],[8406,12381],[8454,12258],[8455,12258],[8460,12503],[8471,12504],[8474,12504],[8483,12533],[8484,12489],[8486,12509],[8497,12509],[8503,12509],[8513,12159],[8523,12509],[8544,12507],[8582,12507],[8593,12534],[8594,12535],[8642,12536],[8666,12509],[8671,12504],[8672,12492],[8708,12489],[8726,12140],[8727,12140],[8728,12140],[8729,12140],[8734,12418],[8743,12509],[8775,12502],[8782,12361],[8786,12537],[8787,12538],[8789,12539],[8796,12539],[8797,12539],[8799,12526],[8801,12493],[8856,12239],[8894,12498],[8898,12239],[8912,12511],[8964,12239],[8984,12433],[8986,12433],[9005,12524],[9015,12507],[9016,12540],[9018,12540],[9020,12540],[9022,12540],[9024,12540],[9039,12509],[9064,12370],[9068,12505],[9217,12518],[9218,12518],[9529,12340],[9671,12504],[9679,12541],[9698,12492],[9864,12370],[10076,12542],[10085,12239],[10234,12448],[10235,12358],[10241,12543],[10253,12543],[10262,12310],[10263,12543],[10271,12453],[10277,12340],[10280,12340],[10284,12533],[10289,12544],[10291,12545],[10296,12299],[10297,12300],[10298,12300],[10299,12300],[10300,12300],[10301,12300],[10302,12300],[10303,12300],[10304,12300],[10305,12300],[10309,12241],[10313,12241],[10314,12241],[10315,12241],[10316,12241],[10317,12241],[10318,12241],[10319,12241],[10320,12241],[10321,12241],[10322,12241],[10323,12241],[10324,12241],[10325,12241],[10326,12241],[10327,12241],[10328,12241],[10329,12241],[10330,12241],[10331,12241],[10332,12241],[10333,12241],[10334,12241],[10335,12241],[10336,12241],[10337,12241],[10338,12241],[10339,12241],[10340,12241],[10341,12241],[10342,12241],[10343,12241],[10344,12241],[10345,12451],[10346,12452],[10364,12343],[10382,12453],[10384,12453],[10387,12453],[10401,12453],[10433,12453],[10451,12453],[10459,12347],[10460,12392],[10461,12393],[10462,12394],[10463,12354],[10464,12437],[10465,12328],[10466,12420],[10519,12546],[10526,12328],[10532,12454],[10533,12328],[10557,12328],[10566,12455],[10568,12455],[10569,12455],[10580,12455],[10599,12385],[10600,12385],[10636,12547],[10649,12385],[10650,12385],[10657,12456],[10669,12456],[10675,12184],[10679,12138],[10680,12253],[10681,12253],[10682,12253],[10683,12234],[10685,12159],[10689,12138],[10691,12138],[10692,12138],[10694,12138],[10699,12138],[10700,12138],[10701,12251],[10704,12251],[10705,12252],[10706,12258],[10707,12257],[10709,12138],[10710,12159],[10711,12159],[10712,12159],[10713,12159],[10718,12478],[10719,12138],[10722,12479],[10724,12138],[10729,12480],[10730,12138],[10732,12259],[10736,12481],[10737,12138],[10742,12138],[10743,12196],[10744,12196],[10747,12138],[10753,12138],[10754,12138],[10758,12138],[10759,12138],[10760,12184],[10762,12258],[10766,12482],[10767,12431],[10768,12482],[10769,12482],[10771,12483],[10772,12482],[10774,12138],[10775,12138],[10779,12138],[10780,12138],[10784,12138],[10785,12138],[10789,12138],[10790,12138],[10794,12138],[10795,12138],[10797,12265],[10808,12138],[10809,12138],[10811,12187],[10812,12187],[10824,12138],[10827,12138],[10829,12138],[10830,12184],[10834,12483],[10835,12483],[10836,12482],[10837,12483],[10838,12483],[10839,12483],[10840,12154],[10841,12138],[10842,12138],[10843,12138],[10844,12138],[10846,12259],[10847,12257],[10850,12242],[10854,12138],[10856,12138],[10861,12138],[10866,12484],[10867,12138],[10868,12188],[10869,12159],[10872,12138],[10876,12138],[10877,12138],[10881,12138],[10882,12138],[10886,12138],[10887,12138],[10891,12138],[10892,12138],[10896,12159],[10909,12258],[10912,12187],[10917,12159],[10920,12187],[10935,12258],[10936,12258],[10937,12159],[10955,12251],[10956,12251],[10957,12252],[10958,12258],[10959,12257],[10961,12258],[10965,12257],[10966,12258],[10968,12258],[10969,12258],[10970,12251],[10971,12251],[10972,12257],[10977,12257],[10978,12267],[10979,12267],[10980,12267],[10981,12267],[10982,12268],[10983,12526],[10984,12526],[10985,12526],[10986,12414],[10987,12414],[10988,12414],[10992,12399],[11044,12301],[11047,12457],[11067,12470],[11068,12470],[11084,12371],[11087,12372],[11127,12320],[11170,12375],[11203,12376],[11211,12377],[11216,12373],[11242,12320],[11243,12320],[11244,12320],[11245,12320],[11287,12372],[11291,12375],[11297,12458],[11328,12459],[11355,12471],[11356,12471],[11357,12471],[11358,12366],[11361,12366],[11362,12529],[11363,12548],[11364,12549],[11365,12549],[11366,12549],[11367,12549],[11368,12549],[11369,12460],[11400,12472],[11401,12472],[11402,12472],[11403,12472],[11404,12472],[11405,12472],[11406,12472],[11407,12472],[11408,12472],[11409,12444],[11420,12444],[11425,12444],[11426,12444],[11439,12246],[11440,12246],[11441,12246],[11442,12349],[11443,12349],[11464,12240],[11465,12473],[11466,12473],[11467,12473],[11468,12473],[11471,12474],[11472,12240],[11473,12161],[11474,12161],[11487,12333],[11488,12433],[11489,12335],[11499,12522],[11500,12522],[11510,12524],[11518,12433],[11520,12433],[11524,12524],[11530,12540],[11532,12540],[11534,12540],[11536,12540],[11538,12540],[11544,12344],[11550,12550],[11551,12550],[11555,12189],[11556,12239],[11558,12283],[11559,12189],[11563,12142],[11564,12463],[11565,12463],[11566,12189],[11577,12142],[11585,12142],[11783,12142],[11908,12142],[12033,12157],[12034,12157],[12060,12146],[12062,12146],[12063,12146],[12064,12465],[12069,12146],[12075,12146],[12104,12165],[12105,12165],[12112,12398]],"b":[[29,"impl-Add-for-ChunkedArray%3CStringType%3E"],[30,"impl-Add-for-ChunkedArray%3CT%3E"],[31,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CT%3E"],[38,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[39,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[40,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CT%3E"],[43,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[46,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[47,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[49,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[61,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[64,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[96,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[127,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[156,"impl-ChunkedArray%3CStructType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[162,"impl-ChunkedArray%3CT%3E"],[163,"impl-Container-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[185,"impl-Div-for-ChunkedArray%3CT%3E"],[186,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[193,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[195,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[197,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[200,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[202,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[203,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[206,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[208,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[212,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[214,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[220,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[224,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[228,"impl-Debug-for-ChunkedArray%3CListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[230,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[231,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[232,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[233,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[234,"impl-Debug-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CListType%3E"],[237,"impl-ChunkedArray%3CFixedSizeListType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[247,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[251,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[252,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[253,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[255,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[256,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[257,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[258,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[259,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[261,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[262,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[263,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[265,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[268,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[271,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[276,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[282,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[287,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[288,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[293,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[299,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[307,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[309,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[312,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[313,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[321,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[322,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-ChunkedArray%3CListType%3E"],[325,"impl-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[343,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[344,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkedArray%3CListType%3E"],[351,"impl-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[361,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[362,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[363,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[370,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[371,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[375,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[376,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[377,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[378,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[382,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[384,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[385,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[386,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[392,"impl-ChunkedArray%3CListType%3E"],[393,"impl-ChunkedArray%3CFixedSizeListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[412,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-Container-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[455,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[457,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[458,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[480,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkedArray%3CBooleanType%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkedArray%3CT%3E"],[489,"impl-ChunkedArray%3CBooleanType%3E"],[490,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[491,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[493,"impl-Mul-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[498,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[502,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[505,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[507,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[508,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[509,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[511,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[512,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[513,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[520,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[527,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[532,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[534,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[535,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[536,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[537,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[538,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[539,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[541,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[544,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[545,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[546,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[547,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[548,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[549,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[550,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[551,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[557,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[558,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[569,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[570,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[573,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[575,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[576,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[577,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[578,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[584,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkedArray%3CListType%3E"],[588,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkedArray%3CStringType%3E"],[592,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[593,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[594,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[628,"impl-Rem-for-ChunkedArray%3CT%3E"],[629,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[630,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[631,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[646,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[647,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[656,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[657,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[659,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[666,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[668,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[669,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[670,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[671,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[672,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[673,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[674,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[675,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[676,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[677,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[678,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[679,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[680,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[681,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[684,"impl-Container-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkedArray%3CT%3E"],[686,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[687,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[688,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[689,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[690,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[691,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[692,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[693,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[694,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[695,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[696,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[697,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[698,"impl-Container-for-ChunkedArray%3CT%3E"],[699,"impl-ChunkedArray%3CT%3E"],[701,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[702,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[703,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[705,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[706,"impl-Sub-for-ChunkedArray%3CT%3E"],[707,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[708,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkedArray%3CBooleanType%3E"],[711,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[712,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[713,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[714,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[722,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[723,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[724,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[725,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[726,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[727,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[728,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[736,"impl-ChunkedArray%3CListType%3E"],[737,"impl-ChunkedArray%3CFixedSizeListType%3E"],[738,"impl-ChunkedArray%3CListType%3E"],[739,"impl-ChunkedArray%3CT%3E"],[744,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[745,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[746,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[747,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[748,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[751,"impl-ChunkedArray%3CListType%3E"],[752,"impl-ChunkedArray%3CFixedSizeListType%3E"],[766,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[767,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[768,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[769,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[770,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[776,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[777,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[778,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[779,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[780,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[782,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[783,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[800,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[807,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[810,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[861,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[862,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1038,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1039,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1313,"impl-MetadataProperties"],[1314,"impl-Flags-for-MetadataProperties"],[1315,"impl-MetadataFlags"],[1316,"impl-Flags-for-MetadataFlags"],[1379,"impl-Metadata%3CT%3E"],[1380,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1405,"impl-Binary-for-MetadataProperties"],[1406,"impl-Octal-for-MetadataProperties"],[1407,"impl-LowerHex-for-MetadataProperties"],[1408,"impl-Debug-for-MetadataProperties"],[1409,"impl-UpperHex-for-MetadataProperties"],[1410,"impl-UpperHex-for-MetadataFlags"],[1411,"impl-LowerHex-for-MetadataFlags"],[1412,"impl-Debug-for-MetadataFlags"],[1413,"impl-Binary-for-MetadataFlags"],[1414,"impl-Octal-for-MetadataFlags"],[1424,"impl-Flags-for-MetadataProperties"],[1425,"impl-MetadataProperties"],[1426,"impl-Flags-for-MetadataFlags"],[1427,"impl-MetadataFlags"],[1438,"impl-Metadata%3CT%3E"],[1439,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1482,"impl-Metadata%3CT%3E"],[1483,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1487,"impl-Metadata%3CT%3E"],[1488,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1565,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1566,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1601,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1602,"impl-ObjectArray%3CT%3E"],[1617,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1618,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1628,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1629,"impl-ObjectArray%3CT%3E"],[1630,"impl-ObjectArray%3CT%3E"],[1631,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1633,"impl-ObjectArray%3CT%3E"],[1634,"impl-Array-for-ObjectArray%3CT%3E"],[1637,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1638,"impl-ObjectChunkedBuilder%3CT%3E"],[1640,"impl-ObjectChunkedBuilder%3CT%3E"],[1641,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2319,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2320,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2321,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2322,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2429,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2430,"impl-Logical%3CDurationType,+Int64Type%3E"],[2432,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2433,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2434,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2435,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2436,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2738,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2739,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2740,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2741,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2742,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2754,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2755,"impl-PartialEq-for-DataType"],[2764,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2765,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2766,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2767,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2768,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2769,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2808,"impl-Display-for-PlSmallStr"],[2809,"impl-Debug-for-PlSmallStr"],[2813,"impl-Display-for-AnyValue%3C\'_%3E"],[2814,"impl-Debug-for-AnyValue%3C\'a%3E"],[2816,"impl-Debug-for-DataType"],[2817,"impl-Display-for-DataType"],[2820,"impl-Debug-for-TimeUnit"],[2821,"impl-Display-for-TimeUnit"],[2823,"impl-Display-for-ReshapeDimension"],[2824,"impl-Debug-for-ReshapeDimension"],[2827,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2828,"impl-From%3C%26String%3E-for-PlSmallStr"],[2829,"impl-From%3C%26str%3E-for-PlSmallStr"],[2830,"impl-From%3CString%3E-for-PlSmallStr"],[2835,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2836,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2849,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2850,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2851,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2852,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2854,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2856,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2858,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2859,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2861,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2863,"impl-From%3C%26ArrowField%3E-for-Field"],[2888,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2890,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2898,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2899,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2900,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2901,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2902,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2903,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2904,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2905,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2925,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2926,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2927,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2928,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2929,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2932,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2933,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2934,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2935,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2936,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2974,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2975,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2976,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2977,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2978,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2979,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3092,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3093,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3094,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3095,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3096,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3147,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3148,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3149,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3150,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3151,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3152,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3189,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3190,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3191,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3192,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3193,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3194,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3195,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3196,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3205,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3206,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3208,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3209,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3210,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3213,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3214,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3236,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3237,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3243,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3244,"impl-Logical%3CDurationType,+Int64Type%3E"],[3251,"impl-Logical%3CDateType,+Int32Type%3E"],[3252,"impl-Logical%3CTimeType,+Int64Type%3E"],[3253,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3269,"impl-Logical%3CDurationType,+Int64Type%3E"],[3270,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3323,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3324,"impl-Logical%3CDateType,+Int32Type%3E"],[3325,"impl-Logical%3CTimeType,+Int64Type%3E"],[3331,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3332,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3657,"impl-Debug-for-ErrString"],[3658,"impl-Display-for-ErrString"],[3659,"impl-Display-for-PolarsError"],[3660,"impl-Debug-for-PolarsError"],[3665,"impl-From%3CError%3E-for-PolarsError"],[3666,"impl-From%3CError%3E-for-PolarsError"],[3667,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3668,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3669,"impl-From%3CError%3E-for-PolarsError"],[3670,"impl-From%3CParquetError%3E-for-PolarsError"],[3811,"impl-Display-for-DataFrame"],[3812,"impl-Debug-for-DataFrame"],[3818,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3819,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3845,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3846,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3847,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3848,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3849,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3850,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3851,"impl-Index%3C%26str%3E-for-DataFrame"],[3852,"impl-Index%3Cusize%3E-for-DataFrame"],[3871,"impl-Container-for-DataFrame"],[3872,"impl-DataFrame"],[3929,"impl-DataFrame"],[3930,"impl-Container-for-DataFrame"],[3934,"impl-Container-for-DataFrame"],[3935,"impl-DataFrame"],[3958,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3959,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4002,"impl-Add-for-Column"],[4003,"impl-Add%3CT%3E-for-Column"],[4004,"impl-Add%3CT%3E-for-%26Column"],[4005,"impl-Add-for-%26Column"],[4035,"impl-BitAnd-for-%26Column"],[4036,"impl-BitAnd-for-Column"],[4037,"impl-Column"],[4038,"impl-BitOr-for-Column"],[4039,"impl-BitOr-for-%26Column"],[4040,"impl-Column"],[4041,"impl-BitXor-for-Column"],[4042,"impl-BitXor-for-%26Column"],[4043,"impl-Column"],[4071,"impl-Div%3CT%3E-for-%26Column"],[4072,"impl-Div%3CT%3E-for-Column"],[4073,"impl-Div-for-%26Column"],[4074,"impl-Div-for-Column"],[4099,"impl-From%3CSeries%3E-for-Column"],[4100,"impl-From%3CPartitionedColumn%3E-for-Column"],[4101,"impl-From%3CScalarColumn%3E-for-Column"],[4152,"impl-Mul%3CT%3E-for-Column"],[4153,"impl-Mul%3CT%3E-for-%26Column"],[4154,"impl-Mul-for-%26Column"],[4155,"impl-Mul-for-Column"],[4175,"impl-Rem-for-Column"],[4176,"impl-Rem-for-%26Column"],[4177,"impl-Rem%3CT%3E-for-%26Column"],[4178,"impl-Rem%3CT%3E-for-Column"],[4201,"impl-Sub-for-%26Column"],[4202,"impl-Sub-for-Column"],[4203,"impl-Sub%3CT%3E-for-Column"],[4204,"impl-Sub%3CT%3E-for-%26Column"],[4417,"impl-Display-for-GroupByMethod"],[4418,"impl-Debug-for-GroupByMethod"],[4425,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4426,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4459,"impl-IntoIterator-for-GroupsIdx"],[4460,"impl-IntoIterator-for-%26GroupsIdx"],[4462,"impl-IntoParallelIterator-for-GroupsIdx"],[4463,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5858,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5859,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5863,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5864,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5892,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5893,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5914,"impl-Flags-for-OptFlags"],[5915,"impl-OptFlags"],[6660,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6661,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6662,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6672,"impl-Default-for-Arc%3CCStr%3E"],[6673,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6674,"impl-Default-for-Arc%3CT%3E"],[6675,"impl-Default-for-Arc%3Cstr%3E"],[7168,"impl-Expr"],[7169,"impl-PartialEq-for-Expr"],[7173,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7174,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7192,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7193,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7194,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7200,"impl-PartialEq-for-StructArray"],[7201,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7490,"impl-Display-for-Duration"],[7491,"impl-Debug-for-Duration"],[7513,"impl-Display-for-JoinType"],[7514,"impl-Debug-for-JoinType"],[7516,"impl-Debug-for-JoinValidation"],[7517,"impl-Display-for-JoinValidation"],[7532,"impl-Display-for-Expr"],[7533,"impl-Debug-for-Expr"],[7536,"impl-Display-for-Operator"],[7537,"impl-Debug-for-Operator"],[7539,"impl-Display-for-BooleanFunction"],[7540,"impl-Debug-for-BooleanFunction"],[7541,"impl-Debug-for-CategoricalFunction"],[7542,"impl-Display-for-CategoricalFunction"],[7543,"impl-Display-for-TemporalFunction"],[7544,"impl-Debug-for-TemporalFunction"],[7547,"impl-Display-for-PowFunction"],[7548,"impl-Debug-for-PowFunction"],[7549,"impl-Display-for-StringFunction"],[7550,"impl-Debug-for-StringFunction"],[7551,"impl-Display-for-StructFunction"],[7552,"impl-Debug-for-StructFunction"],[7553,"impl-Debug-for-FunctionExpr"],[7554,"impl-Display-for-FunctionExpr"],[7567,"impl-Debug-for-OptFlags"],[7568,"impl-UpperHex-for-OptFlags"],[7569,"impl-LowerHex-for-OptFlags"],[7570,"impl-Octal-for-OptFlags"],[7571,"impl-Binary-for-OptFlags"],[7572,"impl-Pointer-for-Arc%3CT,+A%3E"],[7573,"impl-Display-for-Arc%3CT,+A%3E"],[7574,"impl-Debug-for-Arc%3CT,+A%3E"],[7607,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7608,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7687,"impl-From%3Ci8%3E-for-Expr"],[7688,"impl-From%3Cbool%3E-for-Expr"],[7689,"impl-From%3Cu64%3E-for-Expr"],[7690,"impl-From%3Cu32%3E-for-Expr"],[7692,"impl-From%3Cu16%3E-for-Expr"],[7693,"impl-From%3Cu8%3E-for-Expr"],[7694,"impl-From%3Ci64%3E-for-Expr"],[7695,"impl-From%3Ci32%3E-for-Expr"],[7696,"impl-From%3Ci16%3E-for-Expr"],[7697,"impl-From%3CAggExpr%3E-for-Expr"],[7698,"impl-From%3C%26str%3E-for-Expr"],[7699,"impl-From%3Cf32%3E-for-Expr"],[7700,"impl-From%3Cf64%3E-for-Expr"],[7706,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7707,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7708,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7709,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7710,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7711,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7712,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7713,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7714,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7715,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7725,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7726,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7727,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7729,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7741,"impl-From%3CString%3E-for-Selector"],[7742,"impl-From%3C%26str%3E-for-Selector"],[7743,"impl-From%3CPlSmallStr%3E-for-Selector"],[7744,"impl-From%3CExpr%3E-for-Selector"],[7748,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7749,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7750,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7751,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7752,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7753,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7754,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7755,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7756,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7757,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7760,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7761,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7762,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7763,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7764,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7765,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7775,"impl-From%3Cu8%3E-for-Scalar"],[7776,"impl-From%3Cu16%3E-for-Scalar"],[7777,"impl-From%3Ci64%3E-for-Scalar"],[7778,"impl-From%3Ci32%3E-for-Scalar"],[7779,"impl-From%3Ci16%3E-for-Scalar"],[7780,"impl-From%3Ci8%3E-for-Scalar"],[7781,"impl-From%3Cu64%3E-for-Scalar"],[7782,"impl-From%3Cu32%3E-for-Scalar"],[7783,"impl-From%3Cf32%3E-for-Scalar"],[7784,"impl-From%3Cf64%3E-for-Scalar"],[7785,"impl-From%3Cbool%3E-for-Scalar"],[7795,"impl-OptFlags"],[7796,"impl-Flags-for-OptFlags"],[7801,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7802,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7810,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7811,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7824,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7825,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8953,"impl-StructArray"],[8954,"impl-Array-for-StructArray"],[8960,"impl-Array-for-StructArray"],[8961,"impl-StructArray"],[9232,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9233,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9237,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9238,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9701,"impl-StructArray"],[9702,"impl-Array-for-StructArray"],[9958,"impl-LazyCsvReader"],[9959,"impl-LazyFileListReader-for-LazyCsvReader"],[9960,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9961,"impl-LazyJsonLineReader"],[10003,"impl-LazyFileListReader-for-LazyCsvReader"],[10004,"impl-LazyCsvReader"],[10005,"impl-LazyJsonLineReader"],[10006,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10048,"impl-Array-for-StructArray"],[10049,"impl-StructArray"],[10586,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10587,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10592,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10593,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[11311,"impl-Display-for-RollingFunction"],[11312,"impl-Debug-for-RollingFunction"],[11342,"impl-Debug-for-RollingFunctionBy"],[11343,"impl-Display-for-RollingFunctionBy"],[11573,"impl-Add-for-%26Series"],[11574,"impl-Add-for-Series"],[11575,"impl-Add%3CT%3E-for-%26Series"],[11576,"impl-Add%3CT%3E-for-Series"],[11594,"impl-AsSeries-for-Series"],[11595,"impl-SeriesSealed-for-Series"],[11600,"impl-BitAnd%3C%26Series%3E-for-Series"],[11601,"impl-BitAnd-for-%26Series"],[11602,"impl-BitAnd-for-Series"],[11603,"impl-BitAnd%3CSeries%3E-for-%26Series"],[11604,"impl-BitOr%3CSeries%3E-for-%26Series"],[11605,"impl-BitOr-for-Series"],[11606,"impl-BitOr-for-%26Series"],[11607,"impl-BitOr%3C%26Series%3E-for-Series"],[11608,"impl-BitXor-for-%26Series"],[11609,"impl-BitXor%3CSeries%3E-for-%26Series"],[11610,"impl-BitXor%3C%26Series%3E-for-Series"],[11611,"impl-BitXor-for-Series"],[11657,"impl-Div-for-Series"],[11658,"impl-Div%3CT%3E-for-%26Series"],[11659,"impl-Div-for-%26Series"],[11660,"impl-Div%3CT%3E-for-Series"],[11671,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11672,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11673,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11675,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11676,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11677,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11694,"impl-Debug-for-Series"],[11695,"impl-Display-for-Series"],[11700,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11701,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11702,"impl-From%3C_SerdeSeries%3E-for-Series"],[11703,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11705,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11706,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11712,"impl-FromIterator%3Cu16%3E-for-Series"],[11713,"impl-FromIterator%3Ci16%3E-for-Series"],[11714,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11715,"impl-FromIterator%3C%26i16%3E-for-Series"],[11716,"impl-FromIterator%3C%26u32%3E-for-Series"],[11717,"impl-FromIterator%3C%26f64%3E-for-Series"],[11718,"impl-FromIterator%3Cu32%3E-for-Series"],[11719,"impl-FromIterator%3Cbool%3E-for-Series"],[11720,"impl-FromIterator%3Cf64%3E-for-Series"],[11721,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11722,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11723,"impl-FromIterator%3C%26bool%3E-for-Series"],[11724,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11725,"impl-FromIterator%3C%26u16%3E-for-Series"],[11726,"impl-FromIterator%3Cu64%3E-for-Series"],[11727,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11728,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11729,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11730,"impl-FromIterator%3Cu8%3E-for-Series"],[11731,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11732,"impl-FromIterator%3C%26f32%3E-for-Series"],[11733,"impl-FromIterator%3C%26str%3E-for-Series"],[11734,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11735,"impl-FromIterator%3Cf32%3E-for-Series"],[11736,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11737,"impl-FromIterator%3CString%3E-for-Series"],[11738,"impl-FromIterator%3C%26u64%3E-for-Series"],[11739,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11740,"impl-FromIterator%3C%26i64%3E-for-Series"],[11741,"impl-FromIterator%3Ci8%3E-for-Series"],[11742,"impl-FromIterator%3Ci64%3E-for-Series"],[11743,"impl-FromIterator%3C%26i8%3E-for-Series"],[11744,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11745,"impl-FromIterator%3C%26i32%3E-for-Series"],[11746,"impl-FromIterator%3Ci32%3E-for-Series"],[11747,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11748,"impl-FromIterator%3C%26u8%3E-for-Series"],[11749,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11750,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11751,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11752,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11753,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11754,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11755,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11756,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11757,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11758,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11759,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11769,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11770,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11771,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11772,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11773,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11774,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11819,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11820,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11821,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11822,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[11823,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[11824,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[11833,"impl-Mul-for-%26Series"],[11834,"impl-Mul%3CT%3E-for-Series"],[11835,"impl-Mul-for-Series"],[11836,"impl-Mul%3CT%3E-for-%26Series"],[11841,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11842,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11843,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11844,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11845,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11846,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11847,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11848,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11849,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11850,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11851,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11852,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11853,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11854,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11855,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11856,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11857,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11858,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11859,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11860,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11861,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11862,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11863,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11864,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11865,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11866,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11867,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11868,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11869,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11870,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11871,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11872,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11873,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11874,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11875,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11876,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11877,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11878,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11879,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11880,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11881,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11882,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11883,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11884,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11885,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11886,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11887,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11888,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11889,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11890,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11891,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11892,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11893,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11899,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11900,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11901,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11903,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[11904,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[11905,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[11915,"impl-Rem%3CT%3E-for-%26Series"],[11916,"impl-Rem-for-%26Series"],[11917,"impl-Rem%3CT%3E-for-Series"],[11946,"impl-Sub-for-%26Series"],[11947,"impl-Sub%3CT%3E-for-%26Series"],[11948,"impl-Sub%3CT%3E-for-Series"],[11949,"impl-Sub-for-Series"],[11985,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11986,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11987,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11988,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAAPIQPRF4EXsRfBF9EX4RfxGEEYcRjBGNEbMRDBU=","e":"OzAAAAEAACAjmgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAFAF8ABABlAAYAbQAAAHAABQB3ABUAjgAAAJAAAACSABAApAAAAKcAAwCsAAIAswANAMIAFQDaAAgA5AAKAPAAAADyAAEA9gAeABsBFQAzARMASAEDAE0BEQBiAQEAZgEBAGkBCwB2AQ0AhgECAI4BEQChAQMAqAECAKwBAgCwAQcAvQEeAOEBBwDrAQgA9QE1AC4CFQBFAgQASwIEAFECBQBbAgIAXwIaAHsCBwCHAhEAmwIQAK0CAACvAgwAvQIOAM8CBADVAgMA3gIBAOUCAADpAgcA8wICAPcCDQAGAwAACAMoADMDAgA3AyMAXgM1AJYDCACjAxEAuANcACIEEgBABAcASQRJAJYEDgCmBAEAqQQZAMQEAADHBA4A2QQCAN8EAgDkBBwAAgUJAA0FCgAjBQAAJQUAACoFDQA5BQ8ATQUSAGIFAABkBQkAcAUDAHYFAQB6BQ0AkQUAAJMFAACbBQcApAUHALkFAQC9BQAAwAUDAMgFBQDPBQQA2wULAO4FBAD1BQ0ABQYGAA8GBwAYBgEAHAYXADUGBwA+BgAAQQYBAEQGAQBJBhAAWwYAAF0GAABfBgIAYwYDAGgGAABqBggAdAYBAHcGBQB/BgEAggYAAIQGAQCHBgMAjAYEAJIGAgCWBgMAnAYAAJ8GAQCpBgAArgYAALEGAQC2BgEAuQYAALwGAQDFBgAAywYDANQGAADYBgYA4gYQAPUGBQD9BggACAcDAA0HAQARBwAAEwcBABkHBQAiBwIALgcBADoHAAA8BwEAPwcBAEMHAABFBwAASQcAAEsHAABQBwwAXwcCAG4HAABwBwcAeQcBAHwHAACABwAAggcDAIcHAQCKBwUAlgcfALcHAQC7BwQAwQcDANcHAwDcBwgA5gcEAO0HAgDxBwUA+QcAAPsHDgAOCAEAEggAABQIAAAZCAEAHAgAAB4IAAAgCAYAKAgAACoIAAAtCAEAMQgAADMIAQA2CAAAOAgCADwIDQBLCAAATQgBAFAIAABSCAEAVQgAAFcIAQBaCAAAXAgBAF8IAwBmCAAAaggBAG4IAABxCAAAcwgAAHUIAwB6CAAAfQgIAIcIAgCMCAMAkQgAAJMIAgCYCAAAmggCAJ4IAQCkCAMAqQgBAKwIAACuCAEAsQgAALMIAQC2CAAAuAgBALsIAAC9CAEAwAgAAMIIAADFCCcA7ggYAAgJAwANCWwAewkBAIAJgAACCgYACgoCAA4KowCzCgUAuwo5APYKGQAUCwEAIgsDACcLAAApCwAAKwsBAC4LAAAwCwEASQsAAEsLAABNCwAAUwsHAF4LAABhCwIAZQsFAGwLBgB0CwUAewsAAH0LHACfCw8AsQsvAOILAAARDAkAHAwAAB4MAAAgDAIAJAwDACkMAQAuDAAAMAwHADkMAQA9DAIAQgwDAEcMAABKDAsAVwwCAFwMAABfDA8AcAwAAHMMCwCADBAAkgwCAJYMAACYDA4AqAwAALAMAACyDAEAuAwRAMwMAADODAMA1AwjAPoMAQD/DGwAbQ01AKQNAQCnDTsA5A0BAOcNCADxDQAA8w0BAPYNBAD8DQEAAQ4AAAMOAgAHDgoAEw4AABUOBAAcDgQAIg4EACgOEgA8DhEATw4AAFIOCQBfDgUAZg4YAIIOAACFDgsAkw4DAJgOAACeDgsAqw4JALgOEADSDgEA1g4CANoOAADcDgAA4g4DAPQOAAD7DgAA/Q4AAP8OAQAGDwwAGQ8CACAPAAAkDwEAKg8AADIPAQA1DwAAQw8BAEcPAABODwAAWA8BAFsPAQBfDwAAYQ8BAGkPAABrDwQAcw8GAHwPCgCIDwAAiw8BAJAPBACdDwEAoA8GALMPBwC9DwIAwQ8SANYPHgD3DwsABBACAAkQBQASEAoAHxADACQQCQAvEAIANBATAEoQDQBZEBgAdBABAHgQAgB8ECkApxAJALIQDgDCEAIAxhAKANIQAQDVEAMA2hADAN8QCQDqEAcA8xABAPYQHAAUESgAPhEGAEoRAgBPEQAAURECAFYRAABaEQcAahENAHkRAQCAEQMAhREBAIkRAgCOEQAAkBEgALQRDADDEQUAyhEHANMRIwD5EQ4ACRIPABsSAAAdEgMAJBIFAC4SDgA/EgYASBIAAEsSCQBWEgIAWxIEAGESBQBoEgAAbRIJAHgSAQB8EgQAghIBAIUSCgCREgAAlBIAAJYSCQChEgIAqRIJALQSBQC+EgAAwRIBAMsSAgDSEgAA1RIBANsSCADlEgAA5xIAAOkSAADrEhEAABMHAAkTAQAMEwUAFhMEAB4TAgAiEwEAKRMFADATAQAzEwkAPhMAAEETAwBGEwgAUBMAAFITAgBXEwAAWhMAAFwTAgBhEwIAZRMFAGwTBAByEwMAeRMCAH8TAACBEwEAhRMAAIcTBACOEw8AnxMAAKITAQClEwMAqxMEALMTJQDbEwAA3RMBAOETAADjEwEA5xMAAOkTAQDtEwAA7xMFAPgTAgD9EwAAABQAAAMUAAAFFAIACRQCAA0UCwAbFAcAJBQAACYUAAAqFAEALhQAADAUAAAyFAEANRQBADgUAQA9FAEAQBQNAFEUBQBYFAcAYhQCAGYUCQB0FAEAdxQAAHkUAQB8FAQAghQEAIgUAgCMFAAAjhQEAJQUAACWFAYAnhQEAKQUAQCnFAIAqxQBAK4UAQCxFAAAsxQAALYUAAC4FAIAvRQDAMIUBwDMFAIA0xQBANYUBgDeFAMA5BQAAOYUAADpFAAA6xQEAPEUAgD1FAAA9xQCAPsUAAD9FAcABhUIABEVEwAmFQIAKhUVAEMVAQBGFQ8AWBUAAFoVAgBfFQwAbRUAAG8VAgB0FQEAeBUBAH0VCACHFQMAjxUGAJcVCQCjFQMAqBUIALIVAAC0FQIAuRUCAMAVBQDHFRIA3BUAAN4VAQDiFQAA5BUBAOgVAADqFQEA7hUAAPAVBAD3FQQA/RUBAAAWAQAGFgoAEhYAABUWBgAeFgIAIhZhAIUWAACHFgYAkxYAAJUWAACYFgYAoRYAAKgWAACqFgAArhYAALEWAAC2FgUAwBYAAMQWAADIFgAAyhYAAM4WAADSFgAA3hYCAOIWCADsFgAA7hYBAPEWAgD4FgEA+xYEAAEXAQAJFwoAFhcAABsXAAAdFwAAIBf9AB8YAgAjGAEAJhgAACgYAgAuGAAAMhgAADYYAAA4GAAAOhgAAEAYAABCGAEARRgAAE8YUQCiGAwAsBi/AHEZAQB3GQIAfRkCAIMZCgCSGQUAmRkAAJ8ZAAChGQAAqxkBAK8ZAACxGQAAtRkAALgZAQC7GQAAvxkBANEZAADWGQIA3BkAAN4ZBQDmGSoAFRoIASAbAAAlGwEAKBsDAC8bAAAxGwMAORsIAEMbZwCsGw0AvxsBAMQbAQDHGwAAyxsAAM0bAADPGwIA0xstAAIcFgAaHA8ALRy1AOccAADvHAAA8RwBAPQcAAD2HAAA+hwAAP4cAAAAHQAABB0AAAcdAAAKHQAAER0AABQdAgAbHQYAIx0BACYdAAAoHQMAMR0AADMdAAA1HQEAOh1sAKsdAAC4HQEA3B0AAOQdAADtHQAACB4DAA0eCAAZHgAAGx4JACgeAAAuHgIAMh4AADkeAAA+HgMATx4AAFQeAABYHgAAXh4AAGAeCgByHgAAdR4AAHceAAB6HgEAgx4BAIgeAgCOHgUAlR4CAJkeAQCdHgIAoR4AAKMeAAClHgAAqh4AALAeAACzHgEAth4DALseAAC9HgEAwx4DAMoeAQDOHgAA2R4AANseQwAiHwMAKh8AACwfAAAuHwQANR8AADcfAAA5HwEAPB8AAD8fAQBEHwAARx+CAMwfAADRHwEA1B8BAFcgAQBbIAAAXSAGAGcgBQBuIAMAcyADAHkgAAB7IAEAfiAAAIAgAQCEIAEAiyAAAJIgAACUIAEAmCACAJwgAwCiIAIApyAAAKkgAACwIAEAsyACAL0gAADAIAEAwyACAMkgAgDPIAEA2SADAN8gAQDjIAIA5yADAO0gDgABIQAAByEBAA4hAAARIQUAGiEAACIhBAAxIQAAOyEAAEIhAABEIQIASCEAAEshAABQIQAAUiEAAFQhAABZIQAAXSEAAF8hAgBmIQYAcyEIAIEhAACDIQAAhyEAAI0hAACPIQQAmCEBAJshAQCeIQAAoSEIAKwhAQCvIQAAsiEBALYhAAC6IQAAwyEAAMYhAQDNIQEA0yEBANYhBADhIQIA6SEBAPAhAgD0IQQAAiIAAAQiBAAKIgUAESIAABciAwAcIgAAHiICACQiAAAmIgAAMiIAADUiAQA4IgEAOyIDAEEiBgBJIgQATyIAAFQiAABaIgAAYCIBAGYiAABqIgAAbCIAAG4iAQCRIgAAliIAAJkiAACfIgMApCIEAKsiAQC1IgAAuSIEAL8iBADHIgAAySIBAMwiAADOIgAA0CIBANQiAADWIgAA2CIDAN8iAADoIgAA6iIAAOwiAADyIgMA+yIBAP4iAAAAIwEABSMAAAcjAAANIwIAESMCABUjBwAeIwAAICMAACQjAAAqIwAALiMAADQjAAA4IwoARSMCAEojAABNIwIAWCMBAGkjAABrIwAAbiMCAHIjAwB3IwIAeyMAAH4jAACCI2EA5iMOAPgjAQD9IwwACyQAAA0kAQAQJJAAoiR+ACQlAAAnJQMAMiUCADclEABJJX0AyCUAANIlAADXJQAA2SUAANslAADhJQQA5yUCAOwlAQDwJQAA9CUAAPolAQD9JQAA/yV+AIQmAwCNJgAAkCYAAJImAACWJgEAmiYBAJ0mAAClJgAAqSYBAK8mAAC1JgAAvyYAAMYmAQDRJgMA2CYBAOgmAQDtJgAA7yYAAPYmAAD4JgEA+yYBAAEnAAAOJwAAFCcAABcnAAAaJwAAIScAACYnAAAyJwAANScBADgnAAA6JwEAQScAAEMnAQBIJxQAXicBAGUnAQBoJw0AdycEAH0nMACwJwAAsicAALQnAQC3JwEAuicGAMInNgD7JxQAEigBABYoAAAYKBQALygBADIoCAA9KAUARCgJAE8oAQBSKAAAVigAAFgoAwBdKAEAYCgFAGooEgB+KAEAgSgCAIYoAACKKBYAoigXAL4oBADHKBQA3SgGAPQoAAACKQIAGCkAAB8pCQAtKQAALykMAD0pAgBBKRIAVSkBAFgpDwBpKRkAhSkAAIcpAgCMKQoAmCkBAJspBgCjKQMAqCkCAKwpAACvKQYAtykEAL4pAgDCKQUAyikAAMwpDgDfKQEA4ykAAOUpAADqKQEA7SkAAO8pAADxKQQA9ykAAPkpAAD8KQEAACoAAAIqAQAFKgAAByoCAAsqDQAaKgAAHCoBAB8qAAAhKgEAJCoAACYqAQApKgAAKyoBAC4qAwA1KgAAOSoBAD0qAABAKgAAQioAAEQqAwBJKgAATCoIAFYqAgBbKgMAYCoAAGIqAgBnKgAAaSoCAG0qAQBzKgMAeCoBAHsqAAB9KgEAgCoAAIIqAQCFKgAAhyoBAIoqAACMKgEAjyoAAJEqAACUKhIAqCoHALIqAAC1KhEAyCoIANIqAQDVKggA3yoAAOEqAQDnKgEA6ioEAPMqAQD8KgIAAisAAAQrAAAOKwAAHSsDACUrCgAxKwAAMysIAD4r8wAzLAEANiwaAFIsAQBVLBAAaCwSAHwsAAB+LCAAoCwBAKQsAACmLAsAsywCALosAADKLAMA4CwFAOgsAADsLAEA8ywAAPUsAQD8LAYABS0AAAstCgAfLQUAJi0AACgtAwAtLQUANi0EAD0tAgBCLQAASC0EAFEtCwBeLQoAbC0CAHAtAAB0LQIAeC0DAIAtEQCVLQEAmS0BAJwtAACeLQAAoS0CAK4tAwC1LQMAui0BAL4tAQDBLTAA9C0AAPYtAAD7LQMAAS4AAAcuAQAKLgMAEi4FAB8uAgAjLgAAJi4AACsuAQAuLgIANS4AADouAwA/LgAAQi4VAFkuHQB5LgEAfC4AAH4uAACALgAAgi4AAIUuAACHLgAAiy4DAJEuAQCULgAAly4CAJ0uAQCgLgAAoi4AAKQuAACoLgAAqy4DALQuAAC7LgAAvi4BAMEuAQDOLgcA2i4EAOAuAQDmLgAA6C4AAO0uAwD3LgAA+i4DAP8uAAADLwsAEC8AABIvAAAULwQAGi8dADkvAAA7Lw8ATS8BAFEvDwBiLwEAZS8EAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPIFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNPPPKPKKGRPPNMMNNNNCNNNNNMMNNNNNNNNMMNNMMNNMMNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","limit","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","can_have_dtype","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","num_falses","num_trues","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","mul","","","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","arg_sort","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","sub","","","","sum_reduce","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","add","add_to","","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","","drop","execute","fmt","from","init","into","mul","multiply","","","rem","remainder","","","sub","subtract","","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[450,"polars_core::chunked_array::arithmetic"],[478,"polars_core::chunked_array::builder"],[586,"polars_core::chunked_array::builder::list"],[740,"polars_core::chunked_array::cast"],[768,"polars_core::chunked_array::collect"],[782,"polars_core::chunked_array::float"],[784,"polars_core::chunked_array::from_iterator_par"],[788,"polars_core::chunked_array::iterator"],[825,"polars_core::chunked_array::iterator::par"],[827,"polars_core::chunked_array::metadata"],[1113,"polars_core::chunked_array::object"],[1190,"polars_core::chunked_array::object::builder"],[1214,"polars_core::chunked_array::object::registry"],[1243,"polars_core::chunked_array::ops"],[1373,"polars_core::chunked_array::ops::arity"],[1409,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1411,"polars_core::chunked_array::ops::gather"],[1414,"polars_core::chunked_array::ops::row_encode"],[1423,"polars_core::chunked_array::ops::search_sorted"],[1452,"polars_core::chunked_array::ops::sort"],[1459,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1460,"polars_core::chunked_array::ops::sort::options"],[1537,"polars_core::chunked_array::temporal"],[1538,"polars_core::chunked_array::temporal::conversion"],[1541,"polars_core::config"],[1545,"polars_core::datatypes"],[3067,"polars_core::datatypes::categorical"],[3210,"polars_core::datatypes::categorical::revmap"],[3264,"polars_core::datatypes::categorical::string_cache"],[3283,"polars_core::datatypes::enum_"],[3301,"polars_core::datatypes::revmap"],[3307,"polars_core::datatypes::string_cache"],[3311,"polars_core::error"],[3378,"polars_core::error::PolarsError"],[3382,"polars_core::error::constants"],[3385,"polars_core::export"],[3392,"polars_core::fmt"],[3423,"polars_core::frame"],[3714,"polars_core::frame::column"],[3977,"polars_core::frame::explode"],[4005,"polars_core::frame::group_by"],[4241,"polars_core::frame::group_by::GroupByMethod"],[4242,"polars_core::frame::group_by::GroupsProxy"],[4244,"polars_core::frame::group_by::aggregations"],[4257,"polars_core::frame::group_by::expr"],[4260,"polars_core::frame::row"],[4356,"polars_core::functions"],[4358,"polars_core::hashing"],[4388,"polars_core::prelude"],[5019,"polars_core::prelude::PolarsError"],[5023,"polars_core::prelude::default_arrays"],[5029,"polars_core::prelude::list"],[5052,"polars_core::prelude::null"],[5083,"polars_core::prelude::revmap"],[5089,"polars_core::prelude::slice"],[5092,"polars_core::prelude::string_cache"],[5096,"polars_core::prelude::utf8"],[5100,"polars_core::random"],[5101,"polars_core::scalar"],[5142,"polars_core::scalar::reduce"],[5143,"polars_core::schema"],[5167,"polars_core::series"],[5626,"polars_core::series::amortized_iter"],[5650,"polars_core::series::arithmetic"],[5701,"polars_core::series::arithmetic::checked"],[5709,"polars_core::series::ops"],[5735,"polars_core::utils"],[5944,"polars_core::utils::flatten"],[5949,"dyn_clone::sealed"],[5950,"num_traits"],[5951,"num_traits::cast"],[5952,"polars_error"],[5953,"polars_core::series::arithmetic::borrowed"],[5954,"polars_core::frame::group_by::proxy"],[5955,"core::option"],[5956,"core::iter::traits::iterator"],[5957,"polars_utils::pl_str"],[5958,"core::ops::function"],[5959,"core::marker"],[5960,"alloc::string"],[5961,"polars_core::datatypes::dtype"],[5962,"polars_arrow::array::binview::view"],[5963,"polars_core::datatypes::aliases"],[5964,"polars_core::chunked_array::metadata::md_trait"],[5965,"alloc::boxed"],[5966,"polars_core::series::arithmetic::borrowed::checked"],[5967,"polars_arrow::array"],[5968,"alloc::vec"],[5969,"compact_str"],[5970,"core::iter::traits::double_ended"],[5971,"core::fmt"],[5972,"core::iter::traits::collect"],[5973,"polars_arrow::bitmap::immutable"],[5974,"rayon::iter"],[5975,"polars_arrow::trusted_len"],[5976,"polars_core::datatypes::any_value"],[5977,"polars_utils::index"],[5978,"std::sync::rwlock"],[5979,"polars_core::chunked_array::logical::decimal"],[5980,"core::iter::traits::exact_size"],[5981,"polars_core::series::series_trait"],[5982,"core::slice::iter"],[5983,"core::iter::adapters::map"],[5984,"core::convert"],[5985,"polars_core::chunked_array::metadata::guard"],[5986,"polars_core::chunked_array::metadata::interior_mutable"],[5987,"alloc::sync"],[5988,"core::ops::range"],[5989,"polars_core::datatypes::field"],[5990,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5991,"polars_core::chunked_array::ops::rolling_window"],[5992,"polars_utils::aliases"],[5993,"polars_utils::hashing"],[5994,"ndarray::aliases"],[5995,"either"],[5996,"core::result"],[5997,"core::any"],[5998,"polars_core::chunked_array::arithmetic::numeric"],[5999,"polars_core::chunked_array::builder::string"],[6000,"polars_arrow::array::binview"],[6001,"polars_core::chunked_array::builder::boolean"],[6002,"polars_core::chunked_array::builder::null"],[6003,"polars_core::chunked_array::builder::primitive"],[6004,"core::clone"],[6005,"polars_core::chunked_array::builder::list::anonymous"],[6006,"polars_core::chunked_array::builder::list::boolean"],[6007,"polars_core::chunked_array::builder::list::primitive"],[6008,"polars_core::chunked_array::builder::list::binary"],[6009,"polars_core::chunked_array::builder::list::null"],[6010,"core::hash"],[6011,"polars_arrow::array::boolean"],[6012,"polars_core::chunked_array::metadata::env"],[6013,"polars_core::chunked_array::metadata::collect"],[6014,"bitflags::iter"],[6015,"std::fs"],[6016,"std::sync::mutex"],[6017,"polars_arrow::datatypes"],[6018,"polars_arrow::bitmap::utils::iterator"],[6019,"polars_arrow::bitmap::utils::zip_validity"],[6020,"polars_arrow::offset"],[6021,"polars_arrow::array::static_array"],[6022,"core::error"],[6023,"polars_arrow::array::primitive"],[6024,"polars_row::row"],[6025,"polars_arrow::array::binary"],[6026,"polars_arrow::legacy::array::slice"],[6027,"chrono::naive::datetime"],[6028,"alloc::borrow"],[6029,"polars_arrow::array::static_array_collect"],[6030,"bytemuck::zeroable"],[6031,"polars_core::chunked_array::logical::categorical"],[6032,"polars_core::chunked_array::logical::categorical::merge"],[6033,"polars_core::chunked_array::logical"],[6034,"polars_core::datatypes::time_unit"],[6035,"polars_arrow::datatypes::reshape"],[6036,"core::cmp"],[6037,"polars_arrow::types"],[6038,"polars_arrow::datatypes::physical_type"],[6039,"core::borrow"],[6040,"polars_arrow::pushable"],[6041,"polars_core::datatypes::into_scalar"],[6042,"polars_core::chunked_array::logical::categorical::builder"],[6043,"polars_core::chunked_array::logical::categorical::revmap"],[6044,"polars_core::chunked_array::logical::categorical::string_cache"],[6045,"polars_core::chunked_array::logical::enum_"],[6046,"polars_error::warning"],[6047,"polars_arrow::datatypes::schema"],[6048,"polars_arrow::record_batch"],[6049,"polars_core::series::from"],[6050,"polars_core::chunked_array::ndarray"],[6051,"polars_arrow::array::struct_"],[6052,"polars_core::frame::column::scalar"],[6053,"polars_core::series::iterator"],[6054,"polars_utils::idx_vec"],[6055,"rayon::iter::plumbing"],[6056,"polars_core::frame::group_by::into_groups"],[6057,"core::iter::adapters::copied"],[6058,"core::iter::adapters::zip"],[6059,"polars_arrow::legacy::kernels::rolling"],[6060,"polars_utils::float"],[6061,"polars_arrow::types::native"],[6062,"polars_core::frame::group_by::aggregations::agg_list"],[6063,"polars_core::frame::row::av_buffer"],[6064,"polars_core::hashing::identity"],[6065,"polars_core::hashing::vector_hasher"],[6066,"core::alloc"],[6067,"std::os::fd::owned"],[6068,"std::os::fd::raw"],[6069,"std::ffi::os_str"],[6070,"std::path"],[6071,"core::mem::maybe_uninit"],[6072,"polars_arrow::legacy::kernels::time"],[6073,"core::default"],[6074,"core::ffi::c_str"],[6075,"polars_arrow::scalar"],[6076,"std::io::error"],[6077,"regex::error"],[6078,"alloc::collections"],[6079,"simdutf8::basic"],[6080,"alloc::ffi::c_str"],[6081,"polars_arrow::legacy::array::default_arrays"],[6082,"polars_arrow::buffer::immutable"],[6083,"polars_arrow::array::list"],[6084,"polars_core::named_from"],[6085,"polars_core::chunked_array::ops::aggregate"],[6086,"polars_core::chunked_array::ops::aggregate::quantile"],[6087,"polars_arrow::legacy::index"],[6088,"core::pin"],[6089,"core::io::borrowed_buf"],[6090,"std::io"],[6091,"polars_core::chunked_array::ops::aggregate::var"],[6092,"alloc::collections::btree::map"],[6093,"polars_arrow::legacy::array::list"],[6094,"polars_arrow::legacy::array::null"],[6095,"polars_arrow::bitmap::mutable"],[6096,"polars_arrow::array::utf8"],[6097,"polars_schema::schema"],[6098,"alloc::rc"],[6099,"polars_core::series::arithmetic::list_borrowed"],[6100,"polars_core::utils::supertype"],[6101,"polars_arrow::legacy::utils"],[6102,"polars_arrow::legacy::trusted_len::rev"],[6103,"core::iter::sources::repeat"],[6104,"core::iter::adapters::take"],[6105,"polars_core::chunked_array::object::extension"],[6106,"polars_error::constants"],[6107,"polars_core::frame::horizontal"],[6108,"polars_arrow::legacy::prelude"],[6109,"polars_arrow::legacy::array"],[6110,"polars_arrow::legacy::array::utf8"],[6111,"polars_core::utils::any_value"],[6112,"polars_core::utils::schema"],[6113,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kj000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Ff00000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGd0Ib`3L`22````````42110Lb4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541Fb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf0000000000000000000000````AEj00AEl00000001```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CEd4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHn`AI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ```````````````````````````````````````````````AKb00`0`00000000000000000`00000`````AKd0````EfEl101010101010101010101011001011001010101010101010221010101010101010010010````````AMl`Cb``````HnE`ADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEfCEh````AOj``8``654``654``654``654``4`777444BCf765``4``5AOlAN`1010A`:98`:9`:``;3;```````````B@h``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMj8ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlEbJdGh0Db00En00HnjJbLhMhM`MdCnD`DlDfAnEb?>=AEhGh0220020DbEn344AKnAL`43243232664325643253432AK`54305436ALb0ALd06HnE`MjALfAJb><<<<<<AMhCEjBnjJbIdAMj;AMl;AMn;AN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhCEjBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlE``HnAMf012EbGhDbEnAK`5Jd54321`JbLhMhM`MdCnD`AMhAMjHnAMlE`AMnMjAN`ANbANd?>ANfANh?>=<ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOl3MjB@`0005E`400`HnAMl26AMh0CEjBnjJbIdAMj879AMn<AN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMh0CEjBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlJdjJbLhMhM`MdCnD`AMhCEjBn:9IdAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlE`0AMn3AN`;:985EbGhDb0En0321100997766558844??>>==<<3AMh3121AEhAMd6431AMj==;::9<88AOhAOj0ADjAOl;7CEjBnjJbId9Hn00000AMlE`000AMnMj00AN`0ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADj00AOlE`Eb000GhDb0En0AEh32104432211AK`01432154433225432143214AJb00654312065431260;:JdAMf08765341008765348CbjJbIdANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfEbAEh0AOj0HnBAfAJb5DbAK`7Gh2En2813300133006AMlE`MjAN`;ADjAOl<<4AMhCEjBnjJbIdAMjHn=<AMn<;ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlEbE`3AMhCEjBnjJbIdAMjHnAMl9AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhBAh0EbGhDbEnAK`AEhBAjJd8HnE`0010000101000010=101010=0001000010=AJb019887798877``1AMl2:8:98:AKnAL`10`<:<;:<6jJbLhMhM`MdCnD`DbEnMj0CEfCEhBBn55554444AEh04AOhAOj02EbGh:9AK`555AMhAMn3343==<<43==<<33404=4=HnAN`83Jd4AKnAL`1089jJbLhMhM`MdCnD`EbGhDbEnAK`AEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbLhMhM`MdCnD`Gh0EnEb0Db022E`MjAN`203ADj505AMhAMjHnAMl7AMn76ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlE`2JdAMhHn3AN`7En2Eb0ALb0ALd0B@`00067CEjBnjJbIdAMj<AMlE`AMnMj?ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOh0AOjADjAOlAMhCEjBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlHnE`10AN`5EbAMhCEjBnjJbIdAMj:AMl:AMnMj;ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOl1GhDbEnAEhAJb0E`1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AK`>Gh:98765432<;DbEn3AEhAMhCEjBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdLhMhANfANhM`MdCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlCEfCEhBBnEhAJbHnEb`````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CElCEn10```````````BDh0000000000`0`````00`````00000BEb`0BE`11``0``01BCl00000000000000000000BFfBFh34210342222342342342`222421034210342222103422222222224222442`22222223422103422222222222222222`222422222222222222103422103421022222222222222222222222210222222222222222222`2222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Ej0`0BGj11111111111111111111111011110111111111111101010101011101010111010111111010101111111111111101011101111111110111111110101BDn1222112222222211222222222222222121212222222222222222122122212222222222122222222122221221222222222221222222122222222221222222212221222222`BH`00000000000000000000000000`BHf0``0``````BHnAl`2`22222222210`222BHb1BEj40`1023BIhBHjBHh4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BIb04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CF`CFb0``````````BJdBJf0`BJh0BJjBJl``101010101010`10101010BEh211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BJn000000000000BK`000111111`````````BGd````````````AKj00`0Bh0BObCFdN`Ah6```BCd`326```````6```4BCf`43``````14343``43`7`5BLh````381``````BIn```71`````99`99``9``9`9``0``8OfBLbLdNb>B@l:5BLdBLf84444????4?44AKjBh08766BOb6BGd6N`<65=43;:928170<65=`98BL`04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@`0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMd<7766>=<<<;4:3?98BLh<8888877777??>==================6<5;4BIn;:1BNhBNlBNn;;;;;;;;LdCFf0000111==<=BOd222Fn3?3=B@l=9Of55`AKjBh2BLb8BObNbBGd7N`BInBLdBLfBLh;8:9;8Ld876=5432100000:9<=0<0BEf1`1``1BOn0C@`B@l6;2204C@bC@d6266666666666`OfBLbBh999````;7799699999`9`AKd0:CA`3`;994243;NbBGd9N`BInBLdBLfBLhAKj:LdB@`0002<>=11BOb:9B@l987654>OfBLb53=<2;:987C@b666666667Bh77803275?>4=<;:97`CA`914386NbBGd7N`BInBLdBLfBLh?66<AKjLd:::0CElCEn10```BNhBNlBNn`CAj000000000000000000000`CAn00000000000000000000000000000`BCdBCf10``AKd0``````CFhCFj``Kn0000000000000000000000000000000`0000000`CC`0`````BDlCBl101012101010101Jn0``00```BGl11````01AfBOj0111111`0010000`10001001001111111111111111CCd342034211122221122121122421424222203422034222222034211114222222222442222221121114222034222222222222222222222222222222222222222221221111111122222214222222`2034203422220BFl322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`22332222233323325223333222331233222322223333333322332222333533333333333145333333333314533333333333331453333322322222145333223``Cj000000000000000000000CCl00`0```CCh1110CCjAj033`33333210033333321002100210033333``BL`Fh0100CCn0`00000000000000000000000CD`0``````````0CDbCDf```````211````22222222CDnAKf43210432CDd543543543``CDh06``6653322654322654632654``636533665565`6666653265546666226CDl337333````4764376577743765375BG`6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cb{}{{Bl{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{B`}{{Cd{B`}}}}Ch}}{{{f{{l{j}}}}c}{{l{j}}}{{Cl{Cj}{{Cd{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{{l{Cn}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{c}}}}e}DbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{Cf}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}}{{l{e}}}A`Cb}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{{f{{Dj{Dh}}}}}{{Cd{{f{{Dj{Dh}}}}}}}}}}{{{f{Bj{l{c}}}}e}bA`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Dl}}}}c}{{l{Dl}}}{{Cl{{f{Dn}}}{{Cd{{f{Dn}}}}}}}}{{{f{{l{c}}}}E`g}{{l{i}}}Cb{}{{Cl{}{{Cd{e}}}}}Cb}{{{f{{l{j}}}}{f{Cf}}}{{Ah{Eb}}}}{{{f{{l{c}}}}g{f{Bj{Dj{e}}}}}bA`{}{{Cf{B`{f{e}}}{{Cd{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Dl}}}}c}{{l{Dl}}}{{Cl{Ed{f{Dn}}}{{Cd{Ed}}}}Ch}}{{{f{{l{c}}}}Ef}EhA`}{{{f{{l{c}}}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}A`}{{{f{{l{c}}}}}{{Ah{Eh}}}A`}`{{{f{{l{Dl}}}}}En}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eF`{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fd{Fb}}}Cb}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cf{}{{Cd{}}}}Ch}A`}{{{f{{l{c}}}}{f{E`}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{E`}}Ff}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fh}{{{f{{l{c}}}}e}{{Ah{Af}}}FhAd}{{{f{{l{c}}}}}FjCb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}Cb}{{{f{{l{c}}}}}{{f{{G`{Fn}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{G`{Fn}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Cb}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{CbA`}}`{fGb}{{{f{{l{c}}}}}{{Ah{{f{Dj}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gd}bCb}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gd}bCbCb}{{{f{{l{c}}}}}{{`{{Gf{}{{Bb{{f{Dj}}}}}}}}}A`}{{}{{l{c}}}Cb}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bCb}{Flb}0{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gh}}}{{Ah{{l{c}}}}}{{Cb{}{{Gj{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bCb{{Cl{B`}}}}{{{f{{l{j}}}}c}b{{Cl{{B`{Cj}}}}}}{cc{}}{c{{l{e}}}H`{{Cb{}{{Hb{c}}}}}}1{{Bhc}{{l{e}}}Hd{{Cb{}{{Hb{}}}}Cb}}{{{f{{l{c}}}}e}{{l{c}}}{{Cb{}{{Hb{}}}}Cb}Hd}{{Bh{G`{Fn}}}{{l{c}}}Cb}{{Bh{G`{Fn}}E`}{{l{c}}}Cb}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Hd{}{{Bb{{Hh{G`{B`{Hf}}}}}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}13{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dj}}}{{l{c}}}A`}{{Bh{f{{Dj{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhG`}{{l{c}}}A`}{{BhG`{B`{Hf}}}{{l{c}}}A`}{{BhFl}{{l{c}}}A`}0{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{BhFl{f{E`}}}Eb}{{{f{{l{c}}}}Fl}B`Cb}{{{f{{l{c}}}}Fl}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fl}HnA`}{{{f{{l{j}}}}Fl}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}Cb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}IbCb}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`Cb}0{{{f{{l{{Id{c}}}}}}Fl}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FldFl}AlF`}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}108{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{}Fl}0{{FlIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{E`}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}Cb}{{}c{}}0{{}Ej}{{{l{Jb}}{B`{Fl}}Fl}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fl}}Fl}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GfHl}}}A`}{{{l{c}}}AfCb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}GhJl}000{{{f{{l{c}}}}}GhCb}02{{{f{{l{c}}}}}JnCb}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}Cb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cb}{{{f{{l{c}}}}}{{Kf{{Kb{Fn}}{Kd{{f{Fn}}}{{Cd{{B`{{f{Hf}}}}}}}}}}}Cb}`{{fc}Gb{{Kh{Dn}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}{{{f{{l{c}}}}}{{Kj{c}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FlCb}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKl}}00{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}10{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{Df}}}}}{{B`{{f{{Dj{Dh}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}F`}{{{f{{l{c}}}}}KnF`}{{{f{Bj{l{c}}}}{In{c}}}bCb}`{{{f{{l{c}}}}}{{L`{c}}}Cb}{{{f{{l{c}}}}}{{f{{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{B`{{Lf{Fb}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{Ld{{Lb{c}}}}}Cb}<=;{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{Dj}}}{{l{c}}}A`}{{Bh{f{{Dj{Dh}}}}FlFl}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FlCb}{{{f{{l{c}}}}}{{Ah{Fl}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}Cb}{{Bhc}{{l{D`}}}{{Kh{{Dj{{B`{n}}}}}}}}{{Bhc}{{l{Lh}}}{{Kh{{Dj{{B`{Lj}}}}}}}}{{Bh{Ln{Ll}}}{{l{M`}}}}{{Bh{Ln{Mb}}}{{l{Md}}}}{{Bh{Ln{Lj}}}{{l{Lh}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dj{{B`{Ij}}}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dj{{B`{Mf}}}}}}}}{{Bhc}{{l{Md}}}{{Kh{{Dj{{B`{Mb}}}}}}}}{{Bhc}{{l{Dl}}}{{Kh{{Dj{Dd}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dj{{G`{Dh}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dj{d}}}}}}{{Bhc}{{l{Lh}}}{{Kh{{Dj{Lj}}}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dj{Il}}}}}}{{Bhc}{{l{M`}}}{{Kh{{Dj{{B`{Ll}}}}}}}}{{Bhc}{{l{M`}}}{{Kh{{Dj{Ll}}}}}}{{Bhc}{{l{Md}}}{{Kh{{Dj{Mb}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dj{Mf}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dj{Ij}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dj{n}}}}}}{{Bhc}{{l{Dl}}}{{Kh{{Dj{{B`{Dd}}}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dj{{B`{{G`{Dh}}}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dj{{B`{d}}}}}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dj{{B`{Il}}}}}}}}{{Bh{Ln{Il}}}{{l{Mh}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FlFl}{{l{c}}}A`}{{Bh{G`{c}}}{{l{{Id{c}}}}}Ih}{{Bh{G`{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhG`}{{l{c}}}A`}{{{Ld{Mj}}{G`{Fn}}I`I`}{{l{c}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}10{{{f{{l{c}}}}}FlCb}{{{f{{l{An}}}}}Fl}0``{{{f{{l{Dl}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dl}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}F`}{{{f{{l{c}}}}nN`}{{Ah{Kn}}}F`}{{BhFln}{{Ah{{l{An}}}}}}{{BhFlnn}{{Ah{{l{c}}}}}A`}{{BhFl}{{l{c}}}A`}{{BhFlnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hf}}}Cb}{{{f{{l{c}}}}}{{f{Mj}}}Cb}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bCb}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fle}{{Ah{{l{c}}}}}Jl{{Cl{{f{Bj{l{c}}}}}{{Cd{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}Fldd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cf{B`}{{Cd{B`}}}}}}{{{f{{l{c}}}}{f{Gh}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bCb}{{{f{Bj{l{j}}}}E`}b}{{{f{Bj{l{c}}}}I`}bCb}{{{f{Bj{l{c}}}}Jn}bCb}{{{f{{l{c}}}}Mb}{{l{c}}}A`}{{{f{{l{c}}}}MbB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}MbFl}{{l{c}}}Cb}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ef}{{l{c}}}A`}{{{f{{l{c}}}}Mb}{{Hh{{l{c}}{l{c}}}}}Cb}0{{{f{{l{c}}}}Dh}{{B`{n}}}A`}{{{f{{l{c}}}}Dh}KnF`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KnA`}{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cb{{Kh{{Dj{I`}}}}Nd}}{{{f{{l{c}}}}{f{Eh}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}{{Kh{{Dj{I`}}}}Nd}}{{{f{{l{c}}}}{f{Eh}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}}`{{{f{{l{c}}}}dNh}{{G`{{G`{Nj}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dl}}}}Fl}{{Ah{Af}}}}{{{f{Bj{l{j}}}}E`}b}{{{f{{l{j}}}}}{{Ah{Nl}}}}{{{f{{l{c}}}}}{{Ah{Nn}}}A`}{fc{}}{{{f{{l{Df}}}}}Db}{{{f{{l{c}}}}}{{G`{B`}}}A`}{{{f{{l{c}}}}}{{O`{G`{G`{B`}}}}}A`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{{{f{{l{c}}}}g}{{Ob{Dbe}}}Cb{}{{Cl{{f{BjDd}}}{{Cd{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{Cb{}{{Hb{c}}}}Cb}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}Fl}{}Cb}{{{f{{l{c}}}}Dh}{{B`{n}}}A`}{{{f{{l{c}}}}Dh}KnF`}{{}c{}}0{{Bhc}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{e}}}}c}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{c}}}}{G`{Fn}}}{{l{c}}}Cb}{{{l{c}}Bh}{{l{c}}}Cb}{{{f{{Dj{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}Cb}{{{f{{l{c}}}}}eA`{}}{{{l{c}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}3201{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}542310543276542310452310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cb{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kh{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kh{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{Flb}000{A@b{{l{c}}}Cb}{{{A@d{{Dj{Dh}}}}}En}{{{A@d{Dn}}}Db}{AA`Db}{AAbEn}{A@hGh}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dj{c}}}}}AAd{}}{{Bh{f{{Dj{{B`{c}}}}}}}AAd{}}{{}Fl}000{{}c{}}000`{{BhFl}{{A@d{c}}}{A@fNd}}{{BhFl}A@h}{{BhFl}A@j}{{BhFl}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dj}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dj}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dn}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dj{Dh}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dn}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dj{Dh}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fl{{f{c}}}{}}000000{Fl{{f{Bjc}}}{}}000000{Flb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}Eb}{{{f{BjAAh}}}Eb}{{{f{BjABd}}}Eb}{{{f{BjAAn}}}Eb}{cc{}}000000{{{f{E`}}FlFlBh}{{Fd{AAn}}}}{{}Fl}000000{{{f{BjAB`}}}Fn}{{{f{BjABb}}}Fn}{{{f{BjAAj}}}Fn}{{{f{Bj{AAl{c}}}}}FnA`}{{{f{BjAAn}}}Fn}{{}c{}}000000{{BhFl{B`{E`}}}AAf}{{BhFl{B`{E`}}}AAh}{{BhFlFl}AB`}{{BhFlFl}ABb}{{BhFlFl}AAj}{{BhFl}ABd}{{BhFlFlE`}{{AAl{c}}}A`}{{BhFlFlE`E`}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ff}}}Ff}{{f{f{Bjc}}}b{}}{fb}{{}Ff}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Ff}}{f{Ff}}}d}{{f{f{c}}}d{}}0{{{f{Ff}}{f{BjGl}}}Gn}{cc{}}{{{f{Ff}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{Ff}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}Cb}{{ABj{f{{l{c}}}}}{{l{c}}}Cb}10{{ABjBhE`}{{l{c}}}Cb}0{{ABhBh}{{Ob{{l{c}}e}}}Cb{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}Cb{}}10{{ABjBhE`}{{Ob{{l{c}}e}}}Cb{}}0`{ABlABl}``{{ABnBhE`}e{}{{AC`{c}}}}{{eBhE`}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{cc{}}0{{}Fl}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gf{}}`{{{f{ACd}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fl{B`{Fl}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gd}{{}Ib}{{GdGd}Gd}{{IbIb}Ib}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}3210{{{f{Gd}}}Lj}0{{{f{Ib}}}Dh}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Lb{c}}}}}{{Fd{Fb}}}Cb}{{{f{{Lb{c}}}}}{{Lb{c}}}Cb}{{{f{{In{c}}}}}{{In{c}}}Cb}{{{f{ACh}}}ACh}{{{f{Gd}}}Gd}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GdGd}{IbIb}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}{{Lb{c}}}Cb}{{}{{In{c}}}Cb}{{}Gd}{{}Ib}{{{f{{L`{c}}}}}{{f{e}}}Cb{}}{Fl{{f{c}}}{}}000000{Fl{{f{Bjc}}}{}}000000{{GdGd}Gd}{{IbIb}Ib}{{}d}{{{f{Fb}}}{{B`{I`}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{In{c}}I`}{{In{c}}}Cb}{{{In{c}}{B`{I`}}}{{In{c}}}Cb}{Flb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGd}}c}b{{Hd{}{{Bb{Gd}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}Cb}{{{In{c}}{B`{d}}}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{e}}}CbCb}{{{In{c}}Ib}{{In{c}}}Cb}{{{In{c}}{B`{Ib}}}{{In{c}}}Cb}{{{f{{In{c}}}}{f{BjGl}}}GnCb}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gd}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Lj{{B`{Gd}}}}{Dh{{B`{Ib}}}}{LjGd}0{DhIb}010{cGd{{Hd{}{{Bb{Gd}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dn}}}{{B`{Gd}}}}{{{f{Dn}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{f{{In{c}}}}}dCb}{{{f{Ib}}}d}{{{f{Fb}}}Ib}{{{f{{In{c}}}}}IbCb}0{{{f{{In{c}}}}}{{B`{f}}}Cb}0{{{f{Bj{Lb{c}}}}}{{f{Bj{In{c}}}}}Cb}{{{f{Ib}}}Jn}{{}Fl}000000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{GdGd}Gd}{{IbIb}Ib}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gdc{}}{Ibc{}}{{{f{Gd}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dCb}21{{{f{{In{c}}}}}JnCb}111{{{f{Gd}}}{{ACl{Gd}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gd}}}{{ACn{Gd}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{Fb}}}{{B`{Kn}}}}{{{f{{In{c}}}}}{{B`{Kn}}}Cb}{{{In{c}}}{{In{c}}}Cb}{{{In{c}}B`}{{In{c}}}Cb}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}Cb}4231{{{In{c}}}{{Lb{c}}}Cb}{GdGd}{IbIb}{{{f{{Lb{c}}}}}{{Lf{{In{c}}}}}Cb}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{{f{BjGd}}Gdd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bCb}{{{f{Bj{In{c}}}}d}bCb}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bCb}{{{f{Bj{In{c}}}}B`}bCb}033{{{f{Bj{In{c}}}}Jn}bCb}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}Cb}{{{In{c}}{B`{Jn}}}{{In{c}}}Cb}{{GdGd}Gd}{{IbIb}Ib}>=10{{{Lb{c}}}{{In{c}}}Cb}{fc{}}0000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Lb{c}}}}}{{B`{{Lf{{In{c}}}}}}}Cb}{{{f{{Lb{c}}}}}{{B`{{J`{{In{c}}}}}}}Cb}{fOd}000000:9{{{f{{Lb{c}}}}}{{f{{ADf{Fb}}}}}Cb}{{}c{}}000000{ACjACj}0{{{f{{Lb{c}}}}}{{J`{{In{c}}}}}Cb}````{{fh}b}{{{f{{ADh{c}}}}Fl}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fl}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{{{G`{c}}}{{ADh{c}}}Ih}{cc{}}{{FlADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fl}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fl}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fl}dIh}0{{fFl}d}{{{f{{ADh{c}}}}}{{AEd{{f{c}}{AE`{c}}AEb}}}Ih}{{{f{{ADh{c}}}}}{{AEd{egAEb}}}Ih{}{}}{{{f{{ADh{c}}}}}FlIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FlFl}bIh}{{fFlFl}c{}}01{{{f{{ADh{c}}}}Fl}{{Hh{{Fd{H`}}{Fd{H`}}}}}Ih}0{{{f{If}}}{{Fd{If}}}}{{{f{{ADh{c}}}}}{{Fd{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dn}}}}{{}{{f{Dn}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fl}{{f{c}}}Ih}{{{f{{ADh{c}}}}Fl}eIh{}}1{{{f{{ADh{c}}}}}{{AE`{c}}}Ih}{{{f{{ADh{c}}}}}eIh{}}{{}c{}}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fd{H`}}}Ih}1`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{{f{{AEf{c}}}}BhFlFl}{{Fd{AAn}}}Ih}{{}Fl}{{}c{}}{{BhFl}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{{f{AEj}}BhFlFl}{{Fd{AAn}}}}{{BhFl}{{Fd{AEj}}}}{{}AEn}{{}ADj}{{}Fl}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{AFh}}{f{Cf}}}AFh}{{{f{AFh}}{f{Cf}}}{{l{c}}}Cb}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dj{g}}}}}b{}{}{}{{Cf{{B`{e}}{f{g}}}{{Cd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{e}{{Cd{c}}}}Ch}}{{{f{AFj}}Ef}Eh}{{{f{AFj}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AFl}}}{{Ah{Eh}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{E`}}}{{Ah{Af}}}}0{{{f{AFn}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Mb}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gh}}}{{Ah{{l{c}}}}}Cb}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFl}AGl{}}{{BhFl}AGn}`{{{f{AH`}}Fl}{{Ah{Hn}}}}{{{f{AH`}}Fl}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gh}}}}{{{f{AHf}}}{{Ah{Gh}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fl}}}}{{{f{AHj}}FlFl}{{l{c}}}Cb}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Mb}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cf}}Nb}{{Ah{Af}}}}`{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gh}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Mb}{{l{c}}}Cb}{{{f{AId}}Mbc}{{l{e}}}{}Cb}`{{{f{AFj}}d}{{l{c}}}Cb}{{{f{AFj}}Ef}{{l{c}}}Cb}{{{f{AIf}}Dh}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{G`{{f{{Dj{Dh}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cb}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CbCb{{Cf{ff}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}Cb}{{{l{c}}{l{e}}gik}{{l{m}}}CbCb{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CbCb{{AJ`{B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}g}bCbCb{{Cl{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DbCbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCb{}{{Cl{}{{Cd{g}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCb{H`AJb}{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CbCbH`{{Cl{}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCb{}{}{{Cl{B`B`}{{Cd{{Ob{{B`{g}}i}}}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CbCbCb{{AJd{B`B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}CbCbAJf{{Cl{ff}{{Cd{{Ob{{Fd{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}CbCbCb{}{}{{Cl{B`B`B`}{{Cd{{Ob{{B`{i}}k}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{B`}{{Cd{{Ob{{B`{e}}g}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{H`AJb}AJf{{Cl{f}{{Cd{{Ob{eg}}}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cb{{AJh{B`}}}Cb}{{{f{{l{c}}}}e}{{l{g}}}CbAJhCb}{{{f{{l{c}}}}g}{{l{i}}}CbH`{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}CbH`{{Cl{}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cb{H`AJb}{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FlA`}0{{JnJn}Jn}{{{f{Eh}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}{{{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{AJl}}}}{{{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{{AJn{Mb}}}}}}{{Bh{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{AK`}}}}{{Bh{f{{Dj{Af}}}}}{{Ah{AK`}}}}{{{f{Af}}}{{Ah{Fn}}}}{{{f{{Dj{Af}}}}}{{Ah{AJl}}}}{{{f{{Dj{Af}}}}}{{Ah{AK`}}}}00````{{fh}b}{{{f{{l{c}}}}eAKbd}{{G`{I`}}}Cb{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AKb}}}AKb}{{f{f{Bjc}}}b{}}{fb}{{}AKb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AKb}}{f{AKb}}}d}{{f{f{c}}}d{}}0{{{f{AKb}}{f{BjGl}}}Gn}{cc{}}{{{f{AKb}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{{Dj{f}}}}cI`e}{{G`{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cf{fFlf}{{Cd{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fl{f{Bj{G`{d}}}}}b}```{{{f{AKd}}FlFl}AKd}0{{Fl{f{{Dj{Ej}}}}{f{BjEl}}}{{Ah{{AKf{Eh}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ef}}}Ef}{{{f{El}}}El}{{f{f{Bjc}}}b{}}0{fb}0{{}Ef}{{}El}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0``{Flb}0{{{f{Ef}}{f{Ef}}}d}{{{f{El}}{f{El}}}d}{{f{f{c}}}d{}}000{{{f{Ef}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{cc{}}{{{f{El}}}Ef}1{{{f{Ef}}}El}{{{f{Ef}}{f{Bjc}}}bABf}{{{f{El}}{f{Bjc}}}bABf}{{}Fl}0{{}c{}}0``````{{}Ef}{{}El}``{{{f{AKd}}FlFl}AKd}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Efd}Ef}{{Eld}El}1010{{Elc}El{{Hd{}{{Bb{d}}}}}}210{EfEf}{ElEl}`{AKhMb}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Eb}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{GhGh}c{}}{{{f{Gh}}{f{Gh}}}c{}}{{DbDb}c{}}{{{f{Db}}{f{Db}}}c{}}{{{f{Db}}{f{Dn}}}c{}}{{EnEn}c{}}{{{f{En}}{f{En}}}c{}}{{{f{En}}{f{{Dj{Dh}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}{f{Af}}}{{Ah{Af}}}}{{{f{En}}{f{Af}}}{{Ah{Af}}}}{{{f{Gh}}{f{Af}}}{{Ah{Af}}}}{{{f{Eb}}{f{Al}}}Af}{{{f{Gh}}{f{Al}}}Af}{{{f{Db}}{f{Al}}}Af}{{{f{En}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gh}}}d}{{{f{Gh}}}{{B`{d}}}}{{{f{Eb}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Eb}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Eb}}c}Eb{{Cf{{B`{Af}}}{{Cd{{B`{Af}}}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}Ch}}{{{f{Db}}c}Db{{Cf{{B`{{f{Dn}}}}}{{Cd{{B`{{AKl{Dn}}}}}}}}Ch}}{{{f{En}}c}En{{Cf{{B`{{f{{Dj{Dh}}}}}}}{{Cd{{B`{{AKl{{Dj{Dh}}}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{B`{{f{c}}}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{Eb}}c}Eb{{Cl{Cj}{{Cd{Af}}}}}}{{{f{Eb}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{AKn}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{AL`}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Gh}}{f{Cf}}}Gh}{{{f{Db}}{f{Cf}}}Db}{{{f{En}}{f{Cf}}}En}{{{f{Gh}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}{f{Cf}}}{{l{c}}}Cb}{{{f{En}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}c}Db{{Cl{{f{Dn}}}{{Cd{{f{Dn}}}}}}}}{{{f{En}}c}En{{Cl{{f{{Dj{Dh}}}}}{{Cd{{f{{Dj{Dh}}}}}}}}}}{{{f{Eb}}{f{Cf}}}{{Ah{Eb}}}}{{{f{Eb}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{Af}}{f{c}}}{{Cd{c}}}}}}{{{f{Gh}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{d}}{f{c}}}{{Cd{c}}}}}}{{{f{Db}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{{f{Dn}}}}{f{c}}}{{Cd{c}}}}}}{{{f{En}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{{f{{Dj{Dh}}}}}}{f{c}}}{{Cd{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dj{e}}}}}bIh{}{{Cf{{B`{{f{c}}}}{f{e}}}{{Cd{e}}}}}}{{{f{Eb}}c}Eb{{Cf{Af}{{Cd{Af}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{d}{{Cd{d}}}}Ch}}{{{f{Db}}c}Db{{Cf{{f{Dn}}}{{Cd{{AKl{Dn}}}}}}Ch}}{{{f{En}}c}En{{Cf{{f{{Dj{Dh}}}}}{{Cd{{AKl{{Dj{Dh}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{f{c}}}{{Cd{c}}}}Ch}}{{{f{Db}}c}Db{{Cl{Ed{f{Dn}}}{{Cd{Ed}}}}Ch}}{{{f{Gh}}Ef}Eh}{{{f{Db}}Ef}Eh}{{{f{En}}Ef}Eh}{{{f{AK`}}Ef}Eh}{{{f{Gh}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Db}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{En}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AK`}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Gh}}}{{Ah{Eh}}}}{{{f{Db}}}{{Ah{Eh}}}}{{{f{En}}}{{Ah{Eh}}}}{{{f{{AEh{c}}}}}{{Ah{Eh}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{Db}}}En}{{{f{Hn}}}Hn}{{{f{E`}}}{{f{E`}}}}{{{f{Mj}}}{{f{E`}}}}{{{f{ALf}}}{{f{E`}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dj{c}}}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}{f{{l{c}}}}{f{{l{e}}}}g}EbCbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{Gh}}{f{Gh}}}c{}}{{GhGh}c{}}0110{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{E`{{Fd{E`}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{Hn}}{f{E`}}}d}{{{f{AMf}}{f{E`}}}{{Ah{Af}}}}0{{{f{Hn}}{f{E`}}}Hn}{{{f{E`}}E`}E`}{{{f{Eb}}{f{E`}}}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}}{{Ah{Af}}}}{{{f{Db}}{f{E`}}}{{Ah{Af}}}}{{{f{En}}{f{E`}}}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}}{{Ah{Af}}}}{{{f{AMf}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Jd}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Eb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Db}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{En}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}Ff}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}CbCb}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{E`}}}E`}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Lh}}}Lh}{{{f{Mh}}}Mh}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{M`}}}M`}{{{f{Md}}}Md}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Dl}}}Dl}{{{f{Df}}}Df}{{{f{ANn}}}ANn}{{{f{An}}}An}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AOh}}{f{AOh}}}AOn}{{{f{BjMj}}E`}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{E`}}}d}{{{f{ADj}}}d}11{B@bE`}{{}Hn}{{}AMl}{{}E`}{{}ADj}{Fl{{f{c}}}{}}{{{f{{AMh{ce}}}}}{{f{g}}}CbCb{}}111111111111111111111111111111111111{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}CbCb{}}{Fl{{f{Bjc}}}{}}000000000000000000000000000000000000{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Flb}000000000000000000000000000000000000{{{f{AMf}}}{{f{E`}}}}{{{f{Jd}}}{{f{E`}}}}{{{f{Hn}}}E`}{{{f{Mj}}}{{f{E`}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{E`}}{f{ADj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{AOh}}{f{AOh}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}543210{{f{f{c}}}d{}}0000000000000000000{{{f{Eb}}}{{Ah{{Hh{Af{AGf{Mb}}}}}}}}{{{f{{AMh{ce}}}}}MjCbCb}{{{f{Gh}}d}{{Ah{Gh}}}}{{{f{En}}{f{{Dj{Dh}}}}}{{Ah{En}}}}{{{f{Db}}{f{Gh}}}{{Ah{{l{Dl}}}}}}{{{f{En}}{f{Gh}}}{{Ah{{l{Df}}}}}}{{{f{{AEh{c}}}}{f{Gh}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Eb}}{f{BjGl}}}Gn}{{{f{Db}}{f{BjGl}}}Gn}{{{f{En}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{E`}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}0{{{f{AOh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{Eb}}c}b{{Cl{{B`{Cj}}}}}}{cc{}}000000{{{f{{Dj{Dh}}}}}Hn}{cHnB@h}{{{B`{c}}}Hn{{B@j{Hn}}}}{dHn}{{{f{Dn}}}Hn}55{{{f{ADj}}}E`}{{{f{Hn}}}E`}{HnE`}88{{{f{Hn}}}Mj}{{{f{B@l}}}Mj}:{{{f{AOl}}}AN`};;;;;;;;;;;;;;;;;;;;;;;{B@nADj}<{BA`ADj}={{{f{ADj}}d}E`}{cEb{{Hd{}{{Bb{{B`{Af}}}}}}}}{cEb{{Hd{}{{Bb{{B`{{Fd{H`}}}}}}}}}}{cEb{{Hd{}{{Bb{{B`{Ej}}}}}}}}{eEb{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cGh{{Hd{}{{Bb{d}}}}}}{eDb{{Kh{Dn}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eDb{{`{Dn}}}{{Hd{}{{Bb{c}}}}}}{eEn{{`{{Dj{Dh}}}}}{{Hd{}{{Bb{c}}}}}}{eEn{{Kh{{Dj{Dh}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}Db{{Kh{Dn}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}En{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}=:98765{eAK`{{`{{Dj{Dh}}}}}{{Hd{}{{Bb{c}}}}}}{eAK`{{Kh{{Dj{Dh}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}Db{{Kh{Dn}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}En{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cEb{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGh{{Hj{}{{Bb{d}}}}}}{cGh{{Hj{}{{Bb{{B`{d}}}}}}}}{eDb{{`{Dn}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eDb{{Kh{Dn}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{Kh{{Dj{Dh}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dj{Dh}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{{cBhE`}Eb{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dj{d}}}}}Gh}{{Bh{f{{Dj{c}}}}}Db{{Kh{Dn}}}}{{Bh{f{{Dj{c}}}}}En{{Kh{{Dj{Dh}}}}}}{{Bh{f{{Dj{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dj{{B`{d}}}}}}}Gh}{{Bh{f{{Dj{{B`{c}}}}}}}Db{{Kh{Dn}}}}{{Bh{f{{Dj{{B`{c}}}}}}}En{{Kh{{Dj{Dh}}}}}}{{Bh{f{{Dj{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGh{{Hl{}{{Bb{{B`{d}}}}}}}}{{{G`{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{G`{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gf{}{{Bb{e}}}}HlJfJh}}{{FlcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fl}Eb}{{BhdFl}Gh}{{Bh{f{Dn}}Fl}Db}{{Bh{f{{Dj{Dh}}}}Fl}En}{{Bh{f{{Dj{Dh}}}}Fl}AK`}{{BhcFl}{{AEh{c}}}Ih}{{FlADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{BhFl}Eb}{{BhFl}Gh}{{BhFl}Db}{{BhFl}En}{{BhFl}AK`}{{BhFl}{{AEh{c}}}Ih}{{BhFl{f{E`}}}Eb}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{AOhIl}{AOj{{B`{Il}}}}{{{f{Jd}}Fl}{{Ah{Hn}}}}{{{f{AMf}}Fl}{{Ah{Hn}}}}0{{{f{Eb}}Fl}{{Ah{Hn}}}}{{{f{Gh}}Fl}{{Ah{Hn}}}}{{{f{Db}}Fl}{{Ah{Hn}}}}{{{f{En}}Fl}{{Ah{Hn}}}}{{{f{AK`}}Fl}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fl}{{Ah{Hn}}}Ih}{{{f{Jd}}Fl}Hn}{{{f{AMf}}Fl}Hn}0{{{f{Eb}}Fl}Hn}{{{f{Gh}}Fl}Hn}{{{f{Db}}Fl}Hn}{{{f{En}}Fl}Hn}{{{f{AK`}}Fl}Hn}{{{f{{AEh{c}}}}Fl}HnIh}{{{f{Eb}}Fl}{{B`{Af}}}}{{}E`}00000000000000000000000{{{f{Eb}}}Af}{{{f{{AEh{c}}}}Fl}{{B`{{f{If}}}}}Ih}0{{AOjIl}Il}{{AOjc}Il{{Cf{}{{Cd{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dn}}}}}}{{{f{BAf}}Fl}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}}Fl}{{{f{Db}}}Fl}{{{f{AK`}}}Fl}{{{f{Eb}}dd}{{Ah{Al}}}}{{{f{Gh}}dd}{{Ah{Al}}}}{{{f{Db}}dd}{{Ah{Al}}}}{{{f{En}}dd}{{Ah{Al}}}}{{{f{AK`}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}{{{f{En}}{f{En}}}Gh}42301{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{E`}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AN`}}{f{Bjc}}}bABf}{{{f{AOj}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{E`E`}{{}Fl}000000000000000000000000000000000000{{{f{Eb}}}{{f{E`}}}}{{{f{E`}}}{{B`{{f{E`}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Ej}{{BAh{B`{Fl}}Fl}{{Ah{Jd}}}}{{BAh{B`{Fl}}Fl}Jd}{{{f{Eb}}}c{}}{{{f{Gh}}}c{}}{{{f{Db}}}c{}}{{{f{En}}}c{}}{{{f{AK`}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjE`}{{Ah{Kn}}}}{JdAf}{BAhAf}{HnHn}{{{f{E`}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}121212022212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEd{cgAEb}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{f{E`}}}}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}{{{f{En}}{f{En}}}Gh}42301{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{E`}}{f{E`}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{E`}}}}{{{f{E`}}}{{Ah{E`}}}}{{{f{Gh}}}{{B`{d}}}}{{{f{En}}}{{B`{{f{{Dj{Dh}}}}}}}}{{{f{Gh}}}Kn}{{{f{Db}}}Kn}{{{f{En}}}Kn}{{{f{Gh}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}Kn}{{{f{AL`}}}Kn}{{{f{E`}}{f{E`}}}{{Ah{E`}}}}:9876{{Bh{f{{Dj{Dh}}}}FlFl}Gh}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}}{{Ah{Fl}}}}{{{f{En}}}{{Ah{Fl}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}Db{{Kh{{Dj{{B`{{AKl{Dn}}}}}}}}}}{{Bhc}Db{{Kh{{Dj{{AKl{Dn}}}}}}}}{{Bhc}Db{{Kh{{Dj{{B`{{f{Dn}}}}}}}}}}{{Bhc}Db{{Kh{{Dj{{f{Dn}}}}}}}}{{Bhc}En{{Kh{{Dj{{B`{{AKl{{Dj{Dh}}}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{B`{{f{{Dj{Dh}}}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{f{{Dj{Dh}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{AKl{{Dj{Dh}}}}}}}}}}{{Bh{f{{Dj{c}}}}}{{AEh{c}}}Ih}{{Bhe}{{AEh{c}}}Ih{{Kh{{Dj{{B`{c}}}}}}}}{{BhE`}Mj}{IlAOh}{MbAOj}{IlAOj}{Bh{{AEh{c}}}Ih}{{{f{Eb}}FlFl}Eb}{{{f{Gh}}FlFl}Gh}{{{f{Db}}FlFl}Db}{{{f{En}}FlFl}En}{{{f{AK`}}FlFl}AK`}{{{f{{AEh{c}}}}FlFl}{{AEh{c}}}Ih}{{Bh{G`{c}}}{{AEh{c}}}Ih}{{Bh{G`{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}CbCb}{{}AMn}{Ghc{}}{{{f{Gh}}}c{}}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}542310{{{f{Gh}}}Fl}0{{{f{Eb}}}{{Ah{{AGf{Mb}}}}}}:{{{f{Eb}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Ml{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{BjEb}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Mn{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{AOh}}{f{AOh}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}CbCb}{{{f{Jd}}}{{B`{Fl}}}}{{{f{{AMh{AO`Jb}}}}}{{B`{Fl}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{Kn}}}}{{{f{AL`}}nN`}{{Ah{Kn}}}}{{BhFln}{{Ah{Gh}}}}{{{f{Eb}}}Eb}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000002{{{f{Gh}}}Gh}{{{f{Db}}}Db}{{{f{En}}}En}{{{f{AK`}}}AK`}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fl}{{{f{{AMh{AO`Jb}}}}}Fl}{{{f{Gh}}c{B`{d}}}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Db}}c{B`{{f{Dn}}}}}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}}{{{f{En}}c{B`{{f{{Dj{Dh}}}}}}}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gh}}ce}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}}}{{{f{Db}}ce}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{Dn}}}}}{{Cd{{B`{Dd}}}}}}}}{{{f{En}}ce}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{{Dj{Dh}}}}}}}{{Cd{{B`{{G`{Dh}}}}}}}}}}{{{f{Gh}}{f{Gh}}{B`{d}}}{{Ah{Gh}}}}{{{f{Db}}{f{Gh}}{B`{{f{Dn}}}}}{{Ah{Db}}}}{{{f{En}}{f{Gh}}{B`{{f{{Dj{Dh}}}}}}}{{Ah{En}}}}{{{f{BjEb}}}b}{{{f{BjEb}}E`}b}{{{f{BjMj}}Bh}b}{{{f{Eb}}Mb}Eb}{{{f{Gh}}Mb}Gh}{{{f{Db}}Mb}Db}{{{f{En}}Mb}En}{{{f{AK`}}Mb}AK`}{{{f{{AEh{c}}}}Mb}{{AEh{c}}}Ih}{{{f{Eb}}Mb{B`{{f{Af}}}}}Eb}{{{f{Gh}}Mb{B`{d}}}Gh}{{{f{Db}}Mb{B`{{f{Dn}}}}}Db}{{{f{En}}Mb{B`{{f{{Dj{Dh}}}}}}}En}{{{f{AK`}}Mb{B`{{f{{Dj{Dh}}}}}}}AK`}{{{f{{AEh{c}}}}Mb{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gh}}d}Gh}{{{f{Db}}d}Db}{{{f{En}}d}{{l{Df}}}}{{{f{AK`}}d}AK`}{{{f{Gh}}Ef}{{l{An}}}}{{{f{Db}}Ef}{{l{Dl}}}}{{{f{En}}Ef}{{l{Df}}}}{{{f{AK`}}Ef}AK`}{{{f{AKn}}Dh}Kn}{{{f{AL`}}Dh}Kn}{{{f{Hn}}}{{AKl{Dn}}}}{{{f{Hn}}{f{E`}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gh}}}{{B`{I`}}}}{{{f{Gh}}}Kn}{{{f{En}}}Kn}{{{f{Eb}}{f{c}}}Eb{{Kh{{Dj{I`}}}}Nd}}{{{f{Eb}}{f{Eh}}}Eb}{{{f{Db}}{f{c}}}Db{{Kh{{Dj{I`}}}}Nd}}{{{f{Db}}{f{Eh}}}Db}{{{f{En}}{f{Eh}}}En}{{{f{En}}{f{c}}}En{{Kh{{Dj{I`}}}}Nd}}{{{f{E`}}AMn}ADj}{{{f{Mj}}AMn}B@l}{AN`AOl}{{{f{E`}}BhAMn}B@l}{AN`{{f{Dn}}}}{{{f{Db}}Fl}{{Ah{Af}}}}{{ADjFld}ADj}{{{f{BjEb}}E`}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{Eb}}}{{Ah{Nl}}}}{fc{}}0000000000000000000000000000000{{{f{E`}}}E`}{{{f{ADj}}}BAl}{{{f{Jd}}Fl}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AO`Jb}}}}Fl}{{Ah{{AKl{{AMh{AO`Jb}}}}}}}}{fDd}000{{{f{En}}}Db}{{{f{Hn}}{f{Hn}}}d}{{{f{Eb}}c}{{Ah{Eb}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{Eb}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kl}{c{{Ob{e}}}{}{}}000000000000000000000000000000000{Mb{{Ob{AOh}}}}111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{E`}}}{{Ah{Hn}}}}{{{f{E`}}AMn}{{Ah{ADj}}}}{f{{Ob{GbBAn}}}}000{{{f{Eb}}{f{{l{c}}}}e}{{Ah{Eb}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gh}}}{{Ah{Gh}}}}{{{f{Db}}}{{Ah{Db}}}}{{{f{En}}}{{Ah{En}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}cA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}0{{{f{E`}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Dh}Kn}{{{f{AL`}}Dh}Kn}{{{f{Gh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}Ih}{{{f{Gh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Flc{}}0{Fl{{BBn{ce}}}{}{}}{{{f{{Dj{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Hn}{{{f{Eb}}{f{{l{c}}}}e}EbCb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dn}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dn}}}b}{{{f{AMb}}Ef}Eh}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dn}}}}}}}}}}{Flb}000{{{f{AMb}}}{{f{E`}}}}{{{f{AMb}}{f{Dn}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Db}}}c{}}201{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Ld{BCd}}}}{cc{}}000{{B@dE`}AMb}{{B@d{Ld{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{Db}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFlBCf}AMb}{{{f{AMb}}Fl}{{Ah{Hn}}}}{{{f{AMb}}Fl}Hn}{{{f{AMb}}}{{f{{Ld{BCd}}}}}}><=><={{}Fl}000{{}c{}}000{{}Ej}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fl}{{{f{AMb}}{f{Dn}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}120{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{AMb}}}Kn}{{{f{BjBCb}}{f{{Ld{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fl}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFlBCf}BC`}{{{Ld{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}};:9:;9<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dn}}}{{Hh{Ljd}}}}`{{{f{BCh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ef}AMb}`{{{f{AMb}}AMnd}Fn}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dn}}}{{B`{Lj}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Lj}{{f{Dn}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Lj}{{B`{{f{Dn}}}}}}{{}Fl}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fl}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{{}b}{{{f{BjBCn}}}b}{Flb}2{cc{}}6{{}Fl}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Lj{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dn}}}{{Ah{{f{BjBD`}}}}}}>=;:7{BD`AMb}765{{BhFl{Ld{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dn}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fl{{f{c}}}{}}0{{{f{BDb}}}f}{Fl{{f{Bjc}}}{}}0{Flb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}0{cBDb{{B@j{{AKl{Dn}}}}}}{{}{{Kd{{f{Dn}}BDd}{{Cd{b}}}}}}{{}Fl}0{{}c{}}0{cAKjAJf}{{{f{Dn}}}BDb}````{{{Kd{{f{Dn}}BDd}{{Cd{b}}}}}b}{cAKjBDf}{fDd}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{GbBAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BjGl}}MfFl}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fl}}}}{{}Dd}{{}d}{{}Fl}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fl}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{G`{Ej}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{G`{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cf}}}{{G`{Ej}}}}0{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{f{BCl}}{f{{Dj{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dj{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}MbFl}BCl}{{{f{BCl}}}BCl}{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}0{{{f{BjBCl}}{f{Dn}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}9{{{f{BjBCl}}}b}{{{f{BE`}}}BE`}{{{f{BEb}}}BEb}<{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dn}}}{{Ah{{f{Ej}}}}}}{{{f{BjBCl}}c}b{{Bf{}{{Bb{Ej}}}}}}{{{f{BCl}}e}{{Ah{{G`{{f{Ej}}}}}}}{{Kh{Dn}}}{{Hd{}{{Bb{c}}}}}}{{}BEb}{{}BCl}{Fl{{f{c}}}{}}0000{Fl{{f{Bjc}}}{}}0000{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{Flb}0000{{{f{BCl}}{f{Dn}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dn}}}{{Ah{Ej}}}}{{{f{BCl}}e}BCl{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEd{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dj{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{G`{E`}}}}<{{{f{BEf}}}BCl}{{{f{BDl}}}BCl}{{{f{BEb}}{f{BEb}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}0{{{f{BCl}}}Fl}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{G`{Ej}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{G`{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}6{{{f{BE`}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Af}}}}}}{cBCl{{Hd{}{{Bb{Ej}}}}}}{{{f{{Dj{BEh}}}}}{{Ah{BCl}}}}{{{f{{Dj{BEh}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEh}}}}}}}}{{{f{BCl}}Fl}{{B`{{G`{Hn}}}}}}{{{f{BCl}}{f{Dn}}}{{B`{Fl}}}}{{{f{BCl}}}{{G`{{f{Bh}}}}}}{{{f{BCl}}}{{G`{Bh}}}}{{{f{BCl}}}{{G`{{f{Dn}}}}}}{{{f{BCl}}}{{f{{Dj{Ej}}}}}}{{{f{BjBCl}}}{{f{Bj{G`{Ej}}}}}}{{{f{BCl}}Fl}{{Ah{BEh}}}}{{{f{BCl}}Fl{f{BjBEh}}}{{Ah{b}}}}{{{f{BCl}}Fl{f{BjBEh}}}b}{{{f{BCl}}}{{B`{{Ah{E`}}}}}}`{{{f{BCl}}e}{{Ah{BEj}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{G`{Ej}}dd}{{Ah{BEj}}}}{{{f{BEb}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}}Fl}{{{f{BCl}}{f{{Dj{Ej}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dj{Ej}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dj{Ej}}}}}{{f{BjBCl}}}}{{{f{BCl}}{f{Dn}}}{{f{c}}}{}}{{{f{BCl}}BEl}{{f{c}}}{}}{{{f{BCl}}{BEn{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BF`{Fl}}}{{f{c}}}{}}{{{f{BCl}}Fl}{{f{c}}}{}}{{{f{BCl}}{Ln{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BFb{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BFd{Fl}}}{{f{c}}}{}}{{}Fl}0000{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{}c{}}000000{{{f{BCl}}}{{Ah{Gh}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}AMnd}BFf}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}}BFh}{{{f{BCl}}}Fl}4{{{f{BCl}}}{{Ah{{B`{Ej}}}}}}1{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{BCl}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{Af}}}c{}}5{{{G`{Ej}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{G`{Ej}}}BCl}22{{{G`{Ej}}Fl}{{Ah{BCl}}}}0{{{f{BjBFf}}}{{B`{c}}}{}}{{{f{BjBFh}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{G`{BCl}}}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cf{BCl}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cf{{f{BjBCl}}}{{Cd{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cf{BClc}{{Cd{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Ej}}}}{{{f{BjBCl}}}b}{{BClAMn}{{BFj{{Fd{H`}}}}}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BjBCl}}{f{Dn}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dn}}c}{{Ah{{f{BjBCl}}}}}BFl}{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFl}?`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fldd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fl}{{B`{{f{Ej}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BFn{Fl}}}}{{{f{BCl}}c}{{Ah{{G`{Ej}}}}}{{BG`{Bh}}}}3{{{f{BCl}}e{f{BGb}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}Fl}b}{{{f{BCl}}}{{Hh{FlFl}}}}{{{f{BCl}}Mb}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fl}{{{f{BFf}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BFh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BCl}}MbFl}BCl}00{{{f{BCl}}cEl}{{Ah{BCl}}}{{BG`{Bh}}}}{{{f{BjBCl}}cEl}{{Ah{{f{BjBCl}}}}}{{BG`{Bh}}}}{{{f{BCl}}Mb}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFld}{{G`{BCl}}}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}{f{Eh}}}{{Ah{BCl}}}}{BCl{{G`{Ej}}}}{{{f{BCl}}{f{Eh}}}BCl}{{{f{BCl}}{f{Eh}}d}BCl}{{{f{BCl}}BGd}{{Ah{Nl}}}}{fc{}}00{fDd}{{{f{BjBCl}}{B`{{f{Dn}}}}{B`{{O`{Dd{G`{Dd}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dn}}}}{B`{{O`{Bh{G`{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dn}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Af}}}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{BGf{{Ah{BCl}}}}1{{{Hh{BGh{f{BEf}}}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEh}}}}}}}}}}{{{f{BCl}}{f{Dn}}}{{Ah{Fl}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{GbBAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dj{Dd}}}}}}BEb{B`{{Hh{MbFl}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{G`{Bh}}}}BEb{B`{{Hh{MbFl}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fl}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Ej}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}``````{{fh}b}0{{EjEj}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{f{Al}}}Ej}0000000{{{f{Ej}}{f{Al}}nN`}Ej}11{{{f{Ej}}{f{Al}}Dh}Ej}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}{f{Ej}}ceg}Ej{{Cf{{f{Af}}{f{Af}}}{{Cd{Af}}}}}{{Cf{{f{Kn}}{f{Af}}}{{Cd{Af}}}}}{{Cf{{f{Af}}{f{Kn}}}{{Cd{Af}}}}}}{{{f{Ej}}{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}c}Ej{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}Ef}Eh}{{{f{BGj}}}{{f{Af}}}}{{{f{Ej}}}{{f{Af}}}}{{{f{Ej}}}{{B`{{f{`}}}}}}{{{f{Ej}}}{{B`{{f{BGj}}}}}}{{{f{Ej}}}{{B`{{f{Af}}}}}}{{{f{BGj}}}Af}{{{f{Ej}}}{{Ah{{f{En}}}}}}{{{f{Ej}}}{{Ah{{f{AK`}}}}}}{{{f{Ej}}}{{B`{BGl}}}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{{EjEj}c{}}120201{{{f{Ej}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGj}}{f{E`}}}{{Ah{BGj}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}10{{{f{BGj}}{f{E`}}Ff}{{Ah{BGj}}}}{{{f{Ej}}{f{E`}}Ff}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AMb}}}}}}{{{f{Ej}}}Ej}{{{f{BGj}}}BGj}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Ej}}}{{Ah{{f{Jd}}}}}}{{}Ej}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{{f{Ej}}{f{Ej}}}c{}}{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{Flb}0<={{{f{BGj}}}{{f{E`}}}}{{{f{Ej}}}{{f{E`}}}}{{{f{Ej}}{f{Ej}}}d}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}011{{{f{Ej}}}{{Ah{Ej}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}HnFl}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AKn}}}}}}{{{f{Ej}}}{{Ah{{f{AL`}}}}}}{{{f{Ej}}}{{AKl{Mj}}}}{{{f{Ej}}AG`}{{Ah{Ej}}}}{{{f{Ej}}{f{Gh}}}{{Ah{Ej}}}}{{{f{BGj}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}0{AfEj}{BGjEj}{{AfFl}BGj}{{BhFl{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{{f{Ej}}Fl}{{Ah{Hn}}}}{{{f{Ej}}}Ib}{{{f{Ej}}}{{B`{{Fd{Fb}}}}}}{{{f{Ej}}Fl}{{B`{{f{If}}}}}}{{{f{Ej}}Fl}Hn}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{BGj}}}d}{{{f{Ej}}}d}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}}{{Ah{{f{BBh}}}}}}{{{f{Ej}}}{{Ah{{f{BBj}}}}}}{{{f{Ej}}}{{Ah{{f{BBl}}}}}}{{{f{Ej}}}{{Ah{{f{BBf}}}}}}{{{f{Ej}}}{{Ah{{f{Eh}}}}}}{{{f{Ej}}}{{Ah{Eb}}}}{{}Fl}0{{}c{}}0{BDnEj}{BGjEj}{EjEj}{EjBCl}{{{f{BjEj}}}{{f{BjAf}}}}{BGjBGj}{{{f{BGj}}}d}{{{f{Ej}}}d}{{{f{Ej}}}{{Ah{Gh}}}}000{{{f{Ej}}}Gh}0{{{f{Ej}}}Jn}{{{f{BGj}}}{{B`{{f{Af}}}}}}{{{f{BGj}}}Fl}{{{f{Ej}}}Fl}{{{f{Ej}}}{{Ah{{f{Eb}}}}}}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{Ej}}c}Gh{{Cf{{f{Af}}}{{Cd{Gh}}}}}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}}Kn}11{{EjEj}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}c}e{AbKl}{}}9{{{f{Ej}}}{{Ah{Fl}}}}{{{f{BGj}}}{{f{Bh}}}}{{{f{Ej}}}{{f{Bh}}}}{{BhKnFl}BGj}{{Bhc}Ej{}}{{BhE`}BGj}{{Bh{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{BhKnFl}Ej}0{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{Ej}}}Fl}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}}BGn}1{{{f{Ej}}nN`}{{Ah{Kn}}}}{{{f{Ej}}}Ej}{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{BjBGj}}Bh}{{f{BjBGj}}}}{{{f{BjEj}}Bh}b}{{{f{Ej}}{f{{Dj{AOj}}}}}{{Ah{Ej}}}}{{{f{BGj}}Fl}BGj}8{{{f{Ej}}ndd{B`{Il}}}{{Ah{Ej}}}}{{{f{Ej}}Fldd{B`{Il}}}{{Ah{Ej}}}}{{{f{BGj}}}{{f{Kn}}}}{{{f{BjEj}}Jn}b}{{{f{Ej}}Mb}Ej}{{{f{BjEj}}}b}{{{f{Ej}}{B`{Il}}}Ej}{{{f{Ej}}MbFl}Ej}{{{f{Ej}}Ef}{{Ah{Ej}}}}0{{{f{Ej}}Mb}{{Hh{EjEj}}}}{{{f{Ej}}Dh}{{Ah{Kn}}}}{{{f{Ej}}}{{Ah{{f{Db}}}}}}{{{f{BGj}}{f{E`}}}{{Ah{BGj}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}c}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}{f{Eh}}}{{Ah{Ej}}}}{BGjAf}{EjAf}{{{f{Ej}}{f{{Dj{I`}}}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{Dj{I`}}}}}Ej}{{{f{Ej}}{f{Eh}}}Ej}{fc{}}0{{{f{Ej}}}Ej}{{{f{BGj}}}Af}{{EjEj}{{Ah{Ej}}}}{{{f{Ej}}{f{Ej}}ceg}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}{{Cf{{f{Kn}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}{{Cf{{f{Af}}{f{Kn}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}}{{B`{{f{En}}}}}}{{{f{Ej}}}{{B`{{f{AK`}}}}}}{{{f{Ej}}}{{B`{{f{Gh}}}}}}{{{f{Ej}}}{{B`{{f{AMb}}}}}}{{{f{Ej}}}{{B`{{f{Jd}}}}}}{{{f{Ej}}}{{B`{{f{AKn}}}}}}{{{f{Ej}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Ej}}}{{B`{{f{BBh}}}}}}{{{f{Ej}}}{{B`{{f{BBj}}}}}}{{{f{Ej}}}{{B`{{f{BBl}}}}}}{{{f{Ej}}}{{B`{{f{BBf}}}}}}{{{f{Ej}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}0{{{f{Ej}}}{{B`{{f{Eb}}}}}}{{{f{Ej}}c}{{Ah{Gh}}}{{Cf{{f{Af}}}{{Cd{{Ah{Gh}}}}}}}}{{EjEj}{{Ah{Ej}}}}{{{f{Ej}}}{{B`{{f{Db}}}}}}1{{{f{Ej}}}{{B`{{f{BBb}}}}}}{{{f{Ej}}}{{B`{{f{B@d}}}}}}{{{f{Ej}}}{{B`{{f{BBd}}}}}}{{{f{Ej}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Ej}}}{{Ah{{f{BBb}}}}}}{{{f{Ej}}}{{Ah{{f{B@d}}}}}}{{{f{Ej}}}{{Ah{{f{BBd}}}}}}{{{f{Ej}}}{{Ah{{f{BB`}}}}}}{{{f{Ej}}}{{Ah{Ej}}}}0{AfBGj}{{{f{Ej}}Dh}{{Ah{Kn}}}}{{{f{Ej}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Ej}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EjBh}Ej}{{{f{Ej}}c}Ej{AbKl}}{{{f{Ej}}}{{Ah{Kn}}}}{{{f{Ej}}{f{Gh}}{f{Ej}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}{f{Ej}}}{{Ah{Ej}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BH`}}}BH`}{{f{f{Bjc}}}b{}}{fb}{{}BH`}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BH`}}{f{BH`}}}d}{{f{f{c}}}d{}}0{{{f{BH`}}{f{BjGl}}}Gn}{cc{}}{{{f{BH`}}{f{Bjc}}}bABf}`{{}Fl}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEj}}}{{Ah{BCl}}}}`{{{f{BHb}}}{{f{{Dj{BHd}}}}}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cl{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}Eb}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BHb}}}BHb}{{{f{Al}}}Al}{{{f{BEj}}}BEj}{{{f{BHf}}}BHf}{{f{f{Bjc}}}b{}}000{fb}000;{{}BHb}{{}Al}{Fl{{f{c}}}{}}000{{{f{BHh}}}{{f{c}}}{}}1111{Fl{{f{Bjc}}}{}}0000000`{{BHje}{}{}{{BHl{c}}}}{Flb}000{{{f{BjBHb}}}b}1111{{{f{BHb}}{f{BHb}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BHn}}}I`}{{{f{BHb}}}{{f{{Dj{I`}}}}}}{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjBHb}}}{{f{Bj{G`{I`}}}}}}{{{f{BHb}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEj}}{f{BjGl}}}Gn}{{{f{BHf}}{f{BjGl}}}Gn}0{{{f{Dn}}BHf}Bh}{cc{}}0000{{{G`{{G`{BI`}}}}}BHb}{{{G`{BI`}}}BHb}{BHbAl}333{cBHb{{Hd{}{{Bb{BI`}}}}}}{cBHb{{Hj{}{{Bb{BI`}}}}}}{{{f{Al}}Fl}BHn}{{{f{BEj}}}{{f{Al}}}}{{{f{BjBEj}}}{{f{BjAl}}}}{{{f{Al}}}Eh}{{{f{BIb}}dd}{{Ah{Al}}}}0{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBHb}}}}{{}Fl}0000000{{}c{}}0000000{AlBHb}1{BHbc{}}{{{f{BHb}}}c{}}301{{{f{BHn}}}d}{{{f{Al}}}d}{{{f{BHb}}}d}{{{f{BHb}}}{{BIf{{BId{{Kb{I`}}}}{Kb{BHd}}}}}}{{{f{Al}}}BIh}{{{f{BEj}}}{{G`{Ej}}}}{{{f{BEj}}{B`{{Hh{MbFl}}}}}{{G`{Ej}}}}={{{f{BHn}}}Fl}{{{f{Al}}}Fl}?????{{{G`{I`}}{G`{BHd}}d}BHb}{{{f{BCl}}{G`{Ej}}Al{B`{{G`{Bh}}}}}BEj}{{{f{BjBIh}}}{{B`{c}}}{}}{{{f{BjBIh}}Fl}{{B`{c}}}{}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cf{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHj}{{{f{BEj}}nN`}{{Ah{BCl}}}}{{BEje}BEj{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}MbFl}BHh}{{{f{BjBHb}}}b}{{{f{BjAl}}}b}{{{f{BEj}}Dh}{{Ah{BCl}}}}{{{f{BEj}}}{{Ah{BCl}}}}{Al{{G`{I`}}}}0{BEjAl}{{{f{BjBEj}}}Al}{fc{}}000{fDd}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{GbBAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BHb}}}}{{{f{Al}}}{{f{BIj}}}}={{}c{}}0000000`````{{{f{BHb}}c}Af{{Cf{{Hh{I`{f{BHd}}}}}{{Cd{B`}}}}JfJh}}{{{f{BHb}}c}Af{{Cf{{Hh{I`{f{BHd}}}}}{{Cd{}}}}JfJh}}{{{f{{Dj{{BIl{I`}}}}}}c}Af{{Cf{{BIl{I`}}}{{Cd{B`}}}}JfJh}}{{{f{{Dj{{BIl{I`}}}}}}c}Af{{Cf{{BIl{I`}}}{{Cd{}}}}JfJh}}{{{f{{Dj{c}}}}e{B`{BIn}}}{{AJj{c}}}{BJ`BJb}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dj{c}}}}{f{Hf}}e{B`{BIn}}}{{AJj{c}}}{BJ`BJb}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}Cb}{{{f{BIj}}{f{{Dj{Fn}}}}}d}{{{f{BJd}}{f{Al}}}Af}{{BJfBJf}BJf}0`{{{f{BJh}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJh}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJj}}Hn}{{B`{b}}}}{{{f{BjBJl}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJj}}}BJj}{{{f{BJl}}}BJl}{{{f{BEh}}}BEh}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dj{c}}}}}E`{{BAb{E`}}}}{{}BEh}{Fl{{f{c}}}{}}00{Fl{{f{Bjc}}}{}}00{Flb}00{{{f{BEh}}{f{BEh}}}d}{{f{f{c}}}d{}}0{{{f{BEh}}{f{BjGl}}}Gn}{{{Hh{{f{E`}}Fl}}}BJj}{cc{}}{{{Hh{{f{E`}}Fl}}}BJl}11{{gFl}BDl{{B@j{Bh}}}{{B@j{E`}}}{{Bf{}{{Bb{{G`{{Hh{ce}}}}}}}}}}{{}Fl}00{{}c{}}00{BJjAf}{BJlAf}{{{f{E`}}Fl}BJj}{{{f{E`}}Fl}BJl}{{{G`{Hn}}}BEh}{{{f{BjBJj}}Fl}Af}{{{f{BjBJl}}Fl}Af}{{{f{{Dj{BEh}}}}{B`{Fl}}}{{Ah{BDl}}}}0{{{f{{Dj{BEh}}}}{B`{Fl}}}{{Ah{{G`{E`}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dj{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dj{BCl}}}}d}{{Ah{BCl}}}}````{{IlIl}Il}{{{f{{Dj{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{G`{BBd}}Nh}}}}}}{{{f{{AJn{Mb}}}}Nh{f{Bj{G`{Il}}}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BJn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BJn}}}Il}{cc{}}{{}Fl}{{}c{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BK`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}0{{{f{BK`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}05{{{f{BjBJn}}{f{{Dj{Dh}}}}}b}{{{f{BjBJn}}Ll}b}{{{f{BjBJn}}Mb}b}{{{f{BjBJn}}Lj}b}{{{f{BjBJn}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Ld{ce}}}}}{{f{e}}}NdBKb}{{{f{{Ld{c}}}}}BKd{BKfNd}}{{{f{{Ld{ce}}}}}{}NdBKb}{{{f{{Ld{c}}}}}LlBKh}{{{f{Bh}}}{{f{{Dj{Dh}}}}}}{{{f{Bh}}}{{f{Dn}}}}{{{f{Bh}}}{{f{BKj}}}}{{{f{Bh}}}{{f{BKl}}}}{{{f{{Ld{ce}}}}}{{f{c}}}NdBKb}3{{{Ld{{BKn{c}}e}}}{{Ld{ce}}}{}BKb}{{{Ld{{Dj{{BKn{c}}}}e}}}{{Ld{{Dj{c}}e}}}{}BKb}{f{{f{c}}}{}}600003000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BL`}}{f{Af}}}{{Ah{Af}}}}{{{f{BL`}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BLb}}}BLb}{{{f{{Ld{ce}}}}}{{Ld{ce}}}Nd{BKbA@n}}{{{f{Nb}}}Nb}{{{f{BGd}}}BGd}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BIn}}}BIn}{{{f{BLd}}}BLd}{{{f{BLf}}}BLf}{{{f{BLh}}}BLh}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}AOn{BLjNd}BKb}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fd{H`}}}}``{{}b}{cbBKb}{{}Bh}{{}{{Ld{Dn}}}}{{}{{Ld{c}}}BLl}{{}{{Ld{{Dj{c}}}}}{}}{{}{{Ld{BLn}}}}{{}Nb}{{}BGd}{{}B@l}{{}N`}`{Fl{{f{c}}}{}}{{{f{Bh}}}f}1111{{{f{{Ld{ce}}}}}{{f{c}}}NdBKb}222222222{Fl{{f{Bjc}}}{}}0000000000000{{{f{{Ld{c}}}}}{{f{Dn}}}{AJfNd}}`{{{Ld{ADlc}}}{{Ob{{Ld{ec}}{Ld{ADlc}}}}}BKb{ADlJfJh}}{{{Ld{ADlc}}}{{Ld{ec}}}BKb{ADlJfJh}}{{{f{{Ld{ce}}}}}{{BM`{ce}}}Nd{A@nBKb}}{Flb}0000{{{f{Bj{Ld{ce}}}}}bNdBKb}111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kh{Dn}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BMbNd}BKb}{{{f{{Ld{BMd}}}}{f{BMd}}}d}{{{f{{Ld{H`}}}}{f{H`}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGd}}{f{BGd}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIn}}{f{BIn}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{BLf}}{f{BLf}}}d}{{{f{BLh}}{f{BLh}}}d}{{f{f{c}}}d{}}0000000000000{BLb{{Hh{LjLj}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Ld{AD`}}}}}{{Ob{bBMf}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BKb}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BKb}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBKb}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGd}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BIn}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLh}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMhAKj}{cc{}}{BMjAKj}{BMfAKj}{BMlAKj}{{{f{Dd}}}Bh}{{{f{Dn}}}Bh}5{GbBh}{DdBh}{LjOf}88{Gb{{Ld{Dn}}}}{{{Ld{Dn}}}{{Ld{{Dj{Dh}}}}}}{{{f{BKl}}}{{Ld{BKl}}}}{BMn{{Ld{BKl}}}}{{{f{BKj}}}{{Ld{BKj}}}}{BN`{{Ld{BKj}}}}{{{f{BLn}}}{{Ld{BLn}}}}{c{{Ld{c}}}{}}{{{BIl{c}}}{{Ld{{Dj{c}}}}}{}}{BNb{{Ld{BLn}}}}{{{f{Dn}}}{{Ld{Dn}}}}{Dd{{Ld{Dn}}}}{{{Fd{ce}}}{{Ld{ce}}}NdBKb}{{{G`{ce}}}{{Ld{{Dj{c}}e}}}{}{BKbA@n}}{cc{}}{BNdc{}}{{{AKl{c}}}{{Ld{c}}}{BNfNd}}{{{f{{Dj{c}}}}}{{Ld{{Dj{c}}}}}A@n}333333333{{c{B`{Hf}}}BNh{}}{{{BNj{Mb}}{BNj{Dh}}{B`{Hf}}}BNl}{{{BNj{Mb}}{BNj{Dh}}{B`{Hf}}}BNn}{cBh{{Hd{}{{Bb{Dd}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dn}}}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{{Fd{Dn}}}}}}}}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{{f{Dn}}}}}}}}{e{{Ld{{Dj{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFl}{{BO`{Mb}}}Kh{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BO`{Mb}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BO`{Mb}}}BJb{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Ld{{Dj{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Ld{c}}}Nd}{c{{Ld{ec}}}BKbNd}{{{f{Dn}}}Bh}0{{{f{Dn}}}{{Ob{BOb}}}}{DdBh}{{Bhc}BOd{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOfNd}BKb}{{{f{Bj{Ld{ce}}}}}{{B`{{f{Bjc}}}}}NdBKb}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}NdBKb}{{{f{Fn}}Fl}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Ld{ce}}}}{f{Bjg}}}b{BOhNd}BKbABf}{{{f{BGd}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLh}}{f{Bjc}}}bABf}{{{f{Of}}}Lj}{{}b}{cb{A@nBKb}}{{{f{{Dj{Lj}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{}Fl}0000000000000`{{{f{BjBLb}}}{{f{BjIl}}}}{{}c{}}0000000000000{{}Ej}{{{Ld{ce}}}{{B`{c}}}{}BKb}{{{Ld{ce}}}{}NdBKb}{{{Ld{ce}}}{{Hh{e}}}NdBKb}{{{Ld{BOj}}}Af}{BhDd}{{{f{BLb}}}d}{{{f{Of}}}d}`{{{f{{Ld{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOfNd}BKb}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}{BOlNd}{BKbA@n}}{{{f{BOn}}}Kn}0{{{f{C@`}}}Kn}```11`{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BMbNd}BKb}{{C@bFl}{{B`{Fl}}}}{{Bhc}C@d{}}{c{{Ld{c}}}{}}{{BhADjd}B@l}{e{{Ld{c}}}{}{{Oh{{f{{BM`{c}}}}}{{Cd{c}}}}}}{{ge}{{Ld{ce}}}{}BKb{{Oh{{f{{BM`{ce}}}}}{{Cd{c}}}}}}{{ce}{{Ld{ce}}}{}BKb}{{}{{Ld{{BKn{c}}}}}{}}{c{{Ld{{BKn{e}}c}}}BKb{}}{Fl{{Ld{{Dj{{BKn{c}}}}}}}{}}{{Flc}{{Ld{{Dj{{BKn{e}}}}c}}}BKb{}}3210`{{}Of}{{}BLb}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}{{B`{AOn}}}{BOfNd}BKb}{c{{C@f{{Ld{c}}}}}{}}{{ce}{{C@f{{Ld{ce}}}}}{}BKb}`````{{{f{BOn}}}Kn}0{{{f{{Ld{c}}}}{f{BjC@h}}}b{AJfNd}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}dNdBKb}{{{f{C@`}}nN`}{{Ah{Kn}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dj{Dh}}}}}{{Ob{FlBMf}}}}{{{f{Bj{Ld{AD`}}}}C@j}{{Ob{bBMf}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{G`{Dh}}}}}{{Ob{FlBMf}}}}{{{f{Bj{Ld{AD`}}}}{f{BjDd}}}{{Ob{FlBMf}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dj{C@l}}}}}{{Ob{FlBMf}}}}`{{{f{Bj{Ld{AD`}}}}C@n}{{Ob{IlBMf}}}}`{{{f{AKd}}FlFl}AKd}0{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{CA`}}Dh}Kn}{{LjLj}BLb}`{{{f{{Ld{ce}}}}}FlNdBKb}>>{{{f{Of}}}{{B`{Lj}}}}{fc{}}00000000000{fDd}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}0000{{{Ld{{Dj{c}}e}}}{{Ob{{Ld{{BIl{c}}e}}}}}{}BKb}111111111{{}{{Ob{c}}}{}}0000000000000{{C@bFl}{{Ob{FlAKj}}}}{c{{Ob{{Ld{c}}CAb}}}{}}{{ce}{{Ob{{Ld{ce}}CAb}}}{}BKb}{{}{{Ob{{Ld{{BKn{c}}}}CAb}}}{}}{c{{Ob{{Ld{{BKn{e}}c}}CAb}}}BKb{}}10{c{{Ob{{C@f{{Ld{c}}}}CAb}}}{}}{{ce}{{Ob{{C@f{{Ld{ce}}}}CAb}}}{}BKb}{f{{Ob{GbBAn}}}}00{{{Ld{ce}}}{{Ob{c{Ld{ce}}}}}{}BKb}{fOd}0000000000000{{{Ld{ce}}}cA@nBKb}`{{{f{CA`}}Dh}Kn}{{}c{}}0000000000000{{{f{{Ld{ce}}}}}FlNdBKb}``{{B@l{CAd{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dn}}}{{Cd{Dd}}}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dj{Dh}}}}}{{Ob{FlBMf}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAf}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dn}}}{{Ob{bB@f}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dj{CAh}}}}}{{Ob{FlBMf}}}}```````{{c{B`{Hf}}}BNh{}}{{{BNj{Mb}}{BNj{Dh}}{B`{Hf}}}BNl}{{{BNj{Mb}}{BNj{Dh}}{B`{Hf}}}BNn}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{CAj{B`{{f{ADj}}}}}{{Ob{{BO`{Mb}}AKj}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAj}}}d}{FlCAj}{{{f{CAj}}}{{f{{Dj{Mb}}}}}}{{{f{BjCAj}}{f{H`}}}b}{{{f{BjCAj}}}b}{{{f{BjCAj}}{f{{Dj{{Fd{H`}}}}}}}b}1{{{f{BjCAj}}{B`{{f{H`}}}}}b}{CAj{{CAl{Mb}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAn}}}{{f{ADl}}}}{{{f{BjCAn}}}{{Fd{H`}}}}{{{f{BjCAn}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAn}}}CAn}{{f{f{Bjc}}}b{}}{fb}{{}CAn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CAn}}}{{f{ADj}}}}{{{f{BjCAn}}Fl}b}{{{f{CAn}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAn}}}Fl}{FlCAn}{{{f{BjCAn}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAn}}}{{B`{{f{CB`}}}}}}8```````{{{f{AKd}}FlFl}AKd}0`{{}b}0{{}d}``{{eFlFl}{{CBb{Mb}}}{{Kh{Dn}}}{{Bf{}{{Bb{c}}}}}}{{eFlFl}{{AJn{Mb}}}{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{Kn}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kn}}}Kn}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Kn}}}{{f{E`}}}}{{{f{Kn}}{f{Kn}}}d}{{{f{Kn}}{f{BjGl}}}Gn}{CBdKn}{IjKn}{nKn}{cc{}}{CBfKn}{IlKn}{LjKn}{dKn}{CBhKn}{DhKn}{MbKn}{LlKn}{{}Fl}{{}c{}}{{KnBh}Ej}{{KnBh}Af}{{{f{Kn}}}d}0{{E`Hn}Kn}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjKn}}Hn}b}{{{f{Kn}}}{{f{Hn}}}}:{{{B`{n}}E`}Kn}``````{{{f{{CBj{c}}}}{f{{CBj{c}}}}}{{Ah{b}}}{}}{{{f{BEh}}}BDl}{{{f{BEf}}}CBl}{{{f{BEf}}}BDl}{{{f{CBl}}{f{Dn}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dn}}}{{B`{Mj}}}}{{{f{CBl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CC`{}{{CBn{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLlBMb}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBl}}}{{Ah{BDl}}}}{{{f{BDl}}}{{Ah{BDl}}}}{{{f{CBl}}AMn}BEf}{{{f{BDl}}AMn}BEf}{{{f{BjCBl}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CBl}}{f{Dn}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dn}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOj}}}n}0{{Bh{G`{Fn}}{f{ADj}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{ADj}}{B`{{f{CCb}}}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKl}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKl}{}}`{{{f{BOj}}}{{Ah{Kn}}}}0{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOj}}Ef}Eh}0{{{f{BOj}}}{{Ah{Eh}}}}0`{{{f{Af}}Fl}{{f{Fn}}}}{{{f{BOj}}}{{f{ADl}}}}{{{f{BjBOj}}}{{f{BjADl}}}}0{{{f{Af}}}Eb}{{{f{BjBOj}}}{{f{Bj{l{c}}}}}Cb}{{{f{BOj}}}{{f{{l{c}}}}}Cb}{{{f{Af}}}{{f{BOj}}}}{{{f{BjBOj}}}{{Ah{Fl}}}}0{{{f{BjAf}}}{{Ah{Fl}}}}{{{f{Af}}}{{Ah{{f{En}}}}}}{{{f{Af}}}{{Ah{{f{AK`}}}}}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{Af{f{Af}}}c{}}{{{f{Af}}Af}c{}}12032310{{{f{Af}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOj}}}{{B`{{Fd{Fb}}}}}}0{{{f{BOj}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}0{{{f{Af}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}{{{f{BOj}}{f{Af}}}{{Ah{Af}}}}0{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOj}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{BOj}}}{{f{{G`{Fn}}}}}}{{{f{BjBOj}}}{{f{Bj{G`{Fn}}}}}}{{{f{BjAf}}}{{f{Bj{G`{Fn}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOj}}}{{Ld{BOj}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fl{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fl{{f{Bjc}}}{}}000{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Flb}000{{{f{BOj}}}Af}0{{{f{BOj}}}{{f{E`}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}8{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Dn}}}{{Ah{Gh}}}}{{{f{Af}}{f{Dn}}}c{}}2;33{{f{f{c}}}d{}}0{{{f{Af}}}Fl}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFl}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOj}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOj}}{f{Gh}}}{{Ah{Af}}}}{{{f{BOj}}}Kn}0{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Dd}{cc{}}000{{{l{c}}}AfCb}{{Bh{f{{Dj{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dj{Hn}}}}{f{E`}}d}{{Ah{Af}}}}{{BhFn}{{Ah{Af}}}}{{Bh{G`{Fn}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{E`}}}Af}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Ll}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{{f{Mb}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{Dd}}}}}}{cAf{{Hd{}{{Bb{{B`{Dd}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dn}}}}}}}}{cAf{{Hd{}{{Bb{Mb}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dn}}}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Mb}}}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Lj}}}}}}}}{cAf{{Hd{}{{Bb{Lj}}}}}}{cAf{{Hd{}{{Bb{{f{Lj}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{B`{Ll}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ll}}}}}}}}{{Bh{G`{Mb}}}Af}{{Bh{G`{Mf}}}Af}{{Bh{G`{n}}}Af}{{Bh{G`{Ll}}}Af}{{Bh{G`{Ij}}}Af}{{Bh{G`{Il}}}Af}{{Bh{G`{Lj}}}Af}{{BhFl{f{E`}}}Af}{{{f{Af}}FlFl}Af}{{{f{BOj}}Fl}{{Ah{Hn}}}}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOj}}}{{B`{{Lf{Fb}}}}}}0{{{f{BOj}}Fl}{{B`{{f{If}}}}}}0{{{f{BOj}}FlFl}{{B`{{f{If}}}}}}0{{{f{BOj}}Fl}Hn}0{{{f{Af}}{f{Dn}}}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}eB@h{}}120{{{f{BOj}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fl}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Eh}}}}}}`{{{f{Af}}}{{Ah{Eb}}}}{{}Fl}000{{}c{}}000{Af{{G`{Fn}}}}{{}Ej}{AfBCl}3{BFlAf}{AfAf}??{{{f{Af}}}{{Ah{Gh}}}}000{{{f{BOj}}}Gh}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCd}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOj}}}Kn}0{{{f{BOj}}}Fl}{{{f{Af}}}Fl}{{{f{BOj}}Fl}Af}0{{{f{Af}}}{{Ah{{f{Eb}}}}}}{{{f{Af}}}{{Hh{{G`{{AGf{Mb}}}}{G`{{B`{Hf}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dn}}}c{}}021{{{f{Af}}}{{Ah{{B`{c}}}}}Kl}{{{f{BOj}}}{{Ah{Kn}}}}0{{{f{BOj}}}{{B`{n}}}}0{{{f{Af}}}Kn}1122322{{AfAf}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}8??>{{{f{BOj}}}{{Ah{Fl}}}}0{{{f{BOj}}}{{f{Bh}}}}{{Bhc}Af{{Kh{{Dj{{B`{Ij}}}}}}}}{{Bhc}Af{{Kh{{Dj{d}}}}}}{{Bhc}Af{{Kh{{Dj{Mf}}}}}}{{Bhc}Af{{Kh{{Dj{Ij}}}}}}{{Bhc}Af{{Kh{{Dj{n}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Dd}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{G`{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{d}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Lj}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Il}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Ll}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Mb}}}}}}}}{{Bhc}Af{{Kh{{Dj{Dd}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Mf}}}}}}}}{{Bhc}Af{{Kh{{Dj{Ll}}}}}}{{Bhc}Af{{Kh{{Dj{{G`{Dh}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{n}}}}}}}}{{Bh{Ln{Mb}}}Af}{{Bhc}Af{{Kh{{Dj{Il}}}}}}{{Bh{Ln{Ll}}}Af}{{Bh{Ln{Il}}}Af}{{Bh{Ln{Lj}}}Af}{{Bhc}Af{{Kh{{Dj{Af}}}}}}{{Bhc}Af{{Kh{{Dj{Lj}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Af}}}}}}}}{{Bhc}Af{{Kh{{Dj{{f{Dn}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kh{{Dj{{B`{{f{Dn}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{AKl{Dn}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{AKl{Dn}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{f{{Dj{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{f{{Dj{Dh}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{AKl{{Dj{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{AKl{{Dj{Dh}}}}}}}}}}}}{{Bhc}AfBFl}{{Bhc}Af{{Kh{{Dj{Hn}}}}}}{{Bhc}Af{{Kh{{Dj{Mb}}}}}}{{Bh{f{E`}}}Af}{{{f{BOj}}FlFl}Af}{{BhFl}Af}{{{f{BjCCd}}}{{B`{c}}}{}}{{{f{Af}}{f{Dn}}}{{Ah{Gh}}}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}eB@h{}}01{{{f{Af}}{f{Dn}}}c{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOj}}}Fl}`{{{f{BOj}}}{{Ah{Kn}}}}0{{{f{Af}}}BGn}{{{f{Af}}}{{Ah{Kn}}}}{{{f{BOj}}nN`}{{Ah{Kn}}}}0{{{f{BOj}}}Af}{{{f{BOj}}}{{B`{Hf}}}}0{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}<{{{f{BjBOj}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dj{AOj}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOj}}{f{Cf}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fldd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fl}Af}{{{f{BjAf}}Jn}b}{{{f{BOj}}Mb}Af}{{{f{BjBOj}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCd}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BOj}}MbFl}Af}{{{f{Af}}MbFl}Af}{{{f{Af}}Ef}{{Ah{Af}}}}{{{f{BOj}}Ef}{{Ah{Af}}}}0{{{f{BOj}}Mb}{{Hh{AfAf}}}}{{{f{Af}}Mb}{{Hh{AfAf}}}}{{{f{BOj}}Dh}{{B`{n}}}}0{{{f{BOj}}Dh}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{{f{Db}}}}}}{{{f{Af}}Fl}{{Ah{{AKl{Dn}}}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}}{{Ah{c}}}Kl}{{{f{BOj}}}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{Kn}}}}{{{f{Af}}{B`{Fl}}}Af}{{{f{BOj}}{f{Eh}}}{{Ah{Af}}}}{{{f{BOj}}{f{{Dj{I`}}}}}{{Ah{Af}}}}{{{f{BOj}}{f{{Dj{I`}}}}}Af}{{{f{BOj}}{f{Eh}}}Af}{{{f{Af}}FlAMn}Fn}{{{f{Af}}}{{Ah{Af}}}}>{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDd}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{En}}}}}}{{{f{Af}}}{{B`{{f{AK`}}}}}}{{{f{Af}}}{{B`{{f{Gh}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}00{{{Hh{Bh{G`{Fn}}}}}{{Ah{Af}}}}1{{{Hh{{f{B@l}}Fn}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}{G`{Fn}}}}}{{Ah{Af}}}}{{{Hh{BhFn}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{Eb}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dCb}{{{f{Af}}}{{B`{{f{Db}}}}}}4{f{{Ob{GbBAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOj}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOj}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{BOj}}Dh}{{B`{n}}}}0{{{f{BOj}}Dh}{{Ah{Kn}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKl}}{{{f{BOj}}}{{Ah{Kn}}}}0{{{f{Af}}{f{Gh}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cj}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Cj}}}Cj}{{f{f{Bjc}}}b{}}{fb}{{{f{Cj}}}Af}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{cc{}}{{}Fl}{{}c{}}{{{CCf{Af}}}Cj}{{{f{BjCj}}{f{BjFn}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCj}}{f{BjFn}}e}c{}{{Cf{{f{Cj}}}{{Cd{c}}}}}}```````````{{fh}b}{{{CCh{}{{Cd{c}}}}{f{Af}}}c{}}{{{f{CCj}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{CCl}}}CCl}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}9877{Flb}{{{f{CCl}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CCl}}{f{BjGl}}}Gn}{cc{}}{{}Fl}{{}c{}}?>==?>==?>=={fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4``{{{f{BL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fh}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BL`}}c}{{Ah{Af}}}Ad}{{{f{{l{Fh}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCn}}}CCn}{{f{f{Bjc}}}b{}}{fb}{{}CCn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CCn}}{f{CCn}}}d}{{f{f{c}}}d{}}0{{{f{CCn}}{f{BjGl}}}Gn}{cc{}}{{{f{CCn}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{G`{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}CbCb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}CbCbCb}{{}CD`}{{{f{CDb}}}d}0{c{{Ah{E`}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{E`Fl}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}CbCb}{{CD`CD`}CD`}{{{f{BjCD`}}CD`}b}10{{{f{CD`}}}Dh}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CDd}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{{CDf{ec}}}}}{{CDf{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}Cb}{{{f{Ej}}{f{Ej}}}{{Hh{EjEj}}}}{CDhe{}{{CDj{c}}}}{CDhe{}{{CDl{c}}}}{CD`CD`}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CD`}}CD`}d}{{}CD`}{{}CDb}{Fl{{f{c}}}{}}{{{f{{CDn{c}}}}}{{f{e}}}{}{}}1{{{f{{AKf{c}}}}}{{f{e}}}{}{}}222{Fl{{f{Bjc}}}{}}{{{f{Bj{AKf{c}}}}}{{f{Bje}}}{}{}}1111{{CD`CD`}CD`}{Flb}0000{cBDl{{Hd{}{{Bb{E`}}}}}}{c{{Ah{E`}}}{{Hd{}{{Bb{{f{E`}}}}}}}}:{{{f{{CDn{Af}}}}{f{{CDn{Af}}}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{f{f{c}}}d{}}00000{{{f{BjCD`}}c}b{{Hd{}{{Bb{CD`}}}}}}``{{{f{CD`}}{f{BjGl}}}Gn}0000{{{f{CDb}}{f{BjGl}}}Gn}{cc{}}00{CD`CDb}11{Dh{{B`{CD`}}}}{DhCD`}00{c{{AKf{Gh}}}{{Hd{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{cCD`{{Hd{}{{Bb{CD`}}}}}}{eCDl{}{{Hd{}{{Bb{c}}}}}}32{{{f{Dn}}}{{B`{CD`}}}}{c{{AKf{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AKf{Gh}}}{{Hl{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{{{f{E`}}{f{E`}}}{{B`{E`}}}}{{{f{E`}}{f{E`}}CDb}{{B`{E`}}}}{{{f{AN`}}{f{AN`}}}AN`}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDn{Af}}}}{f{Bjc}}}bABf}{{{f{CD`}}{f{Bjc}}}bABf}{{{f{CDb}}{f{Bjc}}}bABf}{{}Fl}0000{{{f{BjCD`}}CD`}b}{{CD`CD`}CD`}{{{f{CD`}}CD`}d}{{}c{}}0000{{{AKf{c}}}c{}}{CD`c{}}2{BG`{{G`{c}}}{}}{{}{{G`{Bh}}}}{{{f{CD`}}}d}0{{{f{CD`}}}{{ACl{CD`}}}}{{{f{CDd}}}{{`{{Bf{}{{Bb{CDd}}}}}}}}{{{f{CD`}}}{{ACn{CD`}}}}{{{f{CDd}}}Fl}{MfHn}{e{{Ah{E`}}}{{Kh{E`}}}{{Hd{}{{Bb{c}}}}A@n}}2{c{{AKf{c}}}{}}{{eFl}{{CDf{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFl}{{CDf{{CEb{{CE`{c}}}}c}}}A@n}{{{f{Bj{CDf{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDf{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gf}}{CD`CD`}{{{f{Dn}}}Dd}`{{{f{BjCD`}}CD`}b}{{{f{BjCD`}}CD`d}b}{{{f{{CDf{ec}}}}}{{Hh{Fl{B`{Fl}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CDd}}MbFl}CDd}{{{f{{Dj{c}}}}MbFl}{{f{{Dj{c}}}}}{}}{{{f{c}}Fl}{{G`{c}}}CDd}0{{{f{CDd}}Mb}{{Hh{CDdCDd}}}}{{{f{BCl}}Fld}{{G`{BCl}}}}{{CD`CD`}CD`}80{fc{}}009{{CDhFl}{{CDf{CDhc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{E`}}{f{E`}}}{{Ah{E`}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{E`}}e}c{}{{Cf{{f{BjCj}}}{{Cd{c}}}}}}{{{f{{Dj{{G`{c}}}}}}}{{Hh{Fl{G`{Fl}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dj{c}}}}}{{AJj{I`}}}{{Kh{{Dj{Of}}}}JfJh}}{{{f{{Dj{e}}}}}{{G`{c}}}{JfJhCh}{{Kh{{Dj{c}}}}}}{{{f{Af}}}{{G`{Af}}}}","D":"KB`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5949],[5,"ListType",1545],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1545],[10,"Num",5950],[10,"ToPrimitive",5951],[5,"Series",5167],[8,"PolarsResult",4388,5952],[10,"NumOpsDispatchInner",5650,5953],[6,"GroupsProxy",4005,5954],[5,"BooleanType",1545],[6,"Option",5955],[17,"Item"],[8,"ArrayBox",5626],[10,"Iterator",5956],[5,"PlSmallStr",4388,5957],[0,"mut"],[17,"IsNested"],[5,"FalseT",1545],[17,"IsObject"],[10,"PolarsDataType",1545],[17,"Output"],[10,"Fn",5958],[10,"Copy",5959],[5,"AmortSeries",5626],[10,"FnMut",5958],[5,"Float32Type",1545],[5,"Float64Type",1545],[8,"StringChunked",1545],[5,"String",5960],[5,"BinaryType",1545],[1,"u8"],[1,"slice"],[5,"StringType",1545],[1,"str"],[6,"DataType",1545,5961],[8,"ListChunked",1545],[5,"View",5962],[5,"SortOptions",1460],[8,"IdxCa",1545,5963],[6,"Column",3714],[5,"SortMultipleOptions",1460],[8,"BinaryChunked",1545],[10,"PolarsIntegerType",1545],[10,"MetadataTrait",827,5964],[5,"Box",5965],[6,"CastOptions",740],[10,"NumOpsDispatchCheckedInner",5701,5966],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4388,5967],[5,"Vec",5968],[5,"CompactString",5969],[5,"MetadataProperties",827],[10,"DoubleEndedIterator",5970],[8,"BooleanChunked",1545],[17,"HasViews"],[5,"Formatter",5971],[8,"Result",5971],[10,"Array",5967],[17,"Array"],[10,"IntoIterator",5972],[5,"Bitmap",5973],[1,"tuple"],[10,"IntoParallelIterator",5974],[10,"TrustedLen",5975],[6,"AnyValue",1545,5976],[8,"IdxSize",4388,5977],[5,"MetadataFlags",827],[5,"ObjectType",1545],[10,"PolarsObjectSafe",1113],[10,"PolarsObject",1113],[1,"f32"],[1,"u64"],[5,"Metadata",827],[5,"RwLockWriteGuard",5978],[5,"Int128Type",1545],[8,"DecimalChunked",1545,5979],[10,"Send",5959],[10,"Sync",5959],[10,"ExactSizeIterator",5980],[10,"PolarsFloatType",1545],[6,"IsSorted",5167,5981],[10,"PolarsIterator",788],[5,"Iter",5982],[1,"fn"],[5,"Map",5983],[10,"AsRef",5984],[6,"ChunkedArrayLayout",40],[10,"NumCast",5951],[5,"Scalar",5101],[6,"MetadataReadGuard",827,5985],[5,"IMMetadata",827,5986],[5,"Arc",4388,5987],[5,"RwLockReadGuard",5978],[5,"UInt32Type",1545],[1,"u32"],[1,"i32"],[5,"Range",5988],[5,"Int32Type",1545],[1,"i64"],[5,"Int64Type",1545],[1,"i128"],[5,"UInt64Type",1545],[5,"Field",1545,5989],[10,"ParallelIterator",5974],[10,"IndexedParallelIterator",5974],[6,"QuantileMethod",4388,5990],[5,"RollingOptionsFixedWindow",4388,5991],[10,"Sized",5959],[17,"IsStruct"],[8,"PlRandomState",1545,5992],[5,"BytesHash",5993],[8,"Array2",5994],[8,"ArrayView1",5994],[6,"Either",5995],[6,"Result",5996],[5,"TypeId",5997],[5,"NullableIdxSize",4388,5977],[10,"FnOnce",5958],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",450,5998],[10,"ChunkedBuilder",478],[5,"BinViewChunkedBuilder",478,5999],[10,"ViewType",6000],[5,"BooleanChunkedBuilder",478,6001],[5,"NullChunkedBuilder",478,6002],[5,"PrimitiveChunkedBuilder",478,6003],[10,"Clone",6004],[8,"StringChunkedBuilder",478,5999],[8,"BinaryChunkedBuilder",478,5999],[10,"NewChunkedArray",478],[5,"AnonymousListBuilder",586,6005],[5,"AnonymousOwnedListBuilder",586,6005],[5,"ListBooleanChunkedBuilder",586,6006],[5,"ListPrimitiveChunkedBuilder",586,6007],[10,"ListBuilderTrait",586],[5,"ListStringChunkedBuilder",586,6008],[5,"ListBinaryChunkedBuilder",586,6008],[5,"ListNullChunkedBuilder",586,6009],[10,"Hasher",6010],[10,"ChunkedCollectInferIterExt",768],[10,"ChunkedCollectIterExt",768],[10,"Canonical",782],[10,"ChunkedCollectParIterExt",784],[10,"FromParIterWithDtype",784],[5,"BooleanArray",6011],[5,"BoolIterNoNull",788],[5,"SomeIterator",788],[5,"MetadataEnv",827,6012],[10,"MetadataCollectable",827,6013],[5,"Iter",6014],[5,"IterNames",6014],[5,"File",6015],[5,"Mutex",6016],[6,"MetadataMerge",827],[5,"RwLock",5978],[5,"ObjectArray",1113],[6,"ArrowDataType",1545,6017],[10,"Any",5997],[10,"Debug",5971],[8,"ObjectValueIter",1113],[5,"BitmapIter",6018],[6,"ZipValidity",6019],[5,"ObjectChunkedBuilder",1190],[8,"ObjectChunked",1545],[10,"AnonymousObjectBuilder",1214],[5,"ObjectRegistry",1214],[8,"ObjectConverter",1214],[8,"BuilderConstructor",1214],[10,"ChunkAgg",1243],[17,"FuncRet"],[10,"ChunkApply",1243],[10,"ChunkApplyKernel",1243],[10,"ChunkSort",1243],[10,"ChunkUnique",1243],[10,"ChunkCast",1243],[6,"FillNullStrategy",1243],[10,"ChunkCompareEq",1243],[10,"ChunkExplode",1243],[5,"OffsetsBuffer",6020],[10,"ChunkFillNullValue",1243],[10,"ChunkFilter",1243],[10,"ChunkFull",1243],[10,"ChunkFullNull",1243],[10,"ChunkAnyValue",1243],[10,"ChunkCompareIneq",1243],[10,"IsFirstDistinct",1243],[10,"IsLastDistinct",1243],[10,"ChunkQuantile",1243],[10,"ChunkExpandAtIndex",1243],[10,"ChunkReverse",1243],[10,"ChunkRollApply",1243],[10,"ChunkSet",1243],[10,"ChunkShift",1243],[10,"ChunkShiftFill",1243],[10,"ChunkVar",1243],[10,"ChunkTake",1243],[10,"ChunkTakeUnchecked",1243],[10,"ChunkBytes",1243],[10,"ChunkZip",1243],[10,"BinaryFnMut",1373],[10,"StaticArray",1545,6021],[10,"TernaryFnMut",1373],[10,"Error",6022],[10,"UnaryFnMut",1373],[5,"PrimitiveArray",6023],[5,"RowsEncoded",6024],[5,"BinaryArray",6025],[8,"BinaryOffsetChunked",1545],[6,"SearchSortedSide",1423],[10,"SlicedArray",4388,6026],[5,"NoNull",5735],[5,"NaiveDateTime",6027],[6,"PolarsError",4388,5952],[6,"Cow",6028],[8,"Float32Chunked",1545],[8,"Float64Chunked",1545],[10,"ArrayFromIter",1545,6029],[10,"ArrayFromIterDtype",1545,6029],[10,"AsRefDataType",1545,5961],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",6030],[10,"From",5984],[5,"CategoricalChunked",3067,6031],[10,"CategoricalMergeOperation",3067,6032],[10,"LogicalType",1545,6033],[5,"Logical",1545,6033],[5,"OwnedObject",1545,5976],[6,"UnknownKind",1545,5961],[5,"CompatLevel",1545,5961],[6,"TimeUnit",1545,6034],[5,"UInt8Type",1545],[5,"UInt16Type",1545],[5,"Int8Type",1545],[5,"Int16Type",1545],[5,"DateType",1545],[5,"TimeType",1545],[5,"BinaryOffsetType",1545],[5,"DecimalType",1545],[5,"DatetimeType",1545],[5,"DurationType",1545],[5,"CategoricalType",1545],[5,"Dimension",1545,6035],[6,"ReshapeDimension",1545,6035],[6,"ArrowTimeUnit",1545],[6,"Ordering",6036],[10,"ArrayCollectIterExt",4388,6029],[8,"Utf8ViewArray",6000],[8,"UInt32Chunked",1545],[5,"Error",5971],[10,"NumericNative",1545],[10,"Into",5984],[5,"ArrowField",4388],[6,"PrimitiveType",6037],[6,"IntegerType",6038],[10,"Borrow",6039],[10,"NoOption",6040],[10,"GetAnyValue",1545,5976],[8,"Int128Chunked",1545],[10,"IntoScalar",1545,6041],[6,"PhysicalType",6038],[6,"ToCompactStringError",5969],[8,"UInt8Chunked",1545],[8,"UInt16Chunked",1545],[8,"UInt64Chunked",1545],[8,"Int8Chunked",1545],[8,"Int16Chunked",1545],[8,"Int32Chunked",1545],[8,"Int64Chunked",1545],[8,"PlIdHashMap",1545,5963],[5,"CategoricalChunkedBuilder",3067,6042],[5,"GlobalRevMapMerger",3067,6032],[6,"RevMapping",3210,6043],[6,"CategoricalOrdering",3210,6043],[5,"CatIter",3067,6031],[1,"u128"],[5,"DataFrame",3423],[5,"StringCacheHolder",3264,6044],[5,"EnumChunkedBuilder",3283,6045],[5,"ErrString",3311,5952],[6,"PolarsWarning",3311,6046],[10,"Display",5971],[6,"FloatFmt",3392],[1,"char"],[8,"Schema",5143],[10,"IntoColumn",3714],[6,"NullStrategy",3423],[6,"UniqueKeepStrategy",3423],[8,"PlHashSet",1545,5992],[8,"ArrowSchema",4388,6047],[5,"Row",4260],[5,"GroupBy",4005],[5,"RangeFull",5988],[5,"RangeToInclusive",5988],[5,"RangeTo",5988],[5,"RangeInclusive",5988],[5,"RangeFrom",5988],[5,"RecordBatchIter",3423],[5,"PhysRecordBatchIter",3423],[5,"RecordBatchT",6048],[10,"IntoSeries",5167,6049],[10,"RangeBounds",5988],[10,"IntoVec",5735],[8,"SchemaRef",5143],[6,"IndexOrder",4388,6050],[5,"StructArray",6051],[8,"RecordBatch",6048],[5,"ScalarColumn",3714,6052],[6,"BitRepr",5167,5981],[8,"SeriesPhysIter",5167,6053],[5,"UnpivotArgsIR",3977],[5,"GroupsIdx",4005,5954],[8,"IdxVec",6054],[6,"GroupByMethod",4005],[5,"SlicedGroups",4005,5954],[5,"GroupsProxyParIter",4005,5954],[10,"UnindexedConsumer",6055],[6,"GroupsIndicator",4005,5954],[8,"IdxItem",4005,5954],[10,"IntoGroupsProxy",4005,6056],[5,"Copied",6057],[5,"Zip",6058],[5,"GroupsProxyIter",4005,5954],[8,"GroupsSlice",4005,5954],[1,"array"],[6,"RollingFnParams",4388,6059],[10,"IsFloat",6060],[10,"NativeType",6061],[10,"AggList",4244,6062],[10,"TakeExtremum",4244],[10,"PhysicalAggExpr",4257],[6,"AnyValueBuffer",4260,6063],[6,"AnyValueBufferTrusted",4260,6063],[5,"IdHasher",4358,6064],[10,"VecHash",4358,6065],[10,"Allocator",6066],[5,"BorrowedFd",6067],[10,"AsFd",6067],[10,"AsRawFd",6068],[5,"OsStr",6069],[5,"Path",6070],[20,"MaybeUninit",6071],[10,"NumOpsDispatchChecked",4388,5966],[5,"ChunkId",4388,5977],[5,"RollingVarParams",4388,6059],[5,"RollingQuantileParams",4388,6059],[6,"NonExistent",4388,6072],[10,"Ord",6036],[10,"Default",6073],[5,"CStr",6074],[5,"Weak",5987],[10,"PartialEq",6036],[10,"Scalar",6075],[5,"Error",6076],[6,"Error",6077],[5,"TryReserveError",6078],[5,"Utf8Error",6079],[5,"PathBuf",6070],[5,"OsString",6069],[5,"CString",6080],[1,"never"],[10,"ToOwned",6028],[10,"FromData",5023,6081],[5,"Buffer",6082],[10,"FromDataUtf8",5023,6081],[10,"FromDataBinary",5023,6081],[5,"ListArray",6083],[6,"Ambiguous",4388,6072],[10,"NamedFromOwned",4388,6084],[10,"PartialOrd",6036],[10,"Hash",6010],[10,"SeriesTrait",5167,5981],[10,"CloneToUninit",6004],[10,"ChunkAggSeries",4388,6085],[10,"QuantileAggSeries",4388,6086],[10,"IndexToUsize",4388,6087],[10,"NamedFrom",4388,6084],[5,"Pin",6088],[5,"Request",6022],[5,"BorrowedCursor",6089],[5,"IoSliceMut",6090],[6,"SeekFrom",6090],[10,"VarAggSeries",4388,6091],[5,"AllocError",6066],[5,"BTreeMap",6092],[5,"Arguments",5971],[5,"IoSlice",6090],[5,"AnonymousBuilder",5029,6093],[5,"Offsets",6020],[5,"MutableNullArray",5052,6094],[5,"MutableBitmap",6095],[5,"Utf8Array",6096],[1,"i8"],[1,"i16"],[1,"u16"],[5,"Schema",6097],[10,"SchemaExt",5143],[17,"DataType"],[10,"SchemaNamesAndDtypes",5143],[8,"Metadata",6017],[5,"SeriesIter",5167,6053],[5,"Rc",6098],[10,"LhsNumOps",5650,5953],[10,"NumOpsDispatch",5650,5953],[6,"NumericListOp",5650,6099],[6,"NullBehavior",5709],[5,"SuperTypeFlags",5735,6100],[5,"SuperTypeOptions",5735,6100],[10,"Container",5735],[5,"TrustMyLength",5735,5975],[10,"CustomIterTools",5735,6101],[10,"FromIteratorReversed",6102],[10,"FromTrustedLenIterator",5735,6101],[5,"Wrap",5735],[5,"Repeat",6103],[5,"Take",6104],[8,"FillNullLimit",1243],[10,"InitHashMaps",1545],[10,"InitHashMaps2",1545],[5,"TrueT",1545],[15,"IO",3378],[15,"Context",3378],[15,"Count",4241],[15,"Slice",4242],[8,"QuantileInterpolOptions",4388],[10,"ListFromIter",4388],[10,"Utf8FromIter",5096],[10,"BinaryFromIter",5096]],"r":[[0,6064],[4,6044],[13,6044],[16,6044],[32,6044],[450,5998],[478,5999],[479,5999],[480,6001],[483,6002],[484,6003],[485,5999],[586,6005],[587,6005],[588,6008],[589,6006],[591,6009],[592,6007],[593,6008],[832,5986],[838,6013],[839,6012],[843,5985],[844,5964],[1160,6105],[1452,6026],[1460,6026],[1546,5976],[1548,6029],[1549,6029],[1550,6029],[1551,6017],[1553,5961],[1569,6031],[1572,6031],[1573,6042],[1574,6032],[1575,6043],[1578,5961],[1579,5961],[1580,5961],[1581,5961],[1592,5979],[1595,6035],[1604,5989],[1605,5989],[1620,5976],[1622,6032],[1626,5963],[1627,6087],[1628,5963],[1629,5963],[1631,5992],[1632,5963],[1657,6041],[1671,6033],[1672,6033],[1690,5976],[1694,5992],[1695,5992],[1696,5963],[1697,5992],[1698,5992],[1699,5992],[1700,5957],[1706,6035],[1707,6043],[1710,6021],[1722,6034],[1723,5961],[1750,5961],[1955,6032],[1973,6033],[2088,5961],[2220,6033],[2629,6032],[2630,6032],[2644,5961],[2740,6031],[2779,6031],[3067,6031],[3068,6031],[3069,6042],[3070,6032],[3071,6043],[3073,6032],[3077,6043],[3094,6032],[3162,6032],[3163,6032],[3181,6031],[3185,6031],[3210,6043],[3215,6043],[3264,6044],[3270,6044],[3273,6044],[3281,6044],[3283,6045],[3301,6043],[3306,6043],[3307,6044],[3308,6044],[3309,6044],[3310,6044],[3317,5952],[3324,5952],[3325,5952],[3326,6046],[3340,5952],[3348,5952],[3355,6046],[3360,5952],[3362,5952],[3363,5952],[3364,5952],[3365,5952],[3366,6046],[3367,5952],[3382,6106],[3383,6106],[3384,6106],[3385,4358],[3718,6052],[4005,5954],[4011,5954],[4012,5954],[4013,5954],[4014,5954],[4015,5954],[4016,5954],[4019,5954],[4021,6056],[4033,5954],[4244,6062],[4262,6063],[4263,6063],[4357,6107],[4358,6064],[4359,6064],[4360,6065],[4363,6065],[4364,6065],[4388,6072],[4389,5987],[4390,5998],[4391,6029],[4392,5967],[4394,6047],[4395,5999],[4396,6001],[4398,6031],[4399,6031],[4400,6042],[4401,6032],[4402,6043],[4403,6085],[4404,5977],[4405,40],[4406,478],[4407,768],[4408,768],[4409,3714],[4413,3423],[4422,6081],[4423,6081],[4424,6081],[4426,6032],[4430,6087],[4431,5977],[4432,6050],[4433,6087],[4434,3714],[4435,6049],[4436,5735],[4438,6108],[4439,6108],[4440,6108],[4443,5953],[4446,6008],[4447,6006],[4448,586],[4449,6109],[4450,6007],[4451,6008],[4457,6084],[4458,6084],[4461,478],[4463,6072],[4466,5977],[4467,5977],[4468,5953],[4469,5966],[4473,5957],[4474,5952],[4475,788],[4476,1113],[4477,5952],[4478,6003],[4480,6086],[4481,5990],[4482,5990],[4485,6043],[4486,6059],[4487,5991],[4488,6059],[4489,6059],[4492,5101],[4495,5167],[4496,5981],[4498,6026],[4499,6044],[4501,5999],[4503,3423],[4504,3977],[4506,6091],[4507,6065],[4562,6032],[4613,6109],[4614,0],[4627,6109],[4659,0],[4807,6087],[4852,6109],[4854,6032],[4855,6032],[4882,6109],[4889,5952],[4890,5952],[4891,5952],[4892,5952],[4904,6031],[4906,6109],[4912,6031],[4993,6109],[5023,6081],[5024,6081],[5025,6081],[5029,6093],[5052,6094],[5083,6043],[5088,6043],[5089,6026],[5092,6044],[5093,6044],[5094,6044],[5095,6044],[5096,6110],[5097,6110],[5169,5981],[5170,1243],[5173,6049],[5174,5981],[5175,5981],[5180,6053],[5181,6053],[5182,5981],[5653,5953],[5655,5953],[5656,5953],[5657,6099],[5668,5953],[5701,5966],[5702,5966],[5738,6101],[5739,6101],[5740,6101],[5743,6100],[5744,6100],[5745,5975],[5760,6111],[5761,6111],[5821,6112],[5822,6100],[5862,6100],[5863,6100],[5865,6113],[5893,6100],[5894,6100],[5926,6100],[5943,6113]],"b":[[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[67,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkedArray%3CT%3E"],[74,"impl-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkedArray%3CT%3E"],[104,"impl-Container-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[126,"impl-Div-for-ChunkedArray%3CT%3E"],[127,"impl-Div-for-%26ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[159,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[160,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[188,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkedArray%3CT%3E"],[231,"impl-Container-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CT%3E"],[261,"impl-ChunkedArray%3CBooleanType%3E"],[262,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul-for-ChunkedArray%3CT%3E"],[264,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[265,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[272,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[274,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[278,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[279,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[285,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[286,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[287,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[288,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[293,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[301,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkedArray%3CListType%3E"],[312,"impl-ChunkedArray%3CStringType%3E"],[313,"impl-ChunkedArray%3CListType%3E"],[326,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[327,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[328,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[329,"impl-Rem-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[349,"impl-Container-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CT%3E"],[353,"impl-Container-for-ChunkedArray%3CT%3E"],[356,"impl-Sub-for-ChunkedArray%3CT%3E"],[357,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[358,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[359,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CBooleanType%3E"],[362,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[366,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[382,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[383,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[384,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[385,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[534,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[535,"impl-BinViewChunkedBuilder%3Cstr%3E"],[865,"impl-Flags-for-MetadataProperties"],[866,"impl-MetadataProperties"],[867,"impl-MetadataFlags"],[868,"impl-Flags-for-MetadataFlags"],[932,"impl-MetadataTrait-for-Metadata%3CT%3E"],[933,"impl-Metadata%3CT%3E"],[958,"impl-Binary-for-MetadataProperties"],[959,"impl-Octal-for-MetadataProperties"],[960,"impl-Debug-for-MetadataProperties"],[961,"impl-UpperHex-for-MetadataProperties"],[962,"impl-LowerHex-for-MetadataProperties"],[963,"impl-Debug-for-MetadataFlags"],[964,"impl-Binary-for-MetadataFlags"],[965,"impl-Octal-for-MetadataFlags"],[966,"impl-LowerHex-for-MetadataFlags"],[967,"impl-UpperHex-for-MetadataFlags"],[977,"impl-MetadataProperties"],[978,"impl-Flags-for-MetadataProperties"],[979,"impl-Flags-for-MetadataFlags"],[980,"impl-MetadataFlags"],[991,"impl-Metadata%3CT%3E"],[992,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1035,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-Metadata%3CT%3E"],[1040,"impl-Metadata%3CT%3E"],[1041,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1119,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1120,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1155,"impl-ObjectArray%3CT%3E"],[1156,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1171,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1172,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-ObjectArray%3CT%3E"],[1185,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1187,"impl-ObjectArray%3CT%3E"],[1188,"impl-Array-for-ObjectArray%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1194,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1195,"impl-ObjectChunkedBuilder%3CT%3E"],[1791,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1792,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1793,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1794,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1795,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1796,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1797,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1798,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1874,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1875,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1876,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1877,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1878,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1879,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2223,"impl-PartialEq-for-DataType"],[2224,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2235,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2236,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2237,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2238,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2241,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2242,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2243,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2244,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2278,"impl-Debug-for-AnyValue%3C\'a%3E"],[2279,"impl-Display-for-AnyValue%3C\'_%3E"],[2281,"impl-Display-for-DataType"],[2282,"impl-Debug-for-DataType"],[2285,"impl-Display-for-TimeUnit"],[2286,"impl-Debug-for-TimeUnit"],[2288,"impl-Debug-for-ReshapeDimension"],[2289,"impl-Display-for-ReshapeDimension"],[2300,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2301,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2302,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2303,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2304,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2307,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2308,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2309,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2312,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2313,"impl-From%3C%26Field%3E-for-Field"],[2339,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2341,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2344,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2345,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2346,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[2347,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2349,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2350,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2351,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2352,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2358,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2359,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2361,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2362,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2363,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2364,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2365,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2366,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2373,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2374,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2375,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2376,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2377,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2378,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2470,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2471,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2472,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2473,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2475,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2476,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2477,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2478,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2620,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2623,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2625,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2626,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2627,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2628,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2667,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2668,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2669,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2670,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2671,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2672,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2673,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2674,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2675,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2676,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2692,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2693,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2696,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2697,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2698,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2699,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2702,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2703,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2704,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2705,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2792,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2793,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2794,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2795,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2796,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2797,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3114,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3115,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3116,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3117,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3118,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3119,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3136,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3137,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3139,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3140,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3156,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3157,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3158,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3159,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3160,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3161,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3172,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3173,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3174,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3175,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3176,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3177,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3350,"impl-Display-for-ErrString"],[3351,"impl-Debug-for-ErrString"],[3448,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3449,"impl-Add%3C%26Series%3E-for-DataFrame"],[3450,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3495,"impl-Div%3C%26Series%3E-for-DataFrame"],[3496,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3497,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3529,"impl-Debug-for-DataFrame"],[3530,"impl-Display-for-DataFrame"],[3536,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3537,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3563,"impl-Index%3C%26str%3E-for-DataFrame"],[3564,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3565,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3566,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3567,"impl-Index%3Cusize%3E-for-DataFrame"],[3568,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3569,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3570,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3588,"impl-DataFrame"],[3589,"impl-Container-for-DataFrame"],[3597,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3598,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3599,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3620,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3621,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3622,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3650,"impl-Container-for-DataFrame"],[3651,"impl-DataFrame"],[3655,"impl-Container-for-DataFrame"],[3656,"impl-DataFrame"],[3659,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3660,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3661,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3681,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3683,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3722,"impl-Add-for-Column"],[3723,"impl-Add%3CT%3E-for-Column"],[3724,"impl-Add-for-%26Column"],[3725,"impl-Add%3CT%3E-for-%26Column"],[3753,"impl-BitAnd-for-%26Column"],[3754,"impl-Column"],[3755,"impl-BitAnd-for-Column"],[3756,"impl-Column"],[3757,"impl-BitOr-for-%26Column"],[3758,"impl-BitOr-for-Column"],[3759,"impl-BitXor-for-%26Column"],[3760,"impl-BitXor-for-Column"],[3761,"impl-Column"],[3787,"impl-Div-for-%26Column"],[3788,"impl-Div-for-Column"],[3789,"impl-Div%3CT%3E-for-%26Column"],[3790,"impl-Div%3CT%3E-for-Column"],[3815,"impl-From%3CSeries%3E-for-Column"],[3816,"impl-From%3CScalarColumn%3E-for-Column"],[3866,"impl-Mul-for-Column"],[3867,"impl-Mul%3CT%3E-for-Column"],[3868,"impl-Mul-for-%26Column"],[3869,"impl-Mul%3CT%3E-for-%26Column"],[3889,"impl-Rem-for-Column"],[3890,"impl-Rem%3CT%3E-for-%26Column"],[3891,"impl-Rem%3CT%3E-for-Column"],[3892,"impl-Rem-for-%26Column"],[3913,"impl-Sub-for-%26Column"],[3914,"impl-Sub%3CT%3E-for-Column"],[3915,"impl-Sub%3CT%3E-for-%26Column"],[3916,"impl-Sub-for-Column"],[4119,"impl-Display-for-GroupByMethod"],[4120,"impl-Debug-for-GroupByMethod"],[4127,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4128,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4161,"impl-IntoIterator-for-GroupsIdx"],[4162,"impl-IntoIterator-for-%26GroupsIdx"],[4164,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4165,"impl-IntoParallelIterator-for-GroupsIdx"],[4524,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4525,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4526,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4527,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4530,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4531,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4619,"impl-Default-for-Arc%3Cstr%3E"],[4620,"impl-Default-for-Arc%3CT%3E"],[4621,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4622,"impl-Default-for-Arc%3CCStr%3E"],[4682,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4683,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4684,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4710,"impl-Debug-for-PolarsError"],[4711,"impl-Display-for-PolarsError"],[4712,"impl-Display-for-PlSmallStr"],[4713,"impl-Debug-for-PlSmallStr"],[4716,"impl-Display-for-Arc%3CT,+A%3E"],[4717,"impl-Debug-for-Arc%3CT,+A%3E"],[4718,"impl-Pointer-for-Arc%3CT,+A%3E"],[4728,"impl-From%3CError%3E-for-PolarsError"],[4730,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4731,"impl-From%3CError%3E-for-PolarsError"],[4732,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4733,"impl-From%3C%26String%3E-for-PlSmallStr"],[4734,"impl-From%3C%26str%3E-for-PlSmallStr"],[4736,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4737,"impl-From%3CString%3E-for-PlSmallStr"],[4741,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4742,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4743,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4744,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4745,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4746,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4747,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4748,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4749,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4750,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4751,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4752,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4753,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4754,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4757,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4758,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4771,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4772,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4773,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4774,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4775,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4776,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4777,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4778,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[5115,"impl-From%3Ci8%3E-for-Scalar"],[5116,"impl-From%3Cf32%3E-for-Scalar"],[5117,"impl-From%3Cf64%3E-for-Scalar"],[5119,"impl-From%3Ci16%3E-for-Scalar"],[5120,"impl-From%3Cu64%3E-for-Scalar"],[5121,"impl-From%3Cu32%3E-for-Scalar"],[5122,"impl-From%3Cbool%3E-for-Scalar"],[5123,"impl-From%3Cu16%3E-for-Scalar"],[5124,"impl-From%3Cu8%3E-for-Scalar"],[5125,"impl-From%3Ci64%3E-for-Scalar"],[5126,"impl-From%3Ci32%3E-for-Scalar"],[5190,"impl-Add%3CT%3E-for-%26Series"],[5191,"impl-Add-for-Series"],[5192,"impl-Add-for-%26Series"],[5193,"impl-Add%3CT%3E-for-Series"],[5216,"impl-BitAnd-for-Series"],[5217,"impl-BitAnd-for-%26Series"],[5218,"impl-BitAnd%3C%26Series%3E-for-Series"],[5219,"impl-BitAnd%3CSeries%3E-for-%26Series"],[5220,"impl-BitOr%3C%26Series%3E-for-Series"],[5221,"impl-BitOr-for-%26Series"],[5222,"impl-BitOr%3CSeries%3E-for-%26Series"],[5223,"impl-BitOr-for-Series"],[5224,"impl-BitXor-for-%26Series"],[5225,"impl-BitXor-for-Series"],[5226,"impl-BitXor%3C%26Series%3E-for-Series"],[5227,"impl-BitXor%3CSeries%3E-for-%26Series"],[5273,"impl-Div-for-Series"],[5274,"impl-Div-for-%26Series"],[5275,"impl-Div%3CT%3E-for-%26Series"],[5276,"impl-Div%3CT%3E-for-Series"],[5288,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5289,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5290,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5291,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5292,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5293,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5311,"impl-Debug-for-Series"],[5312,"impl-Display-for-Series"],[5324,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5325,"impl-FromIterator%3Ci32%3E-for-Series"],[5326,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5327,"impl-FromIterator%3C%26f32%3E-for-Series"],[5328,"impl-FromIterator%3Cf32%3E-for-Series"],[5329,"impl-FromIterator%3C%26i64%3E-for-Series"],[5330,"impl-FromIterator%3Cf64%3E-for-Series"],[5331,"impl-FromIterator%3CString%3E-for-Series"],[5332,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5333,"impl-FromIterator%3C%26str%3E-for-Series"],[5334,"impl-FromIterator%3Ci64%3E-for-Series"],[5335,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5336,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5337,"impl-FromIterator%3C%26f64%3E-for-Series"],[5338,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5339,"impl-FromIterator%3Cu32%3E-for-Series"],[5340,"impl-FromIterator%3C%26u32%3E-for-Series"],[5341,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5342,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5343,"impl-FromIterator%3Cu64%3E-for-Series"],[5344,"impl-FromIterator%3C%26u64%3E-for-Series"],[5345,"impl-FromIterator%3C%26bool%3E-for-Series"],[5346,"impl-FromIterator%3Cbool%3E-for-Series"],[5347,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5348,"impl-FromIterator%3C%26i32%3E-for-Series"],[5349,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5350,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5351,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5352,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5353,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5354,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5355,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5369,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5370,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5371,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5372,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5373,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5374,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5422,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5423,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5424,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5425,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5426,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5427,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5441,"impl-Mul-for-Series"],[5442,"impl-Mul%3CT%3E-for-%26Series"],[5443,"impl-Mul%3CT%3E-for-Series"],[5444,"impl-Mul-for-%26Series"],[5451,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5452,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5453,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5454,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5455,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5456,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5457,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5458,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5459,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5460,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5461,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5462,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5463,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5464,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5465,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5466,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5467,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5468,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5469,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5470,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5471,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5472,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5473,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5474,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5475,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5476,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5477,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5478,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5479,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5480,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5481,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5482,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5483,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5484,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5485,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5486,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5487,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5492,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5493,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5494,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5495,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5496,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5497,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5510,"impl-Rem%3CT%3E-for-Series"],[5511,"impl-Rem%3CT%3E-for-%26Series"],[5512,"impl-Rem-for-%26Series"],[5544,"impl-Sub%3CT%3E-for-Series"],[5545,"impl-Sub%3CT%3E-for-%26Series"],[5546,"impl-Sub-for-%26Series"],[5547,"impl-Sub-for-Series"],[5575,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5577,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5578,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5579,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5768,"impl-Flags-for-SuperTypeFlags"],[5769,"impl-SuperTypeFlags"],[5836,"impl-Binary-for-SuperTypeFlags"],[5837,"impl-Octal-for-SuperTypeFlags"],[5838,"impl-LowerHex-for-SuperTypeFlags"],[5839,"impl-Debug-for-SuperTypeFlags"],[5840,"impl-UpperHex-for-SuperTypeFlags"],[5849,"impl-Flags-for-SuperTypeFlags"],[5850,"impl-SuperTypeFlags"],[5852,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5853,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5856,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5857,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5860,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5861,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAAMoPExBOEFEQUhBTEFQQVRBaEF0QYhBjEIkQghE=","e":"OzAAAAEAAK0RQQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQAAwBpAAAAbAADAHEAAgB4AA0AhwADAIwAAgCQAAQAlgAAAJgAAQCcAAUApAADAKoAAwCvAAUAtgABALsAAAC9AAMAwwACAMoABQDRAAMA2AACANwAAgDgAAYA6AAAAO0ADQAAAQQABwEGAA8BGwAuAQMAMwECADcBBAA9AQEAQwECAEcBBABNAQAAUgEFAFoBAQBeAQIAYgEKAHMBAQB5AQAAfQEIAIcBCACRAQAAkwEFAJsBAACdASMAwgEpAPABAgD2AScAJAIFAC4CAAAwAiYAWQJMAK0CDADBAiQA6QINAPgCAQD7AhkAGAMJACQDAQAoAwEAKwMVAEIDCQBNAwoAYgMAAGUDAABqAw0AeQMQAI4DEgCjAwAApQMJALEDAwC3AwEAuwMNANMDAQDcAwcA5QMHAPoDAQD+AwAAAQQDAAkEBQAQBAQAHAQLAC8EBAA2BA0ARgQGAFAECABaBAEAXgQXAHcEBwCABAAAgwQAAIUEAgCLBBAAnQQAAJ8EAAChBAIApQQCAKkEAgCtBAcAtgQBALkEBQDBBAEAxAQAAMYEAQDJBAMAzgQEANQEAgDYBAMA3gQAAOEEAADqBAAA7wQAAPIEAQD3BAEA+gQAAP0EAQAIBQEAEgUCABgFBgAhBQIAJgUBACkFAAArBQEAMQUBADQFAgA8BQEAQgUAAEUFAQBJBQAASwUAAE0FAABPBQAAVAUEAFsFAQBeBQcAZwUBAGoFAABuBQAAcAUDAHUFAQB4BQUAhAUeAKQFAQCoBQQArgUDALgFEQDMBQkA1wUAANkFBADsBQkAAgYNABIGAgAWBgUAHgYAACAGDgAyBgAANAYAADkGAQA8BgEAPwYDAEQGAABGBgAASQYAAEwGAABOBgEAUQYAAFMGAgBXBg0AZgYAAGgGAQBrBgAAbQYBAHAGAAByBgEAdQYAAHcGAQB6BgMAgQYAAIUGAQCJBgAAjAYAAI4GAACQBgMAlQYAAJgGCACiBgIApwYDAKwGAACuBgIAswYAALUGAAC6BgIAvgYBAMEGAADDBgEAxgYAAMgGAQDLBgAAzQYBANAGAADSBgEA1QYAANcGAADaBj4AHwcEACYHCQAxBwQANwcDADwHBABCBwAARAdgAKYHAgCqB3QAIAgFACcIgACpCAAArAhJAP0IBAAECQIACQkBAAwJAAAkCQAAJgkAACgJGABFCSUAbQkGAHYJHgCYCQEAnQlCAOIJAAAICgsAFgoAABgKAgAcCgEAHwoAACQKBwAtCgEAMQoCADYKBAA8Cg0ASwoPAFwKCgBoCg0AdwojAJwKCACmChwAxAoWANwKDgDsCgAA8QoAAPMKAAD1CgAA+QofABsLBQAiC1YAegswAKwLTgD8CwQAAgwBAAUMAgAJDAQADwwkADwMAgBADAkATgwEAFQMFwBuDAEAcQwEAHcMDQCGDAUAjQwAAI8MFwCoDAEArgwCALMMAQC3DAkAwgwEAMgMAQDNDAAAzwwCANMMCgDfDAAA4QwFAOgMAADqDAEA8AwEAPYMBAD8DBAADg0KABsNAwAhDQUAKA0lAE8NBQBWDQkAYw0AAGYNCwB0DQMAeQ0DAIINCwCPDQkAnA0TALkNAQC9DQEAwA0AAMINAADIDQMA2g0AAOENAADkDQEA7A0MAP8NAQAGDgAACA4BAA4OAwAZDgEAHA4AACUOAgAtDgAAMA4AADcOAABBDgIARQ4AAEgOAABKDgQAVg4EAF4OBgBnDgoAcw4AAHgOBACFDgEAiA4GAJsOBQCjDgIApw4SALwOGwDaDgsA6A4BAOsOBQD0DgoAAQ8DAAYPCQARDwIAFg8TACwPDAA6DxYAUw8AAFYPAgBaDyQAgA8JAIsPDQCaDwIAng8KAKoPAQCtDwMAsg8DALcPCQDCDwcAyw8BAM4PHADsDyYAFBAGACAQAgAmEAIAKxAAADAQBwBAEA0ATxABAFYQAwBbEAEAXxACAGQQAABmECAAihAMAJkQBQCgEAcAqRAWAMIQDgDSEA4A4hAAAOUQAwDsEAUA9hAOAAcRDQAWEQAAGBECAB0RCAAnEQIALBEHADURDwBGEQMASxEZAGYREAB4EQEAexEXAJUREwCqEQAArBEGALURHwDXEQMA3BEgAP4RBwAHEgEACxIAABASJAA4EgQAPhIIAEkSAQBMEisAeRIAAHsSBACBEgIAhhIAAJUSAAChEgAApBIHALISAAC1EgMAvRIAAL8SBgDIEhAA5xIAAOsSAwDwEgMA9RIAAPcSAQD+EgAAExMDABoTBAAhEwAAJBMHAC4TAAAwEwEANRMxAG8TAgBzEw0AghMAAIQTDQCWEw0AphMGAK4TAACwEx0AzxMAANETCwDeEwAA4BMBAOkTFQAAFAgACxQXACQUAAAmFAIAKhQAACwUAAAuFAAAMBQFADcUBAA9FAUARxQEAFMUAABZFAIAYRQLAG4UCwB9FAMAghQAAIYUAgCKFAMAkBQSAKcUAQCqFAMAsRQBAL8UAwDHFAAAyhQBAM0UIADwFAAA8hQBAPoUAAD8FAAA/hQBAAEVAAAHFQEAChUDABIVBQAgFQMAJRUAACkVAAAvFQAAMRUCADoVAABCFQMASBUAAEwVIgBwFQAAcxUCAHcVAQB6FQAAfRUAAIAVAACFFQQAjBUAAI4VAACSFQIAmRUBAJwVAACeFQEAoRUAAKcVAACpFQMAuRUBALwVAQDFFQcA0RUEANcVAQDcFQEA4hUDAO0VAADyFQMA9xUAAPwVCwAJFgAACxYAAA0WBAATFh4AMxYAADUWEgBLFgIAUBYOAGAWAQBjFgQAahYDAHAWCAB7FgAAfxYBAIMWAQCJFgAAjRYTAKIWAgCpFg4AuRYEAMEWCADLFgcA1hYAANoWAADdFgEA4BYCAOQWAwDpFgkA+xYEAAMXAAAFFwQADBcBAA8XAQATFwIAGBcAAB0XAgAiFwQAKBcJADMXBAA5FwQA"}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNCNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOONHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGNNNNNHNNNNNNNNNNNHNNNNNNNNHHNNNNNNNENNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNHNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get_range","get_ranges_sort","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_csv_read_internal","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","compile","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_parallel","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","write_encoded","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::credential_provider"],[372,"polars_io::cloud::options"],[560,"polars_io::csv"],[562,"polars_io::csv::read"],[823,"polars_io::csv::read::_csv_read_internal"],[866,"polars_io::csv::read::buffer"],[941,"polars_io::csv::read::buffer::Buffer"],[944,"polars_io::csv::read::schema_inference"],[971,"polars_io::csv::write"],[1116,"polars_io::file_cache"],[1137,"polars_io::ipc"],[1376,"polars_io::json"],[1474,"polars_io::mmap"],[1495,"polars_io::ndjson"],[1497,"polars_io::ndjson::core"],[1600,"polars_io::parquet"],[1603,"polars_io::parquet::metadata"],[1656,"polars_io::parquet::read"],[1802,"polars_io::parquet::read::_internal"],[1824,"polars_io::parquet::write"],[2048,"polars_io::partition"],[2049,"polars_io::path_utils"],[2056,"polars_io::pl_async"],[2078,"polars_io::predicates"],[2146,"polars_io::prelude"],[2157,"polars_io::utils"],[2168,"polars_io::utils::byte_source"],[2249,"polars_io::utils::compression"],[2267,"polars_io::utils::slice"],[2286,"dyn_clone::sealed"],[2287,"polars_io::options"],[2288,"core::result"],[2289,"serde::de"],[2290,"polars_io::shared"],[2291,"polars_core::frame"],[2292,"polars_error"],[2293,"core::fmt"],[2294,"core::hash"],[2295,"std::io"],[2296,"polars_arrow::record_batch"],[2297,"core::option"],[2298,"serde::ser"],[2299,"core::any"],[2300,"polars_io::avro::read"],[2301,"polars_arrow::datatypes::schema"],[2302,"polars_io::avro::write"],[2303,"polars_core::schema"],[2304,"alloc::string"],[2305,"alloc::vec"],[2306,"polars_io::cloud::glob"],[2307,"object_store"],[2308,"alloc::sync"],[2309,"polars_io::cloud::polars_object_store"],[2310,"object_store::path"],[2311,"tokio::fs::file"],[2312,"polars_io::cloud::adaptors"],[2313,"std::io::error"],[2314,"crossterm::command"],[2315,"url"],[2316,"core::ops::range"],[2317,"bytes::bytes"],[2318,"polars_utils::aliases"],[2319,"core::convert"],[2320,"core::cmp"],[2321,"core::ops::function"],[2322,"polars_parquet_format::thrift::varint::decode"],[2323,"object_store::aws::credential"],[2324,"object_store::azure::credential"],[2325,"object_store::gcp::credential"],[2326,"core::future::future"],[2327,"alloc::boxed"],[2328,"core::pin"],[2329,"core::marker"],[2330,"polars_utils::python_function"],[2331,"pyo3::instance"],[2332,"object_store::aws"],[2333,"object_store::azure"],[2334,"object_store::gcp"],[2335,"object_store::aws::builder"],[2336,"object_store::azure::builder"],[2337,"object_store::gcp::builder"],[2338,"core::iter::traits::collect"],[2339,"polars_io::csv::read::reader"],[2340,"polars_io::csv::read::read_impl::batched"],[2341,"polars_io::csv::read::options"],[2342,"std::path"],[2343,"polars_utils::pl_str"],[2344,"std::fs"],[2345,"polars_core::datatypes::dtype"],[2346,"polars_core::datatypes::field"],[2347,"polars_io::csv::read::parser"],[2348,"polars_core::series"],[2349,"polars_io::csv::write::writer"],[2350,"polars_io::csv::write::options"],[2351,"core::num::nonzero"],[2352,"polars_io::file_cache::entry"],[2353,"polars_io::ipc::ipc_stream"],[2354,"polars_io::ipc::write"],[2355,"polars_io::ipc::ipc_file"],[2356,"polars_io::ipc::ipc_reader_async"],[2357,"polars_arrow::io::ipc::read::file"],[2358,"polars_arrow::io::ipc::write::common"],[2359,"polars_utils::mmap::private"],[2360,"polars_arrow::array::struct_"],[2361,"polars_arrow::array"],[2362,"polars_arrow::datatypes"],[2363,"polars_arrow::datatypes::field"],[2364,"polars_arrow::array::growable::structure"],[2365,"polars_arrow::bitmap::immutable"],[2366,"polars_arrow::scalar"],[2367,"polars_arrow::array::struct_::iterator"],[2368,"polars_arrow::bitmap::utils::iterator"],[2369,"polars_arrow::bitmap::utils::zip_validity"],[2370,"polars_parquet::parquet::metadata::file_metadata"],[2371,"polars_parquet::parquet::metadata::column_order"],[2372,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2373,"core::iter::traits::exact_size"],[2374,"polars_parquet::arrow::read::statistics"],[2375,"polars_parquet_format::parquet_format"],[2376,"polars_parquet::parquet::metadata::schema_descriptor"],[2377,"polars_parquet::parquet::error"],[2378,"polars_io::parquet::read::reader"],[2379,"polars_io::parquet::read::read_impl"],[2380,"polars_io::parquet::read::options"],[2381,"polars_parquet::parquet::metadata::row_metadata"],[2382,"polars_core::series::series_trait"],[2383,"polars_parquet::arrow::read::deserialize::utils::filter"],[2384,"polars_io::parquet::write::writer"],[2385,"polars_io::parquet::write::batched_writer"],[2386,"polars_parquet::arrow::write"],[2387,"polars_io::parquet::write::options"],[2388,"polars_parquet::parquet::write"],[2389,"core::iter::traits::iterator"],[2390,"polars_parquet::arrow::write::file"],[2391,"std::sync::mutex"],[2392,"tokio::runtime::task::join"],[2393,"avro_schema::file"],[2394,"polars_io::cloud::object_store_setup"],[2395,"polars_io::csv::read::read_impl"],[2396,"polars_io::file_cache::cache"],[2397,"polars_io::file_cache::utils"],[2398,"polars_io::parquet::read::utils"],[2399,"polars_io::parquet::read::predicates"],[2400,"polars_io::parquet::read::mmap"],[2401,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEhDj21020`222`010210221102010102102022`21021021021``0101210210210210211HfAJ``0`1`H`1``1``020HbHh3Hd3251403251323232403251403251340325103251000333222555111032514000325133332403251403251In43043043114431514362514362514362514362JhJf1`Jj2Jl0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Lj0``````LfLh2``01LbLd324`Kf00L`Kn24365710243657`4436574365743657437``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll00``0Ml101`11100101010`10101010``1010101`01Mn`0`00`0000000000000`00AJbAJdAJf32103210321032103321032103`21033210321032103`2103AJh00`Mf000000000`0000``000000000Nn```000``NjNl21Nf0Nh324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Od00000`0`000000000```````````A@b0OlOnA@`3OfOhA@lA@d3A@nA@j4Oj987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:462521514446584684688070`AAn`0```AAf1AAhAAlAAj342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Nd`0`0000000000Kj011111````ABd00000000ABl1011111100101011111010110110010111110011111111111111111111111111010110111110100000000000111``````ACnADb1011111110101`0010010010101111000111110110101101AEj`00````00AEh1`AEbAEfAEd213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AFd00`00`000`0000`0`0000`AG``0`00````0`00`AFlAFn2AGbAGdAGfAFhAFj16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AHd0000000`00AHf1111`11`````AHlAHn`Kh21212121211212121212022121222221212102121121AHj233332323232322```AfAl10111`````````````AId``0`AIb0`0AIfAIh321032222310321032103221033332AIj21402140214214321433321432143214342143AIl`00000000000`0000AIn00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hEf}}}{{Aj{f}}}}{{{b{hEh}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{F`}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}{Fb{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{ce}}}}}{{Fn{n}{{Fj{{`{Fl}}}}}}G`Gb}{{Gd{Fd}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Gf}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Eh}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Eh}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{h}}g}{{A`{eEj}}}{}{}{{Gj{{b{hc}}}{{Gh{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEh}}{b{{Ff{Gl}}}}}{{En{n}}}}{{{b{h}}c}{{A`{nEj}}}Gn}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{H`}}}Ab}{nf}00000{{{b{Hd}}{b{Hd}}}Ad}{{{b{H`}}{b{H`}}}Ad}{{{b{Hb}}{b{Hb}}}Ad}{{{b{Hf}}{b{Hf}}}Ad}{{{b{Hh}}{b{Hh}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Hd}}{b{hAn}}}{{A`{fCn}}}}{{{b{H`}}{b{hAn}}}B`}{{{b{Hb}}{b{hAn}}}B`}{{{b{Hf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Hh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{HjHd}1{HlHd}2222{cH`{{Id{}{{Gh{{Ib{{I`{Hn}}}}}}}}IfIh}}{IjH`}{IlH`}{{{b{H`}}{b{hc}}}fBb}{{{b{Hb}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{InJ`}{H`J`}{HbJ`}{InJb}{H`Jb}{HbJb}{InJd}{H`Jd}{HbJd}``{{{b{H`}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Jf}}}{{b{Df}}}}{{{b{Jh}}}{{b{Df}}}}{{{b{Jj}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Jf}}}Jf}{{{b{Dh}}}Dh}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Jf}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Jh}}}Ab}{c{{A`{Jj}}}Ab}{nf}0000{{{b{Jf}}{b{Jf}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Jl}}{b{Jl}}}Ad}{{{b{Jh}}{b{Jh}}}Ad}{{{b{Jj}}{b{Jj}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Jf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Jh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Jj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Jf}}}}{{{b{Df}}}{{A`{Jlc}}}{}}{{{b{Df}}}{{A`{Jh}}}}{{{b{Df}}}{{A`{Jj}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jn{Df}}}{{K`{Db}}}{{Kd{}{{Kb{{E`{ce}}}}}}}}{{{b{Jf}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Jh}}{b{hc}}}fBb}{{{b{Jj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Jf}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Jh}}c}A`Bn}{{{b{Jj}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jfc}}}}}}}}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jhc}}}}}}}}{{Dh{Bl{H`}}}Dh}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jjc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000`{{{Kf{c}}{Bl{{Dn{Kh}}}}}{{Kf{c}}}Kj}{{{Kf{{I`{Kj}}}}{Bl{Kl}}}{{Aj{Kn}}}}{{{b{h{Kf{c}}}}}{{Aj{L`}}}Kj}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{b{b{hc}}}f{}}0000{bf}0000``{{Lj{b{D`}}}{{Aj{Ll}}}}{{{b{Ln}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}{{{b{{Ff{Gl}}}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}`{{}Lb}{{}Ld}{{}Lf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Lb}}}Ab}{c{{A`{Ld}}}Ab}{c{{A`{Lf}}}Ab}{c{{A`{Lh}}}Ab}{c{{A`{Lj}}}Ab}{nf}0000000```{{{b{Lb}}{b{Lb}}}Ad}{{{b{Ld}}{b{Ld}}}Ad}{{{b{Lf}}{b{Lf}}}Ad}{{{b{Lh}}{b{Lh}}}Ad}{{{b{Lj}}{b{Lj}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Kf{c}}}{{Aj{Ah}}}Kj}{{{b{Lb}}{b{hAn}}}B`}{{{b{Ld}}{b{hAn}}}B`}{{{b{Lf}}{b{hAn}}}B`}{{{b{Lh}}{b{hAn}}}B`}{{{b{Lj}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Lh}11{{{b{Lb}}}{{Dn{Ld}}}}`{{{b{Lb}}{b{hc}}}fBb}{{{b{Ld}}{b{hc}}}fBb}{{{b{Lf}}{b{hc}}}fBb}{{{b{Lh}}{b{hc}}}fBb}{{{b{Lj}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Lbc}{{Kf{c}}}Kj}`{{Lbc}Lb{{Id{Ld}{{Gh{Ld}}}}}}```{c{{Kf{c}}}Kj};{M`Lh}{GlLh}{{{b{hL`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Lb}}c}A`Bn}{{{b{Ld}}c}A`Bn}{{{b{Lf}}c}A`Bn}{{{b{Lh}}c}A`Bn}{{{b{Lj}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Lb{Bl{Mb}}}{{Aj{{Kf{Md}}}}}}`{bC`}0000000{{{b{hLb}}{b{Mf}}}f}{{}c{}}0000000{{Lbn}Lb}{{Lb{Bl{{Dn{{Ff{M`}}}}}}}Lb}{{Ld{Bl{c}}}Ld{{K`{Lh}}}}{{LdAd}Ld}{{Lb{Bl{{Dn{{Dd{Mh}}}}}}}Lb}{{LdLf}Ld}{{LdGl}Ld}{{LbAd}Lb}0{{Lb{Bl{n}}}Lb}1500{{Ld{Bl{Lj}}}Ld}{{LbLd}Lb}{{Lb{Bl{c}}}Lb{{K`{Mb}}}}{{Lb{Bl{{Dn{{Dd{n}}}}}}}Lb}{{Ld{Bl{Gl}}}Ld}66{{Lb{Bl{j}}}Lb}{{Lb{Bl{Kl}}}Lb}09??<<`````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{hAh}}{b{{Ff{Mj}}}}AdAd}{{Aj{f}}}}{{{b{Ll}}}Ll}{{b{b{hc}}}f{}}{bf}{{{b{Ml}}{b{{Ff{Gl}}}}}{{E`{nn}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ml}}{b{{Ff{Gl}}}}{b{hn}}}{{E`{nn}}}}{{{b{{Ff{Gl}}}}{Bl{Gl}}Glnnn{Bl{{b{Lh}}}}Ad}{{Aj{n}}}}{{{b{Ll}}{b{hAn}}}B`}{cc{}}0{{}n}0{{}c{}}0{{{Bl{Gl}}Gl}Ml}{{{b{hKl}}{b{h{Dd{Mj}}}}}{{Aj{Ad}}}}{{{b{{Ff{Gl}}}}Gl{b{D`}}Ad{b{{Ff{n}}}}n{Bl{Gl}}Gl{Bl{{b{Lh}}}}nLf{Bl{{b{Ll}}}}AdAdnn{Bl{n}}Ad}{{Aj{Ah}}}}{bc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0`77`````````````````````{{{b{hMn}}{b{{Ff{Gl}}}}AdAdAd}{{Aj{f}}}}{{{b{hMn}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Mn}}}Mh}{cc{}}000{{}n}000{{{b{{Ff{n}}}}n{b{D`}}{Bl{Gl}}LfAd}{{Aj{{Dd{Mn}}}}}}{{}c{}}000{Mn{{Aj{N`}}}}????>>>>===={{{b{{Ff{Gl}}}}}Ad}2222````{{bd}f}<;{{{b{Mf}}}Mf}{{b{b{hc}}}f{}}{bf}{{}Mf}>=<{{{b{{Nb{Mh}}}}}Mh}{{{b{Mf}}{b{hAn}}}B`}<{{{b{Mf}}}n}{{{b{Mf}}}Kl}{{{b{Df}}AdAd}Mh}{{{b{Nd}}Gl{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Lh}}}}{Bl{Gl}}Gl{Bl{{b{Lj}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}?={bc{}}{c{{A`{e}}}{}{}}{{{b{Nd}}{b{Lb}}}{{Aj{Mf}}}}{{}{{A`{c}}}{}}{bC`}{{}c{}}{{MfKl}Mf}`````````{{bd}f}00`{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{b{b{hc}}}f{}}00{bf}00``{{}Nj}{{}Nl}{{}Nn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nj}}}Ab}{c{{A`{Nl}}}Ab}{c{{A`{Nn}}}Ab}{nf}0000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nl}}{b{Nl}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}``{{{b{Nj}}{b{hAn}}}B`}{{{b{Nl}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{cc{}}0000{{{b{Nj}}{b{hc}}}fBb}{{{b{Nl}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{Nf{c}}Ad}{{Nf{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Nf{c}}n}{{Nf{c}}}Bf}{c{{Nf{c}}}Bf}````{{{b{Nj}}c}A`Bn}{{{b{Nl}}c}A`Bn}{{{b{Nn}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Nf{c}}O`}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Db}}}{{Nf{c}}}Bf}0{{{Nf{c}}{Bl{n}}}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Ad}}}{{Nf{c}}}Bf}{{{Nf{c}}Db}{{Nf{c}}}Bf}0{{{Nf{c}}Gl}{{Nf{c}}}Bf}{{{Nf{c}}Nn}{{Nf{c}}}Bf}15{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Ob}{{}n}{{{b{{Ff{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Od}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Od}}}{{Aj{Md}}}}0{bC`}{{{b{Od}}Ob}f}{{{b{Od}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Of{c}}}}}{{Aj{Cf}}}Bd}{{{Oh{c}}{b{D`}}}{{Aj{{Oj{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ol}}}Ol}{{{b{On}}}On}{{{b{A@`}}}A@`}{{{b{A@b}}}A@b}{{b{b{hc}}}f{}}000{bf}000`{{{b{A@d}}{Bl{{b{A@f}}}}}{{Aj{A@h}}}}{{{b{A@d}}{Bl{{b{A@f}}}}OnAd}{{Aj{Ah}}}}{{}A@j}{{}On}{{}A@`}{{}A@b}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ol}}}Ab}{c{{A`{A@`}}}Ab}{c{{A`{A@b}}}Ab}{nf}0000000000{{{b{Ol}}{b{Ol}}}Ad}{{{b{A@`}}{b{A@`}}}Ad}{{{b{A@b}}{b{A@b}}}Ad}{{b{b{c}}}Ad{}}00000{{{A@l{c}}}{{Aj{Ah}}}Kj}{{{Of{c}}}{{Aj{Ah}}}Bd}{{{b{h{A@n{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Oh{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Oj{c}}}}}{{Aj{f}}}Bf}{{{A@l{c}}{Bl{{Dn{Kh}}}}Ad}{{Aj{Ah}}}Kj}{{{b{Ol}}{b{hAn}}}B`}{{{b{A@`}}{b{hAn}}}B`}{{{b{A@b}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{A@d}}}}{{{b{Ol}}{b{hc}}}fBb}{{{b{A@`}}{b{hc}}}fBb}{{{b{A@b}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{A@l{c}}{Bl{Mb}}}{{A@l{c}}}Kj}{{{b{A@d}}}{{Aj{A@f}}}}{c{{A@l{c}}}Kj}{c{{Of{c}}}Bd}{c{{A@n{c}}}Bf}{{}A@j}{c{{Oh{c}}}Bf}{{{b{h{A@l{c}}}}}{{Aj{AA`}}}Kj}{{{b{h{Of{c}}}}}{{Aj{D`}}}Bd}{{{b{Ol}}c}A`Bn}{{{b{A@`}}c}A`Bn}{{{b{A@b}}c}A`Bn}{{{A@l{c}}Ad}{{A@l{c}}}Kj}{{{Of{c}}Ad}{{Of{c}}}Bd}{bc{}}000{{{b{A@`}}c}{{Oh{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{A@l{c}}{Bl{{Dd{Db}}}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{{Dd{Db}}}}}{{Of{c}}}Bd}{{{A@n{c}}AAb}{{A@n{c}}}{}}{{{Oh{c}}AAb}{{Oh{c}}}Bf}{{{A@n{c}}{Bl{A@b}}}{{A@n{c}}}{}}{{A@j{Bl{A@b}}}A@j}{{{Oh{c}}{Bl{A@b}}}{{Oh{c}}}Bf}{{A@jMb}A@j}{{{A@l{c}}{Bl{{Dd{N`}}}}}{{A@l{c}}}Kj}{{{A@l{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{A@l{c}}}Kj}{{{A@l{c}}{Bl{n}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{n}}}{{Of{c}}}Bd}{{{Oh{c}}Ad}{{Oh{c}}}Bf}{{Onc}On{{K`{{Bl{{Dn{Kh}}}}}}}}{{{A@l{c}}{Bl{{Dd{n}}}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{{Dd{n}}}}}{{Of{c}}}Bd}{{On{Bl{{Dn{{Ff{M`}}}}}}}On}{{{A@l{c}}{Bl{j}}}{{A@l{c}}}Kj}{{{Of{c}}{Bl{j}}}{{Of{c}}}Bd}{{Onc}On{{K`{{Bl{j}}}}}}{{Onc}On{{K`{{Bl{n}}}}}}{{{b{h{Oj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{A@`}}Ahc}{{Aj{f}}}Bf}{{{b{h{Oj{c}}}}{b{{Ff{AAd}}}}{b{AAd}}}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AAf}}}AAf}{{b{b{hc}}}f{}}{bf}{{}AAf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AAf}}}Ab}{nf}0000{{{b{AAf}}{b{AAf}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{AAh{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{AAj{c}}}{{Aj{Ah}}}Kj}{{{b{AAf}}{b{hAn}}}B`}{cc{}}0000{{{b{AAf}}{b{hc}}}fBb}{{{AAj{c}}{Bl{O`}}}{{AAj{c}}}Kj}{{}n}0000{{}c{}}0000`{c{{AAh{c}}}Bf}{c{{AAl{c}}}Bf}{c{{AAj{c}}}Kj}{{{b{{Ff{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}}{{{b{AAf}}c}A`Bn}{{{AAj{c}}Ad}{{AAj{c}}}Kj}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{AAj{c}}O`}{{AAj{c}}}Kj}5{{{AAh{c}}AAn}{{AAh{c}}}Bf}{{{AAj{c}}AAn}{{AAj{c}}}Kj}{{{AAj{c}}{Bl{{Dd{M`}}}}}{{AAj{c}}}Kj}{{{AAj{c}}Kl}{{AAj{c}}}Kj}{{{AAj{c}}{b{D`}}}{{AAj{c}}}Kj}{{{b{h{AAl{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{Nd}}}{{b{{Ff{Gl}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}NdKj}{{}n}{{}c{}}{{{b{Kj}}}{{Bl{{b{{Ff{Gl}}}}}}}}{{{b{Kj}}}{{Bl{{b{Md}}}}}}{{{b{Nd}}}AB`}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{O`}}}{{Aj{D`}}}ABb}``{{bd}f}{{{b{ABd}}n}{{E`{ABdABd}}}}{ABd{{Dn{ABf}}}}{cABd{{Kd{}{{Kb{f}}}}}}{cABd{{Kd{}{{Kb{{Bl{f}}}}}}}}{{ABhc}ABd{{Kd{}{{Kb{f}}}}}}{{ABhc}ABd{{Kd{}{{Kb{{Bl{f}}}}}}}}{{{b{ABd}}}{{b{ABj}}}}{{{b{hABd}}}{{b{hABj}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{ABd{{I`{ABf}}}}{{{b{ABd}}n}Ad}{{{b{ABd}}}ABd}{{b{b{hc}}}f{}}{bf}{{{ABl{c}}}{{Aj{n}}}Kj}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{ABd}}}{{b{ABh}}}}{{{b{ABd}}{b{{b{ABf}}}}}Ad}{{{b{ABd}}{b{ABd}}}Ad}{{{b{ABd}}}{{b{{Ff{ABn}}}}}}{{{ABl{c}}}{{Aj{Ah}}}Kj}{{{b{ABd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{AC`ABd}{c{{Aj{{ABl{Md}}}}}{{K`{Mb}}}}{{nABh}ABd}{{{b{ABh}}}{{b{{Ff{ABn}}}}}}{{{ABl{c}}{Bl{O`}}}{{ABl{c}}}Kj}{{}n}0{{}c{}}0{ABd{{E`{{Dd{ABn}}n{Dd{{I`{ABf}}}}{Bl{ACb}}}}}}{{{b{ABd}}}}{{{b{ABd}}}{{ACj{{Dd{{I`{ACd}}}}ACfACh}}}}{{{b{ABd}}}n}{{{ABl{c}}Ad}{{ABl{c}}}Kj}{c{{ABl{c}}}Kj}{{ABhn{Dd{{I`{ABf}}}}{Bl{ACb}}}ABd}{ABhABd}{{ABhn}ABd}{{{b{ABd}}}ABd}{{{b{hABd}}{Bl{ACb}}}f}{{{b{hABd}}nn}f}0{{bnn}c{}}011{{ABdnn}ABd}0{{{b{ABd}}n}{{E`{{I`{ABf}}{I`{ABf}}}}}}0{{{b{hABd}}}{{Bl{ACb}}}}{{{b{ABd}}}{{I`{ABf}}}}{bc{}}{{{b{ABd}}{b{ABd}}}ACb}{{{b{ABd}}b}ACb}10{e{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{e{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABhe}{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{{ABhe}{{A`{ABdc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{ABhn{Dd{{I`{ABf}}}}{Bl{ACb}}}{{A`{ABdACl}}}}{bC`}0{{{b{ABd}}}{{Bl{{b{ACb}}}}}}0{{{b{ABd}}}{{b{{Ff{{I`{ABf}}}}}}}}{{{b{ABd}}}ACf}{{}c{}}0{{{ABl{c}}{Bl{O`}}}{{ABl{c}}}Kj}{{{ABl{c}}Ad}{{ABl{c}}}Kj}{{{ABl{c}}{Bl{n}}}{{ABl{c}}}Kj}0{{{ABl{c}}{Bl{e}}}{{ABl{c}}}Kj{{K`{Mb}}}}{{{ABl{c}}{Bl{{Dn{Kh}}}}}{{ABl{c}}}Kj}{{{ABl{c}}{Bl{{Dn{{Ff{M`}}}}}}}{{ABl{c}}}Kj}4{{{ABl{c}}{Bl{{b{hj}}}}}{{ABl{c}}}Kj}{{{ABl{c}}Kl}{{ABl{c}}}Kj}{{{ABl{c}}{b{D`}}}{{ABl{c}}}Kj}{{ABd{Bl{ACb}}}ABd}{{{b{ABd}}{Bl{ACb}}}{{I`{ABf}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ACn}}}ACn}{{b{b{hc}}}f{}}{bf}{{{b{ACn}}n}AD`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{ABn}}c}{{A`{ADbACl}}}{{ADf{}{{Kb{{b{ADd}}}}}}}}`{nf}0{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADb}}{b{hAn}}}{{A`{fCn}}}}{{{b{ACn}}{b{hAn}}}{{A`{fCn}}}}{ADhADb}{cc{}}0{{}n}0{{}c{}}0{{{b{ACn}}}{{b{{Bl{{Dd{ADj}}}}}}}}```````{{{b{ACn}}}{{b{ADl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{ADn{{A`{ACnAE`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{AEb{c}}n}{{Aj{AEd}}}Kj}{{AEfn}{{Aj{AEd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{b{b{hc}}}f{}}0{bf}0{{{b{AEl}}}{{Fh{nAEn}}}}{{}AEj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AEh}}}Ab}{c{{A`{AEj}}}Ab}{nf}0000{{{b{AEh}}{b{AEh}}}Ad}{{{b{AEj}}{b{AEj}}}Ad}{{b{b{c}}}Ad{}}00000{{{AEb{c}}}{{Aj{Ah}}}Kj}{AEf{{Aj{Ah}}}}{{{b{AEd}}n}Ad}{{{b{AEh}}{b{hAn}}}B`}{{{b{AEj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{AF`}}}{{Aj{AEf}}}}{{{b{h{AEb{c}}}}}{{Aj{{b{AF`}}}}}Kj}{{{b{hAEf}}}{{Aj{{b{AF`}}}}}}{{{b{AEh}}{b{hc}}}fBb}{{{b{AEj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AEd}}}Ad}``{{{Bl{{b{{Ff{n}}}}}}{b{Cf}}{Bl{{b{{Ff{N`}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AEb{c}}}Kj}{{{b{hAEd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AEb{c}}}}}{{Aj{n}}}Kj}{{{b{hAEf}}}{{Aj{n}}}}`{{{AEb{c}}AEj}{{AEb{c}}}Kj}{{AEfAEj}AEf}{{{b{AEd}}}{{b{AA`}}}}{{{b{h{AEb{c}}}}}{{Aj{AA`}}}Kj}{{{b{hAEf}}}{{Aj{AA`}}}}`{{{b{AEh}}c}A`Bn}{{{b{AEj}}c}A`Bn}{{{AEb{c}}Ad}{{AEb{c}}}Kj}{{{b{h{AEb{c}}}}AF`}fKj}1{{AEfAd}AEf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hN`}}n{b{{Fh{nAEn}}}}}f}{bC`}000075`{{}c{}}0000{{{AEb{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{AEb{c}}}}}Kj}{{AEf{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{AEf}}}}{{{AEb{c}}{Bl{{Dd{Db}}}}}{{AEb{c}}}Kj}{{{AEb{c}}{Bl{{Dd{N`}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dd{N`}}}}}AEf}{{{AEb{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{E`{M`{Dn{Df}}}}}}}AEf}{{{AEb{c}}{Bl{{Dn{Kh}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dn{Kh}}}}}AEf}{{{AEb{c}}{Bl{{Dd{n}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{Dd{n}}}}}AEf}{{{AEb{c}}{Bl{j}}}{{AEb{c}}}Kj}{{AEf{Bl{j}}}AEf}{{{AEb{c}}{Bl{{E`{nn}}}}}{{AEb{c}}}Kj}{{AEf{Bl{{E`{nn}}}}}AEf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{ACb}}}AFb}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AFd}{{}c{}}{{{Bl{{b{Kh}}}}{b{AEl}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AFd}}AFb{b{ABh}}}Ad}{{{Dd{{E`{{b{ADd}}AB`}}}}ABn{Bl{AFf}}}{{Aj{{I`{ABf}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AFh{c}}{b{D`}}}{{Aj{{AFj{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AFl}}}AFl}{{{b{AFn}}}AFn}{{{b{AG`}}}AG`}{{{b{AGb}}}AGb}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{b{b{hc}}}f{}}00000{bf}00000``{{}AFl}{{}AFn}{{}AG`}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AFl}}}Ab}{c{{A`{AFn}}}Ab}{c{{A`{AG`}}}Ab}{c{{A`{AGb}}}Ab}{c{{A`{AGd}}}Ab}{c{{A`{AGf}}}Ab}`{nf}0000000;{{{b{{AFj{c}}}}{b{Ah}}}{{`{{AGj{}{{Kb{{Aj{{AGh{ACl}}}}}}}}}}}Bf}{{{b{AFl}}{b{AFl}}}Ad}{{{b{AFn}}{b{AFn}}}Ad}{{{b{AG`}}{b{AG`}}}Ad}{{{b{AGb}}{b{AGb}}}Ad}{{{b{AGd}}{b{AGd}}}Ad}{{{b{AGf}}{b{AGf}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AFj{c}}}}}{{Aj{Ob}}}Bf}{{{AFh{c}}{b{hAh}}}{{Aj{Ob}}}Bf}{{{b{AFl}}{b{hAn}}}{{A`{fCn}}}}{{{b{AFn}}{b{hAn}}}B`}{{{b{AG`}}{b{hAn}}}B`}{{{b{AGb}}{b{hAn}}}B`}{{{b{AGd}}{b{hAn}}}B`}{{{b{AGf}}{b{hAn}}}B`}{cc{}}0000000{{}AFl}{{{b{{AFj{c}}}}}{{b{{AGn{{AGl{c}}}}}}}Bf}{{{b{AFl}}{b{hc}}}fBb}{{{b{AFn}}{b{hc}}}fBb}{{{b{AG`}}{b{hc}}}fBb}{{{b{AGb}}{b{hc}}}fBb}{{{b{AGd}}{b{hc}}}fBb}{{{b{AGf}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AFl}}}Ad}0```{c{{AFh{c}}}{BfBf}}``{{{b{AFl}}c}A`Bn}{{{b{AFn}}c}A`Bn}{{{b{AG`}}c}A`Bn}{{{b{AGb}}c}A`Bn}{{{b{AGd}}c}A`Bn}{{{b{AGf}}c}A`Bn}{{{AFh{c}}Ad}{{AFh{c}}}Bf}`{bc{}}00000{{{b{AFn}}c}{{AFh{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{Gl{{Aj{AGb}}}}{AH`{{Aj{AGd}}}}{AHb{{Aj{AGf}}}}{bC`}0000000{{}c{}}0000000{{{AFh{c}}AG`}{{AFh{c}}}Bf}{{{AFh{c}}{Bl{n}}}{{AFh{c}}}Bf}0{{{AFh{c}}AFl}{{AFh{c}}}Bf}{{{b{h{AFj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AFn}}Ahc}{{Aj{f}}}Bf}{{{b{{AFj{c}}}}{Dd{{AGh{ACl}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Ln}}e{b{g}}n}{{Aj{f}}}{{K`{M`}}}{{Kd{}{{Kb{c}}}}}{CbIfIh}}`{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Ff{Mb}}}}}}}}{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Ff{Mb}}}}n}}}}}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}Ad{{Jn{Ln}}}}{{{b{{Ff{Gl}}}}}{{Bl{n}}}}{cAd{{Jn{Ln}}}}{{{b{Ln}}}Mb}``{{{b{AHd}}c}{}Hn}{{{b{AHd}}c}{}{HnIf}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AHd}}}}{{}n}{{}c{}}{{{b{AHf}}}Ob}{{{b{AHd}}c}AHh{HnIf}}{{{b{AHd}}e}{{AHh{c}}}If{{Gj{}{{Gh{c}}}}If}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AH`e}{}Hn{{Gj{}{{Gh{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Kh}}}}Ad}{{Aj{f}}}}{{{b{Kh}}}{{Bl{{b{AHj}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{b{b{hc}}}f{}}0{bf}0{{{b{AHn}}}{{b{{Ff{AHl}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AHl}}}Ab}{c{{A`{AHn}}}Ab}{nf}0{{{b{AHl}}}{{b{Mh}}}}{{{b{Kh}}{b{Ah}}}{{Aj{N`}}}}{{{b{AHl}}}{{b{M`}}}}{{{b{AHl}}{b{hAn}}}B`}{{{b{AHn}}{b{hAn}}}B`}{cc{}}0{N`AHl}{MjAHl}{{{b{AHl}}}{{Bl{{b{N`}}}}}}00{{{b{AHn}}{b{Df}}}{{Aj{{b{AHl}}}}}}{{}n}0{{}c{}}0{{{b{Kh}}}{{Bl{{Dd{M`}}}}}}{{Mj{Bl{N`}}{Bl{N`}}{Bl{N`}}}AHl}{{Kl{Dd{AHl}}{Bl{n}}}AHn}{{{b{AHl}}}{{Bl{n}}}}{{{b{AHn}}}{{Bl{n}}}}{{{b{AHn}}}{{b{Kl}}}}{{{b{AHl}}c}A`Bn}{{{b{AHn}}c}A`Bn}{{{b{AHj}}{b{AHn}}}{{Aj{Ad}}}}{{{b{hAHn}}{b{{Ff{n}}}}}f}=={{{b{AHl}}}{{Bl{N`}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAHn}}Kl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{Nd}}}{BdKjAI`}}{{{Bl{{b{{Ff{M`}}}}}}{b{D`}}{Bl{{b{{Ff{N`}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AIb}}}AIb}{{b{b{hc}}}f{}}{bf}{{}AId}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AIb}}{b{hAn}}}B`}{cc{}}0{AB`AId}{AIfAId}{AIhAId}33{{{b{AIj}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIf}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIh}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AId}}{Fb{n}}}{{Aj{AB`}}}}{{{b{AIj}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIf}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIh}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AId}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nAB`}}}}}}{{{b{AIj}}}{{Aj{n}}}}{{{b{AIf}}}{{Aj{n}}}}{{{b{AIh}}}{{Aj{n}}}}{{{b{AId}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AIb}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AId}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AId}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Ff{Gl}}}}}{{Bl{AIl}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Ff{Gl}}}}{b{h{Dd{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}};:9>````76432{{{b{AIn}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Fb{n}}}AIn}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DDh","p":[[1,"reference"],[5,"Private",2286],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2287],[5,"HiveOptions",0,2287],[1,"usize"],[6,"Result",2288],[10,"Deserializer",2289],[1,"bool"],[10,"SerReader",2146,2290],[5,"DataFrame",2291],[8,"PolarsResult",2292],[10,"SerWriter",2146,2290],[5,"Formatter",2293],[8,"Result",2293],[10,"Hasher",2294],[10,"Read",2295],[10,"Write",2295],[10,"ArrowReader",0,2290],[8,"RecordBatch",2296],[6,"Option",2297],[10,"Serializer",2298],[5,"TypeId",2299],[10,"WriteDataFrameToFile",0,2290],[5,"AvroReader",86,2300],[8,"ArrowSchema",2301],[10,"Seek",2295],[6,"AvroCompression",86],[5,"AvroWriter",86,2302],[5,"Error",2293],[8,"Schema",2303],[5,"String",2304],[5,"Vec",2305],[1,"str"],[5,"CloudOptions",372],[5,"CloudLocation",153,2306],[10,"ObjectStore",2307],[5,"Arc",2308],[1,"tuple"],[5,"PolarsObjectStore",153,2309],[5,"Path",2310],[5,"File",2311],[5,"CloudWriter",153,2312],[5,"Error",2313],[10,"Command",2314],[8,"Result",2313],[5,"Url",2315],[5,"Range",2316],[5,"Bytes",2317],[1,"slice"],[8,"PlHashMap",2318],[17,"Error"],[10,"Debug",2293],[10,"TryFrom",2319],[10,"Hash",2294],[10,"Eq",2320],[10,"From",2319],[5,"ObjectMeta",2307],[17,"Output"],[10,"FnOnce",2321],[1,"u8"],[10,"VarInt",2322],[6,"PlCredentialProvider",227],[5,"CredentialProviderFunction",227],[5,"AwsCredential",227,2323],[6,"AzureCredential",227,2324],[5,"GcpCredential",227,2325],[5,"InstanceCredentials",2323],[5,"SessionCredentials",2323],[10,"Future",2326],[5,"Box",2327],[5,"Pin",2328],[10,"Fn",2321],[10,"Send",2329],[10,"Sync",2329],[5,"PythonFunction",2330],[8,"PyObject",2331],[10,"IntoCredentialProvider",227],[8,"AwsCredentialProvider",2332],[8,"AzureCredentialProvider",2333],[8,"GcpCredentialProvider",2334],[6,"AmazonS3ConfigKey",372,2335],[6,"AzureConfigKey",372,2336],[6,"GoogleConfigKey",372,2337],[6,"CloudType",372],[10,"AsRef",2319],[10,"Into",2319],[17,"Item"],[10,"IntoIterator",2338],[5,"CsvReader",562,2339],[10,"PhysicalIoExpr",2078],[10,"MmapBytesReader",1474],[8,"SchemaRef",2303],[5,"OwnedBatchedCsvReader",562,2340],[5,"BatchedCsvReader",562,2340],[5,"CsvReadOptions",562,2341],[5,"CsvParseOptions",562,2341],[6,"CsvEncoding",562,2341],[6,"CommentPrefix",562,2341],[6,"NullValues",562,2341],[6,"NullValuesCompiled",823,2341],[5,"Path",2342],[5,"PlSmallStr",2343],[5,"PathBuf",2342],[5,"File",2344],[5,"SchemaInferenceResult",944],[6,"DataType",2345],[5,"Field",2346],[5,"CountLines",823,2347],[6,"Buffer",866],[5,"Series",2348],[8,"PlHashSet",2318],[6,"ReaderBytes",1474],[5,"CsvWriter",971,2349],[5,"BatchedWriter",971,2349],[5,"CsvWriterOptions",971,2350],[5,"SerializeOptions",971,2350],[6,"QuoteStyle",971,2350],[8,"NonZeroUsize",2351],[1,"u64"],[5,"FileCacheEntry",1116,2352],[5,"IpcStreamReader",1137,2353],[5,"IpcWriter",1137,2354],[5,"BatchedWriter",1137,2354],[5,"IpcScanOptions",1137,2355],[5,"IpcReadOptions",1137,2356],[5,"IpcWriterOptions",1137,2354],[6,"IpcCompression",1137,2354],[5,"IpcReaderAsync",1137,2356],[5,"FileMetadata",2357],[1,"i64"],[5,"IpcStreamWriterOption",1137,2353],[5,"IpcReader",1137,2355],[5,"IpcStreamWriter",1137,2353],[8,"ArrowSchemaRef",2301],[5,"CompatLevel",2345],[5,"EncodedData",2358],[5,"JsonWriterOptions",1376],[5,"JsonWriter",1376],[5,"JsonReader",1376],[5,"BatchedWriter",1376],[6,"JsonFormat",1376],[5,"MemSlice",2359],[10,"BufRead",2295],[5,"StructArray",1497,2360],[10,"Array",2361],[6,"ArrowDataType",2362],[10,"Any",2299],[5,"JsonLineReader",1497],[5,"Field",2363],[5,"GrowableStruct",2364],[5,"Bitmap",2365],[10,"Scalar",2366],[5,"StructValueIter",2367],[5,"BitmapIter",2368],[6,"ZipValidity",2369],[6,"PolarsError",2292],[5,"FileMetadata",1603,2370],[6,"ColumnOrder",2371],[5,"ParquetStatistics",1603],[5,"ColumnChunkMetadata",2372],[10,"ExactSizeIterator",2373],[5,"MutableStatistics",2374],[5,"KeyValue",2375],[5,"SchemaDescriptor",2376],[5,"FileMetaData",2375],[6,"ParquetError",2377],[5,"ParquetReader",1656,2378],[5,"BatchedParquetReader",1656,2379],[5,"ParquetAsyncReader",1656,2378],[5,"ParquetOptions",1656,2380],[6,"ParallelStrategy",1656,2380],[5,"RowGroupMetadata",2381],[6,"IsSorted",2382],[8,"FileMetadataRef",1603],[1,"f64"],[6,"PrefilterMaskSetting",1802,2379],[6,"Filter",2383],[5,"ParquetWriter",1824,2384],[5,"BatchedWriter",1824,2385],[5,"StatisticsOptions",1824,2386],[5,"ParquetWriteOptions",1824,2387],[6,"ParquetCompression",1824,2387],[5,"GzipLevel",1824,2387],[5,"BrotliLevel",1824,2387],[5,"ZstdLevel",1824,2387],[8,"RowGroupIterColumns",1824,2388],[10,"Iterator",2389],[5,"FileWriter",2390],[5,"Mutex",2391],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2056],[10,"GetSize",2056],[5,"JoinHandle",2392],[10,"StatsEvaluator",2078],[5,"ColumnStats",2078],[5,"BatchStats",2078],[10,"Sized",2329],[6,"DynByteSourceBuilder",2168],[6,"DynByteSource",2168],[5,"MemSliceByteSource",2168],[5,"ObjectStoreByteSource",2168],[10,"ByteSource",2168],[6,"SupportedCompression",2249],[6,"SplitSlicePosition",2267],[6,"ObjectStoreCredential",227],[5,"Utf8Field",866],[5,"CategoricalField",866],[5,"DatetimeField",866],[15,"Datetime",941]],"r":[[0,2290],[1,2287],[2,2287],[3,2290],[4,2290],[5,2290],[87,2300],[88,2302],[89,2393],[153,2306],[154,2312],[155,2309],[156,2309],[165,2394],[194,2306],[206,2394],[229,2323],[231,2324],[236,2325],[375,2335],[380,2336],[404,2337],[564,2340],[565,2341],[566,2341],[567,2341],[568,2341],[569,2339],[573,2341],[574,2340],[622,2347],[623,2347],[704,944],[826,2347],[827,2341],[833,2395],[845,2395],[854,2339],[855,2395],[863,866],[972,2349],[973,2349],[974,2350],[978,2350],[979,2350],[1116,2396],[1117,2397],[1118,2352],[1125,2396],[1127,2397],[1137,2354],[1138,2354],[1139,2356],[1140,2355],[1141,2356],[1142,2355],[1143,2353],[1144,2353],[1145,2353],[1146,2354],[1147,2354],[1498,2360],[1603,2370],[1621,2374],[1657,2379],[1660,2380],[1661,2378],[1662,2380],[1663,2378],[1687,2379],[1742,2398],[1773,2379],[1805,2379],[1808,2379],[1812,2398],[1817,2399],[1819,2400],[1824,2385],[1826,2387],[1828,2387],[1831,2387],[1832,2387],[1833,2384],[1834,2388],[1836,2386],[1839,2387],[2146,2290],[2147,2290],[2148,0],[2156,2048],[2157,2401],[2158,2401],[2159,2401],[2160,2401],[2164,2401],[2165,2401],[2166,2401]],"b":[[309,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[311,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[1502,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1503,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1504,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1505,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1525,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1526,"impl-PartialEq-for-StructArray"],[1552,"impl-Array-for-StructArray"],[1553,"impl-StructArray"],[1556,"impl-StructArray"],[1557,"impl-Array-for-StructArray"],[1569,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1570,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1571,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1572,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1580,"impl-Array-for-StructArray"],[1581,"impl-StructArray"],[1597,"impl-StructArray"],[1598,"impl-Array-for-StructArray"],[2205,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2206,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2207,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMoGzgAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAQDFAAIAzQAAANAAAADVAA4A5QAAAOcAAADsAAAA7gAAAPAAAgD0AAEA9wA9ADYBAAA4AQAAPgEJAE4BCABZAQIAXQEXAHsBAQCHAQAAkwEBAJYBAQCsARAAwAE2APwBAwABAggADwIcAC4CAAA1AgQAPgIBAEICLABxAjgAqwIEALYCAAC5AhEA1AIAANYCAgDdAioACQMIABMDBwArAwAAOAMAADsDFABSAwEAVgMAAFgDHQB3AxcAkwMEAJwDIQC/AwEAwwMAAMUDBgDNAwAA1QMXAO8DIQASBAAAFAQCABwEAgAgBAAAIgQFAC4EAgA1BAMAOgQWAF0EBwBmBAIAagQBAG4EBAB0BAAAdwQAAHoEAAB8BAAAfwQDAIQEIgCoBDYA4AQDAO8EDgALBQUAEwU1AEsFAQBRBQEAVQUBAFkFAABcBQEAXwUAAGEFAABnBSQAjQUAAJMFAACVBQQAoQUZAL0FAQDDBQAAxQUHAM4FAQDRBQEA1AUGANwFAQDfBQkA6gUNAPkFAQD9BQAA/wUAAAEGAgAHBgAACQYAABEGAAATBgEAFgYAABkGAQAcBg0AKwYCADEGAQA1BggAPwYBAEUGAABHBgcAUgYDAFgGBQBgBgEAbgYCAHIGAwB3BgEAegYAAH0GAAB/BgAAgwY0AL0GCQDMBgAAzgYCANIGAADUBgEA1wYBANoGAwDfBhQA9gYFAP0GAAD/BgUABgcAAAgHAQALBwkAFwcBABoHCAAkBwAAJgcBACkHAAArBwEALgcBADEHKABcBzsAmgcFAKgHDwDABwEAwwcBAMYHAADIBwUA0AcpAP8HAQACCAAACQgCAA0IBAATCAEAFggAABgIBgAhCAQAJwgJADIIBwA8CAIARwgBAFEIAwBYCA0AZwgAAGkIAABtCA0AfAgBAH8IAACBCBoAnggCAKQIAgCoCAoAtwgTAMwIAwDRCAIA1QgAANgIDQDnCAAA6ggEAA=="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","Intersect","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","CorrCov","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","corr_cov_options","is_corr","rolling_options","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","try_new_streaming_if_requested","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_cross","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_parse","try_parse_interval","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1727,"polars_lazy::dsl::AggExpr"],[1734,"polars_lazy::dsl::BooleanFunction"],[1737,"polars_lazy::dsl::Expr"],[1772,"polars_lazy::dsl::FunctionExpr"],[1817,"polars_lazy::dsl::StringFunction"],[1837,"polars_lazy::dsl::TemporalFunction"],[1839,"polars_lazy::dsl::binary"],[1860,"polars_lazy::dsl::cat"],[1861,"polars_lazy::dsl::dt"],[1917,"polars_lazy::dsl::function_expr"],[2148,"polars_lazy::dsl::function_expr::BooleanFunction"],[2151,"polars_lazy::dsl::function_expr::FunctionExpr"],[2196,"polars_lazy::dsl::function_expr::StringFunction"],[2216,"polars_lazy::dsl::function_expr::TemporalFunction"],[2218,"polars_lazy::dsl::function_expr::cat"],[2220,"polars_lazy::dsl::function_expr::pow"],[2224,"polars_lazy::dsl::function_expr::rolling"],[2259,"polars_lazy::dsl::function_expr::rolling::RollingFunction"],[2262,"polars_lazy::dsl::function_expr::rolling_by"],[2295,"polars_lazy::dsl::function_expr::trigonometry"],[2339,"polars_lazy::dsl::functions"],[2414,"polars_lazy::dsl::python_udf"],[2479,"polars_lazy::dsl::string"],[2541,"polars_lazy::dsl::udf"],[2547,"polars_lazy::frame"],[3036,"polars_lazy::frame::pivot"],[3038,"polars_lazy::prelude"],[3665,"polars_lazy::prelude::DslPlan"],[3717,"polars_lazy::prelude::LiteralValue"],[3720,"dyn_clone::sealed"],[3721,"polars_plan::dsl::meta"],[3722,"polars_plan::dsl::expr"],[3723,"polars_plan::dsl::struct_"],[3724,"polars_utils::pl_str"],[3725,"alloc::sync"],[3726,"polars_error"],[3727,"core::result"],[3728,"polars_plan::dsl::selector"],[3729,"core::convert"],[3730,"polars_plan::dsl::array"],[3731,"polars_plan::dsl::list"],[3732,"polars_plan::dsl::expr_dyn_fn"],[3733,"polars_core::frame::column"],[3734,"core::option"],[3735,"core::ops::function"],[3736,"core::marker"],[3737,"polars_plan::plans::visitor"],[3738,"polars_plan::dsl::function_expr"],[3739,"polars_core::datatypes::dtype"],[3740,"polars_core::chunked_array::ops::sort::options"],[3741,"polars_plan::dsl::function_expr::schema"],[3742,"polars_core::datatypes::field"],[3743,"core::any"],[3744,"alloc::vec"],[3745,"polars_plan::dsl::binary"],[3746,"core::clone"],[3747,"polars_plan::dsl::udf"],[3748,"polars_core::chunked_array::cast"],[3749,"polars_plan::dsl::cat"],[3750,"polars_plan::dsl::arity"],[3751,"polars_plan::dsl::function_expr::bitwise"],[3752,"polars_plan::dsl::function_expr::boolean"],[3753,"polars_plan::dsl::function_expr::cat"],[3754,"polars_plan::dsl::function_expr::datetime"],[3755,"polars_plan::dsl::function_expr::pow"],[3756,"polars_plan::dsl::function_expr::strings"],[3757,"polars_plan::dsl::function_expr::struct_"],[3758,"polars_plan::dsl::functions::temporal"],[3759,"polars_plan::dsl::options"],[3760,"core::iter::traits::collect"],[3761,"polars_lazy::dsl::eval"],[3762,"polars_core::utils"],[3763,"polars_time::windows::duration"],[3764,"polars_time::windows::group_by"],[3765,"polars_core::datatypes::time_unit"],[3766,"serde::de"],[3767,"polars_core::series"],[3768,"polars_plan::plans"],[3769,"polars_core::series::ops"],[3770,"polars_plan::dsl::dt"],[3771,"core::cmp"],[3772,"polars_lazy::dsl::list"],[3773,"polars_arrow::legacy::kernels::ewm"],[3774,"polars_core::chunked_array::ops"],[3775,"core::fmt"],[3776,"polars_plan::plans::apply"],[3777,"polars_ops::frame::join::iejoin"],[3778,"polars_plan::dsl::function_expr::range"],[3779,"polars_plan::dsl::function_expr::list"],[3780,"polars_plan::dsl::function_expr::array"],[3781,"polars_plan::dsl::function_expr::binary"],[3782,"polars_plan::dsl::function_expr::business"],[3783,"alloc::string"],[3784,"polars_plan::plans::options"],[3785,"polars_schema::schema"],[3786,"core::hash"],[3787,"polars_ops::series::ops::interpolation::interpolate"],[3788,"polars_ops::series::ops::is_between"],[3789,"polars_plan::dsl::name"],[3790,"polars_plan::plans::lit"],[3791,"polars_core::utils::supertype"],[3792,"polars_plan::dsl::python_udf"],[3793,"polars_utils::idx_vec"],[3794,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3795,"polars_ops::series::ops::rank"],[3796,"polars_time::group_by::dynamic"],[3797,"polars_core::chunked_array::ops::rolling_window"],[3798,"polars_core::datatypes"],[3799,"polars_core::chunked_array"],[3800,"polars_time::chunkedarray::rolling_window"],[3801,"polars_core::chunked_array::ops::search_sorted"],[3802,"serde::ser"],[3803,"polars_core::series::series_trait"],[3804,"polars_plan::dsl::string"],[3805,"polars_ops::chunked_array::list::to_struct"],[3806,"compact_str"],[3807,"polars_ops::series::ops::business"],[3808,"polars_arrow::legacy::kernels::time"],[3809,"polars_plan::dsl::function_expr::rolling"],[3810,"polars_plan::dsl::function_expr::rolling_by"],[3811,"polars_plan::dsl::function_expr::trigonometry"],[3812,"polars_core::frame"],[3813,"rayon::iter"],[3814,"polars_utils::python_function"],[3815,"pyo3::types::any"],[3816,"pyo3::instance"],[3817,"polars_utils::arena"],[3818,"polars_plan::plans::ir"],[3819,"polars_plan::plans::aexpr"],[3820,"polars_plan::frame::opt_state"],[3821,"polars_plan::plans::anonymous_scan"],[3822,"polars_lazy::scan::anonymous_scan"],[3823,"polars_core::schema"],[3824,"polars_utils::index"],[3825,"polars_lazy::frame::exitable"],[3826,"polars_utils::aliases"],[3827,"polars_lazy::scan::csv"],[3828,"polars_lazy::scan::ipc"],[3829,"polars_lazy::scan::ndjson"],[3830,"polars_lazy::scan::parquet"],[3831,"polars_lazy::scan::file_list_reader"],[3832,"polars_io::cloud::options"],[3833,"polars_ops::frame::join::args"],[3834,"bitflags::iter"],[3835,"std::path"],[3836,"polars_plan::plans::ir::scan_sources"],[3837,"polars_io::options"],[3838,"polars_io::csv::write::options"],[3839,"polars_io::ipc::write"],[3840,"polars_io::json"],[3841,"polars_io::parquet::write::options"],[3842,"core::num::nonzero"],[3843,"polars_io::csv::read::options"],[3844,"chrono_tz::timezones"],[3845,"polars_core::datatypes::any_value"],[3846,"polars_core::frame::group_by::proxy"],[3847,"std::io"],[3848,"polars_io::parquet::write::writer"],[3849,"chrono::naive::datetime"],[3850,"polars_plan::dsl::functions::selectors"],[3851,"polars_plan::dsl::functions::horizontal"],[3852,"polars_plan::dsl::functions::arity"],[3853,"polars_plan::dsl"],[3854,"polars_plan::dsl::functions::range"],[3855,"polars_plan::dsl::functions::index"],[3856,"polars_plan::dsl::functions::coerce"],[3857,"polars_plan::dsl::functions::syntactic_sugar"],[3858,"polars_plan::dsl::functions::business"],[3859,"polars_plan::dsl::functions::concat"],[3860,"polars_plan::dsl::functions::correlation"],[3861,"polars_plan::dsl::functions::repeat"],[3862,"polars_utils::python_function::serde_wrap"],[3863,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AKbG`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?j22Ah`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF```````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j0008000Al11l002222`An33Bf44DhFbEnLf88G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf411044444444`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j11DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKdAKfAKh2102AKjAKlAKnAL`ALbALd0ALfALh4ALjALlALnAM`3AMb528AMd1AMf11098432323570;5AMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKjAKlAKnAMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`GjGn0`0ABd0000`00000000000000000000000000000BBd00ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd``````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;92:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIhAIj0Kb3`011120``1`00111300030311111`0````3``AHn0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIlACb<888ADl0007;:9AJh9AFh>AJf:98AIh87AIj76KbAFfA@bJd8AFn8AHn8AH`AHbAHd:A@`AHf;AIlACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJd7AFn9AHn8AH`AHbAHd:A@`AHf;AIlACb<3<<;:98AFh8765?43>21=1=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJdAFn9AHnAH`AHbAHd:A@`AHf;AIlACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIh65AIj545?>=AJh==4<AJf<;:3982276Kb73AJbAFfA@bJdAFn;AHnAH`AHbAHd=A@`AHf>AIlACb86;6;:;:9?8AFh8?765AIh54AIj43Kb?>=AJh=4<AJf<;:498376225?5?53=?>AFfObJd36?>=;6<00040AHn111AFnADl5A@b8=444608`=AJbAHf33:8264>5AH`AHbAHdAIhA@`5AIjAIlACbKb8=2=AFf:>>140<Jd?AFhAHn<;:98=76542105;=22223?2AJhAFn32AJf?>=<;AHf;:987A@b743652AH`AHbAHdAIhA@`6AIjAIlACbKbJd00AFhAHnAFf=3AJhAFn43AJf?>=<;AHf;:9824A@b843762AH`AHbAHdAIhA@`6AIjAIlACbKbJd0=>=8;BBf0BBhBBjBBlBBnBC`BCbBCdBCf55BChBCjBCl14;3BCn:BD`49BDbBDd0>BDfBBf240;4BDh;13:624733?=BBj0BBl>BDj00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}{Alj}1{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}<<{{jL`}j}={{}j}{Anj}88{{}{{Bf{{Ab{Bd}}}}}}9{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Lhj}1{Ljj}{Elj}{Clj}{Ijj}{Llj}{Lnj}{Ebj}{J`j}{B`j}{M`j}{Dlj}{{{b{E`}}}j}==={MbEf}{Md{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{cc{}}{Gl{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}88888888{GhCj}9{MjCj}{H`Cj}{GjCj}<<<<<{I`Hn}===={{{b{E`}}}Ah}>{nAh}{jAh}{MnAh}{cc{}}{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fNf}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{{hB`}{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLn}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}};{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7```````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}00{{{ACh{ACf}}}ACd}{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Ln}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}0{{{b{CdAEd}}}f}{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}222222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}00{KbABn}{ADfABn}2222222{Ln{{Bl{ADh}}}}{LnADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{{{b{CdABn}}AHj}{{Bl{{ABl{{Bl{ABj}}}}}}}}{bAAn}000000000={{ABn{Bl{{Dn{Mn}}}}AHl}ABn}{{ABn{Bl{e}}AHl}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHl}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHn}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AI`}}}AEl}{{AEhB`}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}7{{AEh{Bl{AE`}}}AEh}{{AEhAIb}AEh}{{AEhIj}AEh}:::{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}>=={{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AElc}AEl{{Aj{{Bl{In}}}}}}{{AEl{Bl{In}}}AEl}>{{AEh{Bl{AId}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEh{Bl{AGj}}}AEh}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AEl{Bl{AGj}}}AEl}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHn}}}AHn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIh}}}AIh}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIj}}}AIj}{{{b{AIl}}}AIl}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIn}`{{b{b{c}}}AIn{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHn}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIl}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHn}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{AIl}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{AIl}}{b{AIl}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}000{AFhAFn}11111111111{AJ`AIj}222`{{{b{AIj}}}Cn}{{{b{AJb}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHn}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{AIl}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}1{{{b{Jd}}}B`}2{{{b{AIj}}}B`}{{{b{AHn}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJfj}{AIjj}````{AIjAIj}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHn}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJh}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIn}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJb}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}`{{{b{ADl}}AJh}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHn}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{AIl}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIj}}}{{Bl{AJ`}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJj{c}}}AJl}{{{b{AHf}}c}{{AJn{c}}}AJl}{{{b{Jd}}Cl{Bl{{b{AIf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AK`}}}}}{{Bn{AK`}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{{{b{E`}}}{{Af{JdAd}}}}0{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJl}{{{b{AHf}}ABjc}{{Af{fAd}}}AJl}```````````````````````````````````````````````````````","D":"GLl","p":[[1,"reference"],[5,"Private",3720],[1,"unit"],[5,"MetaNameSpace",5,3721],[6,"Expr",5,3722],[5,"StructNameSpace",5,3723],[5,"PlSmallStr",3724],[1,"slice"],[5,"Arc",3725],[6,"PolarsError",3726],[6,"Result",3727],[6,"Selector",5,3728],[10,"Into",3729],[5,"ArrayNameSpace",5,3730],[5,"ListNameSpace",5,3731],[1,"bool"],[10,"AsRef",3729],[10,"FunctionOutputField",5,3732],[5,"SpecialEq",5,3732],[6,"Column",3733],[17,"Output"],[6,"Option",3734],[10,"Fn",3735],[10,"Send",3736],[10,"Sync",3736],[0,"mut"],[6,"VisitRecursion",3737],[10,"FnMut",3735],[6,"FunctionExpr",5,3738],[1,"i64"],[6,"DataType",3739],[5,"SortOptions",3740],[5,"SortMultipleOptions",3740],[5,"FieldsMapper",5,3741],[5,"Field",3742],[10,"ColumnsUdf",5,3732],[10,"Any",3743],[6,"AggExpr",5,3722],[5,"Vec",3744],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1839,3745],[6,"Operator",5,3722],[10,"Clone",3746],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3732],[5,"UserDefinedFunction",5,3747],[10,"ColumnBinaryUdf",5,3732],[6,"CastOptions",3748],[5,"CategoricalNameSpace",5,3749],[5,"When",5,3750],[5,"Then",5,3750],[5,"ChainedWhen",5,3750],[5,"ChainedThen",5,3750],[6,"LazySerde",5,3722],[6,"Excluded",5,3722],[6,"BitwiseFunction",5,3751],[6,"BitwiseAggFunction",5,3751],[6,"BooleanFunction",5,3752],[6,"CategoricalFunction",5,3753],[6,"TemporalFunction",5,3754],[6,"PowFunction",5,3755],[6,"StringFunction",5,3756],[6,"StructFunction",5,3757],[5,"DatetimeArgs",5,3758],[5,"DurationArgs",5,3758],[5,"RollingCovOptions",5,3759],[5,"StrptimeOptions",5,3759],[5,"JoinOptions",5,3759],[6,"WindowType",5,3759],[6,"WindowMapping",5,3759],[6,"NestedType",5,3759],[5,"UnpivotArgsDSL",5,3759],[17,"Item"],[10,"IntoIterator",3760],[1,"u8"],[10,"ExprEvalExtension",5,3761],[1,"usize"],[1,"f64"],[10,"IntoVec",3762],[5,"Duration",3038,3763],[6,"ClosedWindow",3764],[6,"TimeUnit",3765],[10,"BinaryUdfOutputField",5,3732],[10,"Deserializer",3766],[10,"Deserialize",3766],[5,"Series",3767],[6,"DslPlan",3038,3768],[6,"NullBehavior",3769],[5,"DateLikeNameSpace",1861,3770],[10,"PartialEq",3771],[10,"Sized",3736],[10,"ListNameSpaceExtension",5,3772],[5,"EWMOptions",3773],[6,"FillNullStrategy",3774],[5,"Formatter",3775],[5,"Error",3775],[10,"UdfSchema",5,3776],[1,"u16"],[1,"i16"],[1,"f32"],[1,"u32"],[1,"i8"],[6,"InequalityOperator",3777],[6,"RangeFunction",3778],[6,"ListFunction",3779],[6,"ArrayFunction",3780],[6,"BinaryFunction",3781],[6,"BusinessFunction",3782],[5,"String",3783],[5,"FunctionOptions",3784],[5,"Schema",3785],[6,"Context",3768],[10,"Hasher",3786],[6,"InterpolationMethod",3787],[10,"IntoListNameSpace",5,3772],[10,"Display",3775],[6,"ClosedInterval",3788],[5,"ExprNameNameSpace",5,3789],[10,"Literal",3038,3790],[10,"FnOnce",3735],[5,"SuperTypeOptions",3791],[5,"PythonUdfExpression",2414,3792],[5,"UnitVec",3793],[1,"tuple"],[6,"QuantileMethod",3794],[5,"RankOptions",3038,3795],[5,"RollingGroupOptions",3038,3796],[5,"RollingOptionsFixedWindow",3797],[5,"Float64Type",3798],[5,"ChunkedArray",3799],[10,"Copy",3736],[5,"RollingOptionsDynamicWindow",3800],[6,"SearchSortedSide",3801],[10,"Serializer",3802],[10,"Serialize",3802],[6,"IsSorted",3803],[5,"StringNameSpace",2479,3804],[6,"ListToStructArgs",3805],[5,"CompactString",3806],[6,"ToCompactStringError",3806],[5,"TypeId",3743],[6,"Roll",3807],[6,"NonExistent",3808],[6,"RollingFunction",2224,3809],[6,"RollingFunctionBy",2262,3810],[6,"TrigonometricFunction",2295,3811],[5,"DataFrame",3812],[8,"PolarsResult",3726],[5,"LazyFrame",2547],[10,"IntoParallelIterator",3813],[5,"UnionArgs",3038,3784],[5,"PythonFunction",2414,3814],[5,"PyAny",3815],[5,"Py",3816],[5,"PythonGetOutput",2414,3792],[1,"char"],[5,"Node",3817],[6,"IR",3818],[5,"Arena",3817],[6,"AExpr",3819],[5,"LazyGroupBy",2547],[5,"OptFlags",2547,3820],[5,"JoinBuilder",2547],[10,"AnonymousScan",3038,3821],[5,"ScanArgsAnonymous",2547,3822],[8,"SchemaRef",3823],[8,"IdxSize",3824],[5,"InProcessQuery",2547,3825],[8,"PlHashMap",3826],[5,"LazyCsvReader",2547,3827],[5,"ScanArgsIpc",2547,3828],[5,"LazyJsonLineReader",2547,3829],[5,"ScanArgsParquet",2547,3830],[10,"LazyFileListReader",2547,3831],[5,"CloudOptions",3832],[6,"JoinCoalesce",3833],[5,"DynamicGroupOptions",3038,3796],[6,"JoinType",3038,3833],[5,"Iter",3834],[5,"IterNames",3834],[5,"JoinArgs",3038,3833],[10,"IntoLazy",2547],[8,"AllowedOptimizations",2547,3820],[5,"Path",3835],[5,"PathBuf",3835],[6,"ScanSources",3836],[5,"RowIndex",3837],[8,"Schema",3823],[8,"PyObject",3816],[5,"CsvWriterOptions",3038,3838],[5,"IpcWriterOptions",3038,3839],[5,"JsonWriterOptions",3038,3840],[5,"ParquetWriteOptions",3038,3841],[5,"IRPlan",3818],[6,"SinkType",3784],[6,"UniqueKeepStrategy",3812],[6,"JoinValidation",3038,3833],[8,"NonZeroUsize",3842],[6,"CsvEncoding",3843],[6,"NullValues",3843],[6,"Tz",3844],[6,"RankMethod",3038,3795],[6,"LiteralValue",3038,3790],[5,"AnonymousScanOptions",3038,3784],[6,"Ordering",3771],[6,"AnyValue",3845],[10,"PolarsTemporalGroupby",3038,3796],[6,"GroupsProxy",3846],[5,"Null",3038,3790],[5,"AnonymousScanArgs",3038,3821],[5,"IpcWriter",3839],[10,"Write",3847],[5,"ParquetWriter",3848],[5,"NaiveDateTime",3849],[8,"OpaqueColumnUdf",5],[15,"Quantile",1727],[15,"Min",1727],[15,"Max",1727],[15,"IsBetween",2148],[15,"Any",2148],[15,"All",2148],[15,"SortBy",1737],[15,"Filter",1737],[15,"Cast",1737],[15,"Sort",1737],[15,"Gather",1737],[15,"RenameAlias",1737],[15,"Ternary",1737],[15,"Function",1737],[15,"Window",1737],[15,"AnonymousFunction",1737],[15,"Slice",1737],[15,"BinaryExpr",1737],[15,"QCut",2151],[15,"Entropy",2151],[15,"Log",2151],[15,"Hist",2151],[15,"Cut",2151],[15,"Correlation",2151],[15,"Round",2151],[15,"TopK",2151],[15,"TopKBy",2151],[15,"RoundSF",2151],[15,"EwmMeanBy",2151],[15,"Clip",2151],[15,"BackwardFill",2151],[15,"ForwardFill",2151],[15,"Random",2151],[15,"GatherEvery",2151],[15,"ValueCounts",2151],[15,"Rank",2151],[15,"EwmMean",2151],[15,"EwmStd",2151],[15,"EwmVar",2151],[15,"ReplaceStrict",2151],[15,"CumCount",2151],[15,"CumSum",2151],[15,"CumProd",2151],[15,"CumMin",2151],[15,"CumMax",2151],[15,"ConcatHorizontal",2196],[15,"ConcatVertical",2196],[15,"ExtractGroups",2196],[15,"JsonDecode",2196],[15,"PadStart",2196],[15,"PadEnd",2196],[15,"SplitExact",2196],[15,"Contains",2196],[15,"Find",2196],[15,"Replace",2196],[15,"DatetimeFunction",2216],[15,"CorrCov",2259],[15,"GroupBy",3665],[15,"Union",3665],[15,"Sort",3665],[15,"Scan",3665],[15,"ExtContext",3665],[15,"DataFrameScan",3665],[15,"IR",3665],[15,"Select",3665],[15,"HStack",3665],[15,"MapFunction",3665],[15,"Cache",3665],[15,"Filter",3665],[15,"Distinct",3665],[15,"Slice",3665],[15,"Sink",3665],[15,"Join",3665],[15,"HConcat",3665],[15,"PythonScan",3665],[15,"Range",3717]],"r":[[8,3722],[23,3730],[32,3732],[35,3751],[36,3751],[38,3752],[45,3753],[46,3749],[50,3750],[51,3750],[55,3732],[57,3732],[78,3758],[90,3758],[101,3722],[106,3722],[107,3761],[108,3789],[116,3741],[117,3789],[127,3738],[128,3732],[134,3732],[149,3772],[165,3759],[172,3722],[179,3731],[180,3772],[195,3721],[214,3759],[221,3722],[222,3722],[234,3755],[246,3732],[258,3759],[267,3728],[279,3732],[287,3756],[294,3759],[296,3757],[297,3723],[305,3754],[307,3750],[329,3776],[332,3759],[335,3747],[340,3750],[343,3759],[344,3759],[392,3850],[396,3851],[403,3851],[406,3852],[410,3853],[412,3854],[427,3855],[429,3855],[435,3856],[436,3857],[438,3853],[440,3750],[528,3858],[535,3857],[538,3853],[635,3851],[636,3850],[637,3850],[638,3859],[639,3859],[640,3859],[649,3860],[651,3851],[655,3851],[660,3854],[661,3758],[662,3854],[663,3854],[825,3853],[827,3850],[828,3850],[829,3758],[934,3853],[980,3851],[983,3859],[1059,3853],[1106,3850],[1145,3854],[1146,3854],[1203,3857],[1205,3857],[1215,3853],[1218,3853],[1222,3790],[1232,3852],[1243,3853],[1246,3853],[1254,3857],[1258,3851],[1259,3857],[1262,3851],[1263,3857],[1271,3857],[1275,3851],[1302,3857],[1304,3853],[1317,3860],[1324,3853],[1327,3857],[1331,3851],[1335,3861],[1348,3860],[1349,3860],[1429,3860],[1437,3853],[1443,3857],[1447,3851],[1454,3750],[1457,3854],[1641,3853],[1696,3750],[1839,3745],[1860,3749],[1861,3770],[1935,3751],[1936,3751],[1938,3752],[1942,3753],[1992,3738],[2057,3755],[2097,3756],[2105,3757],[2110,3754],[2143,3738],[2144,3738],[2145,3738],[2146,3738],[2147,3738],[2218,3753],[2222,3755],[2229,3809],[2266,3810],[2310,3811],[2339,3758],[2340,3758],[2341,3850],[2342,3851],[2344,3851],[2345,3852],[2346,3854],[2347,3855],[2348,3855],[2349,3856],[2350,3857],[2351,3857],[2352,3851],[2353,3850],[2355,3850],[2357,3859],[2360,3859],[2361,3859],[2362,3860],[2363,3851],[2364,3851],[2365,3854],[2366,3854],[2367,3758],[2368,3854],[2369,3854],[2372,3850],[2373,3850],[2374,3758],[2375,3851],[2376,3859],[2379,3850],[2380,3854],[2381,3854],[2382,3857],[2383,3857],[2384,3852],[2385,3857],[2386,3857],[2387,3857],[2391,3857],[2396,3857],[2397,3860],[2398,3857],[2399,3851],[2400,3861],[2401,3860],[2402,3860],[2405,3860],[2406,3857],[2407,3854],[2408,3854],[2414,3792],[2415,3792],[2416,3862],[2418,3814],[2419,3792],[2420,3792],[2479,3804],[2541,3747],[2547,3820],[2555,3825],[2558,3827],[2559,3831],[2562,3829],[2564,3820],[2571,3822],[2572,3828],[2573,3830],[3038,3821],[3039,3821],[3040,3784],[3048,3838],[3055,3768],[3056,3763],[3058,3796],[3076,3839],[3078,3833],[3079,3833],[3080,3833],[3081,3840],[3083,3790],[3084,3790],[3090,3790],[3091,3790],[3097,3841],[3098,3796],[3101,3795],[3102,3795],[3104,3796],[3120,3784],[3521,3863]],"b":[[668,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[759,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[832,"impl-Expr"],[833,"impl-PartialEq-for-Expr"],[837,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[838,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[945,"impl-Debug-for-Expr"],[946,"impl-Display-for-Expr"],[949,"impl-Display-for-Operator"],[950,"impl-Debug-for-Operator"],[952,"impl-Display-for-BitwiseFunction"],[953,"impl-Debug-for-BitwiseFunction"],[955,"impl-Display-for-BooleanFunction"],[956,"impl-Debug-for-BooleanFunction"],[957,"impl-Debug-for-CategoricalFunction"],[958,"impl-Display-for-CategoricalFunction"],[959,"impl-Debug-for-TemporalFunction"],[960,"impl-Display-for-TemporalFunction"],[961,"impl-Debug-for-PowFunction"],[962,"impl-Display-for-PowFunction"],[963,"impl-Display-for-StringFunction"],[964,"impl-Debug-for-StringFunction"],[965,"impl-Display-for-StructFunction"],[966,"impl-Debug-for-StructFunction"],[967,"impl-Display-for-FunctionExpr"],[968,"impl-Debug-for-FunctionExpr"],[997,"impl-From%3Cu16%3E-for-Expr"],[999,"impl-From%3Ci16%3E-for-Expr"],[1000,"impl-From%3Ci32%3E-for-Expr"],[1001,"impl-From%3Ci64%3E-for-Expr"],[1002,"impl-From%3Cu8%3E-for-Expr"],[1003,"impl-From%3Cf32%3E-for-Expr"],[1004,"impl-From%3Cu32%3E-for-Expr"],[1005,"impl-From%3Cu64%3E-for-Expr"],[1006,"impl-From%3Cf64%3E-for-Expr"],[1007,"impl-From%3Cbool%3E-for-Expr"],[1008,"impl-From%3Ci8%3E-for-Expr"],[1009,"impl-From%3CAggExpr%3E-for-Expr"],[1010,"impl-From%3C%26str%3E-for-Expr"],[1015,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1016,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1027,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1036,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1039,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1040,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1051,"impl-From%3C%26str%3E-for-Selector"],[1053,"impl-From%3CPlSmallStr%3E-for-Selector"],[1054,"impl-From%3CExpr%3E-for-Selector"],[1055,"impl-From%3CString%3E-for-Selector"],[1078,"impl-Expr"],[1079,"impl-Hash-for-Expr"],[1387,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1388,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1391,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[2245,"impl-Debug-for-RollingFunction"],[2246,"impl-Display-for-RollingFunction"],[2281,"impl-Debug-for-RollingFunctionBy"],[2282,"impl-Display-for-RollingFunctionBy"],[2325,"impl-Debug-for-TrigonometricFunction"],[2326,"impl-Display-for-TrigonometricFunction"],[2597,"impl-OptFlags"],[2598,"impl-Flags-for-OptFlags"],[2735,"impl-UpperHex-for-OptFlags"],[2736,"impl-Debug-for-OptFlags"],[2737,"impl-Binary-for-OptFlags"],[2738,"impl-LowerHex-for-OptFlags"],[2739,"impl-Octal-for-OptFlags"],[2744,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2745,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2754,"impl-OptFlags"],[2755,"impl-Flags-for-OptFlags"],[2996,"impl-LazyFileListReader-for-LazyCsvReader"],[2997,"impl-LazyCsvReader"],[2998,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2999,"impl-LazyJsonLineReader"],[3015,"impl-LazyCsvReader"],[3016,"impl-LazyFileListReader-for-LazyCsvReader"],[3017,"impl-LazyJsonLineReader"],[3018,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3381,"impl-Debug-for-Duration"],[3382,"impl-Display-for-Duration"],[3385,"impl-Debug-for-JoinType"],[3386,"impl-Display-for-JoinType"],[3387,"impl-Display-for-JoinValidation"],[3388,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIKEAEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAfwIAAJkCDQCoAmUAEAMAABIDJAA4AwAAOgMAAEADAABCAxYAWgM4AJsDAACfAwEApQMAAKsDAACuAyYA1gMAAOYDAADoAwsA9wMEAP0DBwANBAAADwQCABcEAAAcBAAAHgQCACIEAAAkBAAAKQQBAC4EBAA2BAAAOAQTAE8EAQBSBAAAVAQkAKMEAgCnBAEAqwQAAL0EAADFBAAA0gQAANUEBQDeBAAA4QQAAOYEAADyBAAA9QQCAP0EAgABBQMACgUBAA4FAgATBQAAFQUBABsFAAAiBQAAJAUBACsFAAAtBQAANQUBADsFAAA9BQAAPwUAAEQFAgBeBQUAZQUcAIsFAACSBQAAmQUAAJ4FAACgBQEAowUAAKkFAQCvBQAAsQUAALMFAgC6BR4A2gUKAOkFSQA1BgAAOAYyAHYGAAB4BgAAegYmAKQGAQCpBgAAtgYAALoGAQC/BhMA1QYAANcGAADZBgEA3AYBAN8GBgDnBkgAMQcDADYHAgA7BwIAQQcDAEkHAQBSBwIAWAcAAFoHAABnBwAAdgcDAH4HSQHJCAEAzAgfAO0IAQDwCCcAGQkBABwJBwAoCQAANgkAAEMJAQBKCQEAVQkCAFkJAwBiCQMAagkGAHIJAQB1CRsAlAkEAJwJEwCxCQMAuAkCALwJAAC/CQAAxAkCAMkJAQDpCQMA/AkDAAMKAQAMCgIAEAoJAB0KAAAfCgAAJwoAACoKFABACgEARQoaAGQKAQBoCgAAbQoAAHEKGACPCgIAkwoHAKsKAACtCgEAsAoEALkKAQDECgAAygoCANIKAQDVCgwA8AoAAPgKAAD6CgEA/woBAAILAAAECwAACAsAAA0LAwASCwUAGwsBACELAwAtCwMAMgsBADcLAwA8CwAAPwsAAEgLAABNCwEAVwsBAFoLCABkCx8AhgsAAIgLAACLCwEAjgsJAJkLAACbCwEApQsBAK4LAQC1CwAAtwsAALkLAADJCwAAywsAANYLAQDdCwcA6AsAAOsLAQDuCwAA8AsDAPYLAAD5CwAA/QsDAAUMAAAHDAYAEQwCABUMAAAYDAoAJAwCACkMAAArDAAAMQwTAEgMWgCnDIsANA0TAEwNAABYDQAAXA0AAF4NEQBxDQAAdA0RAJgNAwCdDQIAoQ0AAKQNAwCrDQUAsg0BALYNAAC5DQIAvQ0BAMENAADDDQEAyA0VAN8NdgBXDgQAXQ4rAA=="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHNNHHHHHHHHHNHHNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_cross","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[295,"polars_ops::chunked_array::binary"],[296,"polars_core::datatypes"],[297,"polars_ops::chunked_array::binary::namespace"],[298,"polars_ops::chunked_array::scatter"],[299,"polars_utils::index"],[300,"polars_core::series"],[301,"polars_error"],[302,"core::marker"],[303,"core::option"],[304,"core::iter::traits::collect"],[305,"polars_ops::chunked_array::list::namespace"],[306,"polars_core::datatypes::aliases"],[307,"polars_core::frame::column"],[308,"polars_core::chunked_array::ops::sort::options"],[309,"polars_core::frame"],[310,"dyn_clone::sealed"],[311,"polars_utils::pl_str"],[312,"polars_ops::frame::join::hash_join"],[313,"polars_ops::frame::join::args"],[314,"polars_ops::frame::join::cross_join"],[315,"core::fmt"],[316,"core::convert"],[317,"core::hash"],[318,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[319,"polars_arrow::array::primitive"],[320,"alloc::string"],[321,"core::result"],[322,"compact_str"],[323,"core::any"],[324,"polars_ops::series::ops::arg_min_max"],[325,"polars_ops::series::ops"],[326,"polars_core::chunked_array::ops::search_sorted"],[327,"polars_ops::series::ops::various"],[328,"polars_ops::frame::join::general"],[329,"polars_ops::series::ops::clip"],[330,"polars_ops::series::ops::horizontal"],[331,"polars_ops::series::ops::index"],[332,"polars_ops::series::ops::bitwise"],[333,"polars_ops::series::ops::negate"],[334,"polars_ops::series::ops::not"],[335,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`0004476514765666514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222````2222Gh033333333`00`````````3``33300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}00{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0>>{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00??{{CbDb}{{Af{Ad}}}}1{dc{}}{{{d{Ad}}}{{Af{Ad}}}}0{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,295],[1,"reference"],[8,"BinaryChunked",296],[10,"BinaryNameSpaceImpl",4,297],[1,"u8"],[1,"slice"],[8,"BooleanChunked",296],[10,"ChunkedSet",4,298],[8,"IdxSize",299],[5,"Series",300],[8,"PolarsResult",301],[10,"Copy",302],[17,"Item"],[6,"Option",303],[10,"IntoIterator",304],[8,"UInt32Chunked",296],[10,"AsList",25],[8,"ListChunked",296],[10,"ListNameSpaceImpl",25,305],[1,"str"],[1,"bool"],[8,"StringChunked",296],[8,"IdxCa",306],[6,"Column",307],[1,"i64"],[1,"usize"],[5,"SortOptions",308],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",309],[5,"Private",310],[1,"unit"],[5,"PlSmallStr",311],[10,"JoinDispatch",80,312],[5,"JoinArgs",80,313],[0,"mut"],[6,"JoinCoalesce",80,313],[6,"JoinType",80,313],[6,"JoinValidation",80,313],[10,"CrossJoin",80,314],[1,"tuple"],[8,"ChunkJoinOptIds",80,313],[5,"Formatter",315],[8,"Result",315],[10,"DataFrameJoinOps",80],[10,"Into",316],[10,"Hasher",317],[10,"SeriesJoin",80,318],[8,"InnerJoinIds",80,313],[5,"PrimitiveArray",319],[8,"LeftJoinIds",80,313],[5,"String",320],[6,"Result",321],[5,"CompactString",322],[6,"ToCompactStringError",322],[5,"TypeId",323],[10,"ArgAgg",238,324],[10,"SeriesSealed",238,325],[6,"SearchSortedSide",238,326],[10,"SeriesMethods",238,327],[5,"Error",315]],"r":[[4,295],[5,297],[6,298],[26,305],[80,313],[81,313],[84,314],[88,313],[89,313],[90,313],[91,312],[93,313],[94,313],[97,313],[103,318],[108,328],[111,328],[114,328],[144,312],[236,80],[237,76],[239,324],[242,326],[243,327],[244,325],[251,329],[252,329],[253,329],[257,330],[258,331],[259,332],[260,332],[275,331],[278,332],[279,332],[280,330],[281,330],[282,330],[283,333],[284,334],[285,335],[286,330],[288,332],[289,332]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAEQAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAMAzQAAAM8AIADxAAUA+QACAP8AEAARAQEAFwEOAA=="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj12312312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{{}Bj}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKPNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_parse","try_parse_interval","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[286,"polars_time::series"],[307,"polars_utils::pl_str"],[308,"chrono::naive::datetime"],[309,"polars_time::windows::duration"],[310,"polars_time::windows::group_by"],[311,"polars_core::datatypes::time_unit"],[312,"polars_arrow::legacy::time_zone"],[313,"core::option"],[314,"polars_core::chunked_array::logical::datetime"],[315,"polars_error"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"polars_core::utils"],[324,"dyn_clone::sealed"],[325,"polars_time::chunkedarray::string::patterns"],[326,"core::fmt"],[327,"core::hash"],[328,"core::result"],[329,"core::any"],[330,"core::clone"],[331,"polars_time::windows::bounds"],[332,"polars_time::windows::window"],[333,"core::cmp"],[334,"polars_core::datatypes::dtype"],[335,"polars_core::frame::group_by::proxy"],[336,"alloc::vec"],[337,"alloc::string"],[338,"core::ops::function"],[339,"compact_str"],[340,"polars_core::series"],[341,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``00Bn11111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<<<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0```````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{{{n{Bd}}}{{Ad{f}}}}0{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",307],[5,"NaiveDateTime",308],[5,"Duration",83,309],[6,"ClosedWindow",83,310],[6,"TimeUnit",311],[6,"Tz",312],[1,"reference"],[6,"Option",313],[8,"DatetimeChunked",314],[8,"PolarsResult",315],[1,"bool"],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[1,"str"],[5,"DataFrame",322],[10,"IntoVec",323],[5,"Private",324],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,325],[1,"usize"],[5,"Formatter",326],[8,"Result",326],[10,"Hasher",327],[6,"Result",328],[5,"TypeId",329],[5,"DatetimeInfer",57],[10,"Clone",330],[10,"PolarsNumericType",317],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,331],[6,"Label",83,310],[6,"StartBy",83,310],[5,"Window",83,332],[6,"Ordering",333],[6,"DataType",334],[5,"BoundsIter",83,332],[8,"GroupsSlice",335],[8,"TimeZone",334],[5,"Vec",336],[1,"tuple"],[5,"String",337],[17,"Output"],[10,"Fn",338],[5,"CompactString",339],[6,"ToCompactStringError",339],[1,"u32"],[10,"AsSeries",286],[5,"Series",340],[10,"TemporalMethods",286],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,310],[2,309],[5,316],[6,320],[7,321],[9,332],[11,341],[12,341],[18,341],[22,24],[30,325],[84,331],[85,332],[86,310],[89,309],[91,310],[99,310],[101,286],[105,332],[174,309],[175,309],[205,310],[206,310]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFcAygAAAMwAAQDQAAoA4gABAOYAAgDqAAAA7QACAPEAAQD2AAgAAAEAAAIBAAAEAR0AJgEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCCQCRKMMHHHRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHFKFNNNNNNNNNNNNNNMNNNNNNNHNNNHNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIKFIKRIKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNKKKKMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","algebraic_ops","aliases","arena","binary_search","cache","cardinality_sketch","cell","chunks","clmul","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","vec","Abs","AbsDiff","abs_diff","max_abs_diff","alg_add_f64","alg_mul_f64","alg_sum_f64","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","CardinalitySketch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combine","default","deref","deref_mut","drop","estimate","from","init","insert","into","new","to_owned","try_from","try_into","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","Chunks","as_slice","borrow","borrow_mut","chunk_size","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","into_iter","new","next","next_back","size_hint","skip_in_place","to_owned","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","range_portion","try_arc_map","BytesHash","DirtyHash","HashPartitioner","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","dirty_hash","","drop","","eq","equivalent","","fmt","folded_multiply","from","","hash","hash_to_partition","","init","","into","","is_null","new","","num_partitions","peel_total_ord","to_owned","","to_total_ord","tot_eq","tot_hash","try_from","","try_into","","type_id","","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","AtomicIdxSize","Bounded","ChunkId","IdxSize","Indexable","Item","NonZeroIdxSize","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","Extrema","Slice2Uninit","SliceAble","SortedSlice","as_uninit","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::algebraic_ops"],[53,"polars_utils::aliases"],[71,"polars_utils::arena"],[138,"polars_utils::binary_search"],[143,"polars_utils::cache"],[180,"polars_utils::cardinality_sketch"],[201,"polars_utils::cell"],[221,"polars_utils::chunks"],[246,"polars_utils::clmul"],[252,"polars_utils::cpuid"],[254,"polars_utils::fixedringbuffer"],[277,"polars_utils::float"],[284,"polars_utils::floor_divmod"],[286,"polars_utils::functions"],[289,"polars_utils::hashing"],[341,"polars_utils::idx_vec"],[385,"polars_utils::index"],[450,"polars_utils::io"],[453,"polars_utils::itertools"],[463,"polars_utils::itertools::enumerate_idx"],[490,"polars_utils::mem"],[495,"polars_utils::min_max"],[502,"polars_utils::mmap"],[603,"polars_utils::nulls"],[608,"polars_utils::ord"],[610,"polars_utils::partitioned"],[629,"polars_utils::pl_str"],[687,"polars_utils::priority"],[710,"polars_utils::python_function"],[756,"polars_utils::slice"],[767,"polars_utils::sort"],[769,"polars_utils::sync"],[796,"polars_utils::sys"],[810,"polars_utils::total_ord"],[860,"polars_utils::vec"],[874,"num_traits"],[875,"core::cmp"],[876,"core::marker"],[877,"core::fmt"],[878,"core::iter::traits::collect"],[879,"core::clone"],[880,"core::result"],[881,"serde::de"],[882,"core::option"],[883,"core::hash"],[884,"core::default"],[885,"core::ops::function"],[886,"serde::ser"],[887,"core::any"],[888,"core::borrow"],[889,"alloc::sync"],[890,"core::ops::range"],[891,"alloc::vec"],[892,"core::slice::iter"],[893,"polars_error"],[894,"std::path"],[895,"std::io::error"],[896,"std::fs"],[897,"core::iter::traits::iterator"],[898,"core::ops::arith"],[899,"num_traits::cast"],[900,"num_traits::identities"],[901,"pyo3::marker"],[902,"pyo3::types::dict"],[903,"pyo3::instance"],[904,"core::iter::traits::exact_size"],[905,"core::iter::traits::double_ended"],[906,"memmap2"],[907,"memmap2::advice"],[908,"polars_utils::mmap::private"],[909,"bytes::bytes"],[910,"std::io"],[911,"hashbrown::map"],[912,"hashbrown::raw_entry"],[913,"std::ffi::os_str"],[914,"core::convert"],[915,"compact_str"],[916,"alloc::string"],[917,"alloc::borrow"],[918,"alloc::boxed"],[919,"polars_utils::python_function::serde_wrap"],[920,"core::mem::maybe_uninit"],[921,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00```ACb```````0AjAlACdACf43210``B`Bd101101010100010101010110000101111110010111110111011101010110111`Dn``0``EjEd100000101010110000100101001001010`F`0000000000000000000`Fd000000000000000000`Fh00000000000000000000000`````````Fl000000000000000000000`Fn00000`G```````GfGh101010101010Gj2212222`212`1212122112212222121212``Gn00000000000000000000000000000000000000000`````I``````HlHn10`101010101010111010110221101010Id122021If2Ih443434343````Jb0`000000`Jd0000000000000000000000000``````Kl00000Ld````Kn0Lb12012Lf123013030303223301230123011`23012333001303300330230123012220110300020330302301230123012Ib0`00```Ml00000000000000000Nd0`0000000000000000000000000000000000000000000000000000000`Oj000000000000000000000`````OnOl10000101010`100000100101010`0A@`121210121````A@fA@j`A@l0A@n0```AAd0000000000000000000000000``AAf00000000000ABd````0`AAj0``00000000000000000000000101AA`AAl11AAn02213333```ABh``00ABj`ABlABn1AC`","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}{{AbAb}Ab}0{cAb{{Af{}{{Ad{Ab}}}}}}````````22222{Ahc{}}{Ah{{Aj{ce}}}{}{}}{Ah{{Al{c}}}{}}22``{{{Bb{An{B`{c}}}}c}Bd{}}{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{An{B`{c}}}}}Bf{}}{{{Bb{Bd}}}Bd}{{{Bb{{B`{c}}}}}{{B`{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{{Bb{Bd}}{Bb{Bd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Bd}{{}{{B`{c}}}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{Bd}}}Bn}{c{{Bl{{B`{e}}}}}BnC`}{AhBf}0{{{Bb{An{B`{c}}}}Bd}BdBh}{{{Bb{Bd}}{Bb{Bd}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Bd}}{Bb{AnCd}}}Cf}{{{Bb{{B`{c}}}}{Bb{AnCd}}}Cfl}{cc{}}0{{{Bb{{B`{c}}}}Bd}{{Bb{c}}}{}}{{{Bb{An{B`{c}}}}{Ch{Bd}}}{{Ch{{Bb{Anc}}}}}{}}{{{Bb{An{B`{c}}}}Bd}{{Bb{Anc}}}{}}{{{Bb{{B`{c}}}}{Bb{c}}}{{Cj{Bd}}}{}}3{{{Bb{Bd}}{Bb{Anc}}}BfCl}{{}Ah}0{{}c{}}0{{{Bb{{B`{c}}}}}Cb{}}{{{Bb{An{B`{c}}}}}{{Cj{Bd}}}{}}{{{Bb{{B`{c}}}}}Ah{}}{{}{{B`{c}}}{}}{{{Bb{Bd}}{Bb{Bd}}}{{Cj{Bj}}}}{{{Bb{An{B`{c}}}}}{{Cj{c}}}{}}{{{Bb{An{B`{c}}}}Bdc}c{}}{{{Bb{An{B`{c}}}}Bde}BfCn{{Db{c}{{D`{c}}}}}}{{{Bb{Bd}}c}BlDd}{{{Bb{{B`{c}}}}e}BlDfDd}{{{Bb{An{B`{c}}}}BdBd}Bf{}}{{{Bb{An{B`{c}}}}Bd}cCn}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{An{B`{c}}}}Bde}{{Bl{Bf`}}}Cn{{Dh{c}{{D`{{Bl{c`}}}}}}}}{BbDj}0{{{Bb{{B`{c}}}}}Dl{}}{Ah{{B`{c}}}{}}`{{{Bb{Dn}}e}{{Bl{AhAh}}}{}{{Dh{{Bb{c}}}{{D`{Bj}}}}}}{{{Bb{{E`{c}}}}c}AhEb}0{{{Bb{Dn}}e}Ah{}{{Dh{{Bb{c}}}{{D`{Cb}}}}}}``{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{Ed{ce}}}}}{{Ed{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Ed{ce}}}{EfEh}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{An{Ej{ceg}}}}cCb}e{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{cc{}}0{{{Bb{{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{g}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{Ang}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}i}{{Bb{Ang}}}{}{{En{c}}EfEh}{}{{Db{{Bb{e}}}{{D`{g}}}}}}{{}Ah}0{{{Bb{An{Ed{ce}}}}ce}{{Bb{Ane}}}{EfEh}{}}{{}c{}}0{{gAh}{{Ej{ceg}}}{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{Ah{{Ed{ce}}}{EfEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}0{{{Bb{An{Ed{eg}}}}{Bb{c}}k}{{Bl{{Bb{Ang}}i}}}{}{{En{c}}EfEh}{}{}{{Db{{Bb{e}}}{{D`{{Bl{gi}}}}}}}}{{}{{Bl{c}}}{}}0{BbDj}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{F`}}}F`}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{AnF`}}{Bb{F`}}}Bf}{{}F`}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{F`}}}Ah}{cc{}}{{}Ah}{{{Bb{AnF`}}Fb}Bf}{{}c{}}8{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{}{{Fd{c}}}Cn}>=<{c{{Fd{c}}}{}};{Ffc{}}{{{Bb{{Fd{c}}}}}{}El}{{{Bb{An{Fd{c}}}}}{{Bb{Anc}}}El}=;{{{Fd{c}}}c{}}4{{}};:9`{{{Bb{{Fh{c}}}}}{{Bb{{E`{c}}}}}{}}98{{{Bb{{Fh{c}}}}}Ah{}}{{{Bb{{Fh{c}}}}}{{Fh{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Fh{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}Ah}{{}c{}}0{{{Bb{{E`{c}}}}Ah}{{Fh{c}}}{}}{{{Bb{An{Fh{c}}}}}{{Cj{e}}}{}{}}0{{{Bb{{Fh{c}}}}}{{Fj{Ah{Cj{Ah}}}}}{}}{{{Bb{An{Fh{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{FbFb}Fb}0{FbFb}000{{}Cb}0`{{{Bb{{Fl{c}}}}}{{Fj{{Bb{{E`{c}}}}{Bb{{E`{c}}}}}}}{}}{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Fl{c}}}}}Ah{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{An{Fl{c}}}}}Bf{}}{AhBf}{{{Bb{An{Fl{c}}}}cAh}Ahj}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Fl{c}}}}}Cb{}}09{Ah{{Fl{c}}}{}}{{{Bb{An{Fl{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Fl{c}}}}c}{{Cj{Bf}}}{}}<{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`{{}Cb}0{{{Bb{Fn}}}Cb}10{{}Fn}`{{G`G`}{{Fj{G`G`}}}}{{{Gb{c}}e}{{Gb{c}}}Bh{{Dh{c}{{D`{c}}}}}}{{AhAh{Gd{Ah}}}{{Gd{Ah}}}}{{{Gb{c}}g}{{Bl{{Gb{c}}e}}}Bh{}{{Dh{c}{{D`{{Bl{ce}}}}}}}}```{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Gf}}}Gf}{{{Bb{Gh}}}Gh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{{{Bb{Gj}}}Fb}{{{Bb{Gf}}}Fb}{AhBf}0{{{Bb{Gf}}{Bb{Gf}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Gf}}{Bb{AnCd}}}Cf}{{FbFb}Fb}{cc{}}0{{{Bb{Gf}}{Bb{Anc}}}BfCl}{{FbAh}Ah}{{{Bb{Gh}}Fb}Ah}{{}Ah}0{{}c{}}0{{{Bb{Gf}}}Cb}{{{Cj{{Bb{{E`{Gl}}}}}}Fb}Gf}{{AhFb}Gh}{{{Bb{Gh}}}Ah}{ce{}{}}{Bbc{}}0{{{Bb{Gf}}}c{}}{{{Bb{Gf}}{Bb{Gf}}}Cb}<{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{Gfc{}}``{{{Bb{An{Gn{c}}}}}{{Bb{An{E`{c}}}}}{}}0{{{Bb{{Gn{c}}}}}{{Bb{{E`{c}}}}}{}}0{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{{Bb{An{Gn{c}}}}}Bf{}}{{{Bb{{Gn{c}}}}}{{Gn{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Gn{c}}}{}}{{{Bb{{Gn{c}}}}}{{Bb{e}}}{}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}8{{{Bb{{Gn{c}}}}{Bb{{Gn{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{An{Gn{c}}}}e}Bf{}{{Af{}{{Ad{c}}}}}}{{{Bb{{Gn{c}}}}{Bb{AnCd}}}Cfl}{{{Bb{{E`{c}}}}}{{Gn{c}}}Bh}{cc{}}{{{Hb{c}}}{{Gn{c}}}{}}{e{{Gn{c}}}{}{{Af{}{{Ad{c}}}}}}{{}Ah}{{}c{}}{{{Bb{{Gn{c}}}}}Cb{}}{{{Bb{{Gn{c}}}}}{{Hd{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Hf{c}}}{}}{{{Bb{{Gn{c}}}}}Ah{}}{{}{{Gn{c}}}{}}{{{Bb{An{Gn{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Gn{c}}}}c}Bf{}}0{{{Bb{An{Gn{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{Ah{{Gn{c}}}{}}```````````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{E`{Hh}}}}Hh}{{Hj{Bf}}}}{{{Bb{Hl}}}Hl}{{{Bb{Hn}}}Hn}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{Hl}}{Bb{Hl}}}Cb}{{Bb{Bb{c}}}Cb{}}0{Hn{{Fj{HhHh}}}}{{{Bb{Hl}}{Bb{AnCd}}}Cf}{{{Bb{Hn}}{Bb{AnCd}}}Cf}{cc{}}{HhHl}1{{{Bb{{I`{}{{Ad{c}}}}}}Ah}cIb}0{{{Bb{Hl}}}Hh}{{}Ah}0`{{{Bb{AnHn}}}{{Bb{AnFb}}}}{{}c{}}0{{{Bb{Id}}}Cb}{{{Bb{Hn}}}Cb}{{{Bb{Hl}}}Cb}{{{Bb{c}}}Cb{}}{{{Bb{Id}}}Ah}{{}Hl}{{}Hn}{{{Bb{If}}}Ah}{{HhHh}Hn}{{IhFb}Hh}{{{Bb{Hl}}}{{Cj{Hh}}}}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{{{Bb{Ij}}Il}In}{{{Bb{Ij}}}{{Hj{J`}}}}0`{JbCb}{Jb{{Hb{c}}}{}}`{Jb{{Jd{JbHh}}}}{Jb{{Jd{JbDl}}}}{{Jbcg}CbAf{}{{Dh{e}{{D`{Cb}}}}}}{{Jbcg}{{Cj{Bj}}}Af{}{{Dh{e}{{D`{{Cj{Bj}}}}}}}}{Jb{{Bl{ce}}}{}{}}{Jb{{Bl{{Hb{c}}e}}}{}{}}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Jd{ce}}}}}{{Jd{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Jd{ce}}}AhJf{{Jh{}{{D`{}}}}JjJlJnj}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Jd{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}0{K`{{Kd{Kb}}}}{{{Bb{{Jd{ce}}}}}AhKf{{Jh{}{{D`{}}}}JjJlJnj}}{c{{Jd{ce}}}{}Kh}{{{Bb{An{Jd{ce}}}}}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{g}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}{}}{{{Bb{An{Jd{ce}}}}Ah}{{Cj{{Fj{e}}}}}{KfKj}{{Jh{}{{D`{}}}}JjJlJnj}}{{{Bb{{Jd{ce}}}}}{{Fj{Ah{Cj{Ah}}}}}Jf{{Jh{}{{D`{}}}}JjJlJnj}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{Bb{{E`{Gl}}}}}Bf}000{{{Bb{{E`{c}}}}}{{Bb{An{E`{c}}}}}j}`{{KlKl}Kl}000{{{Bb{Kl}}{Bb{Kl}}}Cb}0`````{{{Bb{Kn}}L`}{{Bl{BfIl}}}}{{{Bb{Kn}}L`AhAh}{{Bl{BfIl}}}}{{{Bb{Lb}}}Gl}{{{Bb{Kn}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Ld}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Lb}}}{{Bb{{E`{Gl}}}}}}{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{{Bb{Ld}}}Ld}{{{Bb{Lf}}}Lf}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{}Ld}{Ah{{Bb{c}}}{}}:{{{Bb{Ld}}}{{Bb{c}}}{}}111{Ah{{Bb{Anc}}}{}}000{AhBf}00{{{Bb{AnLb}}}Bf}1{{{Bb{J`}}}{{Hj{Bf}}}}{{{Bb{Kn}}{Bb{AnCd}}}{{Bl{BfLh}}}}{{{Bb{Ld}}{Bb{AnCd}}}Cf}{{{Bb{Lf}}{Bb{AnCd}}}Cf}{{{Bb{Lb}}{Bb{AnCd}}}Cf}{cc{}}{{{Hb{Gl}}}Ld}{LjLd}22{LdLf}31{LjLf}{{{Bb{J`}}}{{Hj{Ld}}}}{{{Gb{Lb}}}Ld}{c{{Ll{Lf}}}Ln}{{{Bb{{E`{Gl}}}}}Lf}{{{Bb{{E`{Gl}}}}}Ld}8{{{Hb{Gl}}}Lf}{{}Ah}000{{}c{}}000{{{Bb{Kn}}}{{Bl{BfIl}}}}{Kn{{Bl{M`Il}}}}{c{{Bl{KnIl}}}Mb}<{{{Bb{J`}}}{{Hj{Lb}}}}{{{Bb{J`}}Md}{{Hj{Lb}}}}{{{Bb{Lf}}}Ah}{{{Bb{Ld}}}Bf}{{{Bb{AnLf}}{Bb{An{E`{Gl}}}}}{{Ll{Ah}}}}{{{Bb{AnLf}}Ah}Ld}3{{{Bb{AnKn}}AhMf}{{Bl{BfIl}}}}{{{Bb{AnLf}}Mh}{{Ll{Fb}}}}{{{Bb{Ld}}{Gd{Ah}}}Ld}{Bbc{}}0{Ld{{Hb{Gl}}}}8{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}000{{{Bb{Kn}}}{{Bl{BfIl}}}}```{{{Bb{{Ib{}{{Mj{c}}}}}}}Cb{}}{{{Ib{}{{Mj{c}}}}}c{}}{{{Bb{c}}{Bb{c}}}Bj{hFn}}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{cc{}}{{}Ah}{{{Bb{{Ml{ceg}}}}}{{Bb{{E`{{Mn{ceg}}}}}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}}{{Bb{An{Hb{{Mn{ceg}}}}}}}{}{}{}}{{}c{}}{{{Hb{{Mn{ceg}}}}}{{Ml{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{N`{ceg}}}{}{}{}}{{{Bb{{Ml{ceg}}}}Fb}{{Fj{{N`{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Fj{{Nb{ceg}}Ah}}}{}{}{}}{{{Bb{An{Ml{ceg}}}}Fb}{{Nb{ceg}}}{}{}{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}```{{{Bb{Nd}}}{{Bb{Nf}}}}{{{Bb{Nd}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Nd}}}{{Bb{Ij}}}}{{{Bb{Nd}}}{{Bb{Nh}}}}00{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{Nd}}}Nd}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{Nd}}{Bb{Nd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Nd}{Ah{{Bb{c}}}{}}{{{Bb{Nd}}}{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{c{{Bl{Nd}}}Bn}{AhBf}{{{Bb{Nd}}{Bb{c}}}Cb{{Nj{Nh}}El}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Nd}}{Bb{AnCd}}}Cf}0{cc{}}{NlNd}{NnNd}{{{Bb{Nn}}}Nd}{{{Bb{Nh}}}Nd}{cNd{{Af{}{{Ad{{O`{Nh}}}}}}}}{cNd{{Af{}{{Ad{{Ob{Nh}}}}}}}}{cNd{{Af{}{{Ad{Nn}}}}}}{cNd{{Af{}{{Ad{Nd}}}}}}{cNd{{Af{}{{Ad{{Bb{Nh}}}}}}}}{cNd{{Af{}{{Ad{{Bb{Od}}}}}}}}{cNd{{Af{}{{Ad{Od}}}}}}{cNd{{Af{}{{Ad{{Bb{Nd}}}}}}}}88:{{{Bb{Nd}}{Bb{Anc}}}BfCl}{{}Ah}{{}c{}}{NdNn}{{{Bb{Nd}}{Bb{Nd}}}{{Cj{Bj}}}}{{{Bb{Nd}}c}BlDd}{Bbc{}}{BbNn}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{Bb{{Bl{NlOf}}}}{BbDj}{{{Bb{AnNd}}Od}Cf}{{{Bb{AnNd}}Oh}Cf}{{{Bb{AnNd}}{Bb{Nh}}}Cf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Oj{ce}}}}}{{Oj{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}Bj{EbEh}{}}{{Bb{Bb{c}}}Bj{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}CbEh{}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{Oj{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Oj{ce}}}}{Bb{{Oj{ce}}}}}{{Cj{Bj}}}{EbEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}`````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Ol}}}Ol}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{{On{e}}}}}BnA@`}{c{{Bl{Ol}}}Bn}{{{Bb{{E`{Gl}}}}}{{Hj{c}}}{{A@d{A@b}}}}{AhBf}0{{{Bb{Ol}}{Bb{Ol}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Ol}}{Bb{AnCd}}}Cf}{cc{}}0{A@bOl}{{}Ah}0{{}c{}}0{{{Bb{{On{{Bb{c}}}}}}e}BlA@`Dd}{{{Bb{Ol}}c}BlDd}{{{Bb{A@b}}}{{Hj{{Hb{Gl}}}}}}{Bbc{}}{{{Bb{{E`{Gl}}}}}{{Hj{A@`}}}}{{{Bb{{E`{Gl}}}}}{{Hj{Ol}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{A@`}}}{{Hj{{Hb{Gl}}}}}}{{{Bb{Ol}}}{{Hj{{Hb{Gl}}}}}}{BbDj}0````{{{Bb{A@f}}}{{Bb{{E`{{A@h{c}}}}}}}{}}{{{Bb{A@j}}}Cb}{{{Bb{{E`{Gl}}}}}Fb}{{{Bb{A@l}}}{{Cj{{Bb{c}}}}}{}}0{{{Bb{A@n}}{Gd{Ah}}}A@n}0{{e{Bb{An{Hb{Gl}}}}Ah}{{Bb{An{E`{g}}}}}{AA`j}{{Af{}{{Ad{c}}}}}{Jjj}}{{{Bb{AAb}}{Bb{{E`{{Fj{HhHh}}}}}}{Bb{An{Hb{Hh}}}}}Bf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{AAd{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{{AAd{c}}}}}{{Bb{c}}}{}}{AhBf}{{{Bb{{AAd{c}}}}{Bb{{AAd{c}}}}}CbH`}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{AAd{c}}}}{Bb{AnCd}}}Cfl}{{}{{AAd{c}}}{}}{cc{}}1{{{Bb{{AAd{c}}}}}{}{}}{{}Ah}{{}c{}}{{{Bb{{AAd{c}}}}}Cb{}}55{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}``{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{AAf}}}Fb}><;876```````54{AAhAAh}{AbAb}{{{Bb{{AAj{c}}}}}{{AAj{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}BjAA`}{{Bb{Bb{c}}}Bj{}}:9{{{Bb{{AAj{c}}}}}FbGj}9{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAAl}{{Bb{Bb{c}}}Cb{}}0{cc{}}{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}CbAA`}0{{{Bb{{AAj{c}}}}{Bb{Ane}}}BfAAnCl}{{}Ah}{{}c{}}{{{Bb{{AAj{c}}}}}CbIb}447{{{Bb{{AAj{c}}}}{Bb{{AAj{c}}}}}{{Cj{Bj}}}AA`}{ce{}{}}{Bbc{}}{{{Bb{{ABd{}{{AB`{c}}{ABb{e}}}}}}}c{EfEh}{}}{{{Bb{AA`}}{Bb{AA`}}}Bj}{{{Bb{AAl}}{Bb{AAl}}}Cb}{{{Bb{AA`}}{Bb{AA`}}}Cb}0{{{Bb{AAn}}{Bb{Anc}}}BfCl}{{{Bb{{E`{AAn}}}}{Bb{Anc}}}BfCl}223{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{AAj{c}}}eIb{}}``````{{{Bb{{ABh{}{{ABf{c}}}}}}g}{{Hb{e}}}{}{}{{Dh{{Bb{c}}}{{D`{e}}}}}}{{{ABh{}{{ABf{c}}}}g}{{Hb{e}}}{}{}{{Dh{c}{{D`{e}}}}}}{{{Bb{AnABj}}Ahc}Bfj}{{{Bb{An{Hb{c}}}}{Bb{An{Hb{e}}}}g}Bf{}{}{{Dh{ce}{{D`{{Cj{{Fj{ce}}}}}}}}}}{ABl{{Fj{AhAh}}}}{{{Bb{AnABn}}c}Bf{}}{{{Bb{ABl}}}{{Fj{AhAh}}}}{{AhAb}AC`}","D":"A@l","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",874],[10,"PartialOrd",875],[10,"Copy",876],[10,"Debug",877],[10,"Send",876],[10,"Sync",876],[1,"f64"],[17,"Item"],[10,"IntoIterator",878],[1,"usize"],[8,"PlHashMap",53],[8,"PlHashSet",53],[0,"mut"],[5,"Arena",71],[1,"reference"],[5,"Node",71],[1,"unit"],[10,"Clone",879],[6,"Ordering",875],[6,"Result",880],[10,"Deserializer",881],[10,"Deserialize",881],[1,"bool"],[5,"Formatter",877],[8,"Result",877],[1,"array"],[6,"Option",882],[10,"Hasher",883],[10,"Default",884],[17,"Output"],[10,"FnOnce",885],[10,"Serializer",886],[10,"Serialize",886],[10,"FnMut",885],[5,"TypeId",887],[1,"u32"],[10,"ExponentialSearch",138],[1,"slice"],[10,"Ord",875],[5,"FastFixedCache",143],[10,"Hash",883],[10,"Eq",875],[5,"FastCachedFunc",143],[10,"Sized",876],[10,"Borrow",888],[5,"CardinalitySketch",180],[1,"u64"],[5,"SyncUnsafeCell",201],[1,"never"],[5,"Chunks",221],[1,"tuple"],[5,"FixedRingBuffer",254],[10,"IsFloat",277],[10,"FloorDivMod",284],[5,"Arc",889],[5,"Range",890],[5,"BytesHash",289],[5,"HashPartitioner",289],[10,"DirtyHash",289],[1,"u8"],[5,"UnitVec",341],[10,"PartialEq",875],[5,"Vec",891],[5,"Iter",892],[5,"IterMut",892],[8,"IdxSize",385],[8,"PolarsResult",893],[5,"NullableIdxSize",385],[5,"ChunkId",385],[10,"Indexable",385],[10,"IsNull",603],[10,"Bounded",385],[10,"NullCount",385],[10,"ToIdx",385],[5,"Path",894],[5,"Error",895],[6,"PolarsError",893],[5,"File",896],[10,"Itertools",453],[5,"EnumerateIdx",463],[10,"Iterator",897],[10,"Add",898],[10,"FromPrimitive",899],[10,"AddAssign",898],[10,"One",900],[5,"Python",901],[5,"PyDict",902],[5,"Bound",903],[10,"ExactSizeIterator",904],[10,"Zero",900],[10,"DoubleEndedIterator",905],[10,"MinMax",495],[5,"Mmap",502,906],[6,"Advice",907],[5,"MMapSemaphore",502],[5,"MemSlice",502,908],[5,"MemReader",502],[5,"Error",877],[5,"Bytes",909],[8,"Result",895],[10,"Read",910],[5,"MmapMut",906],[10,"MmapAsRawDesc",906],[5,"MmapOptions",906],[5,"RemapOptions",906],[6,"SeekFrom",910],[17,"Inner"],[5,"PartitionedHashMap",610],[5,"HashMap",911],[5,"RawEntryBuilder",912],[5,"RawEntryBuilderMut",912],[5,"PlSmallStr",629],[5,"OsStr",913],[1,"str"],[10,"AsRef",914],[5,"CompactString",915],[5,"String",916],[6,"Cow",917],[5,"Box",918],[1,"char"],[6,"ToCompactStringError",915],[5,"Arguments",877],[5,"Priority",687],[5,"PythonFunction",710],[5,"PySerializeWrap",710,919],[10,"TrySerializeToBytes",710,919],[8,"PyObject",903],[10,"From",914],[10,"Slice2Uninit",756],[20,"MaybeUninit",920],[10,"SortedSlice",756],[10,"Extrema",756],[10,"SliceAble",756],[10,"TotalOrd",810],[5,"ThreadPool",921],[5,"SyncPtr",769],[5,"MemInfo",796],[1,"f32"],[5,"TotalOrdWrap",810],[10,"TotalEq",810],[10,"TotalHash",810],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",810],[17,"ItemIn"],[10,"ConvertVec",860],[10,"ResizeFaster",860],[10,"IntoRawParts",860],[10,"PushUnchecked",860],[10,"CapacityByFactor",860],[10,"InitHashMaps",53],[8,"PlIndexMap",53],[8,"PlIndexSet",53]],"r":[[0,385],[1,385],[505,908],[506,906],[710,919],[712,919],[714,919]],"b":[[365,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[367,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[549,"impl-From%3CVec%3Cu8%3E%3E-for-MemSlice"],[550,"impl-From%3CBytes%3E-for-MemSlice"],[632,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[633,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[634,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[635,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[654,"impl-Debug-for-PlSmallStr"],[655,"impl-Display-for-PlSmallStr"],[657,"impl-From%3CCompactString%3E-for-PlSmallStr"],[658,"impl-From%3CString%3E-for-PlSmallStr"],[659,"impl-From%3C%26String%3E-for-PlSmallStr"],[660,"impl-From%3C%26str%3E-for-PlSmallStr"],[661,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[662,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[663,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[664,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[665,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[666,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[667,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[668,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOQCVwAAAAkACwBcAGoAAABsAAEAbwACAHQAGACPAAAAkQAPAKMABQCrAAkAtgAKAMIAAADFAAQAywABAM4AAgDTAAAA1gAAANsAAgDfAAoA6wAAAO0AEQABAQYACgEAAAwBAwASAQMAFwEKACMBGAA+AQEAQQEBAEUBAQBIAQ4AWAEWAHABAgB0AQYAfAEnAKUBAACnAQAAqQEEALABFQDHAQAAyQEEANEBCQDcAQAA3gEDAOMBBwDwAQgA/gEmACYCAQAqAgAALgICADUCAwBAAgMARQICAEkCAABLAgEATgIMAFwCBABjAgUAagICAG4CCQB5AhcAkgIQAKQCCwCxAg0AwAIAAMICBADIAgAAygIAAMwCEwDiAgIA5wIXAAADAAADAwYACwMFABIDAgAWAwAAGAMFAB8DBAAmAwAAKAMDADADAwA2AwsAQwMDAEgDGQBjAwIAZwMAAGkDAQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[405135,202401,55855,84230,9496,3387,8607,28489]}